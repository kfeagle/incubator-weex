/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var __weex_template__ = __webpack_require__(1)
	var __weex_script__ = __webpack_require__(2)
	
	__weex_define__('@weex-component/66b5d0d7a97c55083a15980130591696', [], function(__weex_require__, __weex_exports__, __weex_module__) {
	
	    __weex_script__(__weex_module__, __weex_exports__, __weex_require__)
	    if (__weex_exports__.__esModule && __weex_exports__.default) {
	      __weex_module__.exports = __weex_exports__.default
	    }
	
	    __weex_module__.exports.template = __weex_template__
	
	})
	
	__weex_bootstrap__('@weex-component/66b5d0d7a97c55083a15980130591696',undefined,undefined)

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = {
	  "type": "div",
	  "children": [
	    {
	      "type": "text",
	      "id": "canvas_demo1",
	      "style": {
	        "width": 750,
	        "height": 100,
	        "backgroundColor": "#e0e0e0"
	      },
	      "attr": {
	        "value": "canvas_demo 上边界"
	      }
	    },
	    {
	      "type": "chart",
	      "id": "xx",
	      "attr": {
	        "width": "750",
	        "height": "400"
	      }
	    },
	    {
	      "type": "text",
	      "id": "canvas_demo2",
	      "style": {
	        "width": 750,
	        "height": 100,
	        "backgroundColor": "#e0e0e0"
	      },
	      "attr": {
	        "value": "canvas_demo 下边界"
	      }
	    }
	  ]
	}

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function(module, exports, __weex_require__){'use strict';
	
	var GM = __webpack_require__(3)('g2');
	var cases = __webpack_require__(14);
	module.exports = {
	    ready: function ready() {
	        var url = this.$getConfig().bundleUrl;
	        var caseId = url.match(/\?case=(\d+)/)[1];
	        cases['case' + caseId](GM);
	    }
	
	};}
	/* generated by weex-loader */


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by godsong on 16/12/12.
	 */
	__webpack_require__(4);
	module.exports=__webpack_require__(12);

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var __weex_template__ = __webpack_require__(5)
	var __weex_script__ = __webpack_require__(6)
	
	__weex_define__('@weex-component/chart', [], function(__weex_require__, __weex_exports__, __weex_module__) {
	
	    __weex_script__(__weex_module__, __weex_exports__, __weex_require__)
	    if (__weex_exports__.__esModule && __weex_exports__.default) {
	      __weex_module__.exports = __weex_exports__.default
	    }
	
	    __weex_module__.exports.template = __weex_template__
	
	})


/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = {
	  "type": "gcanvas",
	  "id": "wxc_gcanvas",
	  "style": {
	    "width": function () {return this.width},
	    "height": function () {return this.height},
	    "backgroundColor": "#ffffff"
	  }
	}

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function(module, exports, __weex_require__){'use strict';
	
	var CanvasElement = __webpack_require__(7);
	var Chart = __webpack_require__(12);
	module.exports = {
	    data: function () {return {
	        width: 750,
	        height: 375
	    }},
	    created: function created() {
	
	        CanvasElement.reset();
	    },
	    ready: function ready() {
	        CanvasElement.init(this.$el('wxc_gcanvas')).then(function (context) {
	            Chart.ready(context);
	        });
	    }
	};}
	/* generated by weex-loader */


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by godsong on 16/9/12.
	 */
	var Canvas = __webpack_require__(8);
	var _instanceMap = {};
	function CanvasElement(weexElement, canvasId) {
	    //g2竟然对canvas做深拷贝，用string 绕过他们类型检查的坑，无奈脸
	    var instance = new String();
	    instance.weexElement = weexElement;
	    if (_instanceMap[canvasId]) {
	        instance.weexElement = _instanceMap[canvasId];
	    }
	    else {
	        _instanceMap[canvasId] = instance;
	    }
	
	
	    Object.defineProperties(instance, {
	        'currentStyle': {
	            get: function () {
	                return Object.assign({}, instance.weexElement.classStyle, instance.weexElement.style);
	            }
	        },
	        'offsetWidth': {
	            get: function () {
	                var canvasWidth = parseFloat(instance.weexElement.classStyle['width'] || instance.weexElement.style['width']);
	                return canvasWidth;
	                //return parseFloat(weexElement.classStyle['width']||weexElement.style['width'])
	            }
	        },
	        'offsetHeight': {
	            get: function () {
	                console.log('offsetHeight:', parseFloat(instance.weexElement.classStyle['height'] || instance.weexElement.style['height']))
	                return parseFloat(instance.weexElement.classStyle['height'] || instance.weexElement.style['height'])
	            }
	        }
	    });
	    instance.getContext = function () {
	        return Canvas.getContext('2d')
	    };
	    return instance;
	}
	CanvasElement.init = function (element, canvasId) {
	    //初始化canvas dom 并伪造getElementById和标准的getContext
	    if (_instanceMap[canvasId]) {
	        _instanceMap[canvasId].weexElement = element;
	    }
	    else {
	        _instanceMap[canvasId] = element;
	    }
	
	    return new Promise(function (resolve) {
	        Canvas.start(element.ref, function () {
	            resolve(Canvas.getContext('2d'));
	
	        });
	    })
	};
	
	CanvasElement.reset = function () {
	    Canvas.disable();
	};
	module.exports = CanvasElement;


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/**
	
	gcanvas.js使用说明:
	1、引入gcanvas库
	2、调用gcanvas库的createElement(component)接口，创建一个canvas对象。
	3、调用canvas对象的getContext(param)，获取用于渲染的context。
	
	扩展用法：
	1、对于Android环境，部分机型可能无法运行。建议在页面入口处调用gcanvas库的start(successCallback, errorCallback)函数，进行黑白名单判断。
	2、默认每16ms，会自动下发一次渲染指令。某些特殊场景下，希望自行控制下发频率的，可直接调用context.render()接口。调用后会关闭自动下发的操作，切换成每次主动调用render时才下发。
	
	完整示例如下：
	var libGCanvas = require('../../core/gcanvas');
	libGCanvas.start(function(){
	    nativeLog('gcanvas.start success');
	    var canvasObj = libGCanvas.createElement(gcanvasComponent);
	    var context = canvasObj.getContext('2d');
	    //do any action here
	},function(){
	    nativeLog('gcanvas.start failed');
	}); 
	
	*/
	
	var GBridge = __webpack_require__(9).GBridge;
	var GLog = __webpack_require__(9).GLog;
	//var GContextWebGL = require('./gwebgl');
	var GContext2D = __webpack_require__(11);
	
	///////////////////////////////
	var GSupport = {};
	var model_check;
	var version_check;
	GSupport.renderMode = 0;// 0--RENDERMODE_WHEN_DIRTY, 1--RENDERMODE_CONTINUOUSLY
	GSupport.hybridLayerType = -1;// 0--LAYER_TYPE_NONE 1--LAYER_TYPE_SOFTWARE 2--LAYER_TYPE_HARDWARE. change hybrid layer type from LAYER_TYPE_SOFTWARE to unset, avoid block when use html5 audio.
	GSupport.checkType = 0;// 0--all support, 1--white list check
	GSupport.nativeVer = 0;
	GSupport.defaultHiQualityMode = true; // false-- normal true--hiQuality
	GSupport.supportScroll = false;
	GSupport.newCanvasMode = false;             //true: GCanvasView in Webview
	GSupport.sameLevel = false; //newCanvasMode = true && true: GCanvasView and Webview is same level;
	GSupport.clearColor = "white";
	GSupport.WHITE_LIST = [
	
	    model_check = [
	        function(info) {return info.MODEL == 'GT-I9300';},
	        function(info) {return info.MODEL == 'GT-I9500';},
	        function(info) {return info.MODEL == 'GT-N7108';},
	        function(info) {return info.MODEL == 'HIKe 848A';},
	        function(info) {return info.MODEL == 'HTC 601e';},
	        function(info) {return info.MODEL == 'HUAWEI C8813';},
	        function(info) {return info.MODEL == 'Lenovo K900';},
	        function(info) {return info.MODEL == 'M351';},
	        function(info) {return info.MODEL == 'M51w';},
	        function(info) {return info.MODEL == 'MI 3';},
	        function(info) {return info.MODEL == 'MI 3W';},
	        function(info) {return info.MODEL == 'SM-G9006V';},
	        function(info) {return info.MODEL == 'SM-N9006';}
	    ],
	    version_check = [
	        function(info) {GLog.d("info.OS_RELEASE=" + info.OS_RELEASE); return false;},
	        function(info) {return (info.OS_RELEASE >= '4.1.0')&&( info.OS_RELEASE <= '4.4.2');}
	    ]
	];
	
	
	GSupport.checkList = function(successFunc, failureFunc){
	    var checkType = GSupport.checkType;
	    GLog.d("[checkList] checkType:" + checkType);
	    if (1 == checkType) {//white list check
	        var whitelist = GSupport.WHITE_LIST;
	        var length = whitelist.length;
	        for (var i = 0; i < length; i++) {
	            var lenSub = whitelist[i].length;
	            var found = false;
	            for (var j = 0; j < lenSub; j++){
	                if (whitelist[i][j](GDeviceInfo)) {
	                    found = true;
	                    break;
	                }
	            }
	            if (!found){ // unfound in white list
	                GLog.d("the device is not supported, " + GDeviceInfo.MODEL);
	                failureFunc&&failureFunc();
	                return;
	            }
	        }
	    }
	    successFunc&&successFunc();
	};
	///////////////////////////////
	
	var GDeviceInfo = {};
	var _context = null;
	var _context_type = 0;//0--2d;1--webgl
	///////////////////////////////
	
	var GCanvasPlatform = 2;//0--H5;1--iOS;2--Android
	
	var GCanvas = {
	    start: function (ref, succ, fail) {
	        GLog.d('gcanvas#start=====>>>');
	
	        //bind canvas
	        var config = [];
	        config.push(GSupport.renderMode);
	        config.push(GSupport.hybridLayerType);
	        config.push(GSupport.supportScroll);
	        config.push(GSupport.newCanvasMode);
	        config.push(1);//compatible. 1 will call GCanvasJNI.getAllParameter("gcanvas");
	        config.push(GSupport.clearColor);
	        config.push(GSupport.sameLevel);
	        GBridge.callEnable(ref,config,function(e){});
	
	        
	
	        //get device
	        GBridge.getDeviceInfo(function(e){//这里是异步操作
	
	
	
	          if (e.data && e.data.platform == "iOS"){
	              GCanvasPlatform = 1;
	
	          }else{
	            GCanvasPlatform = 2;
	
	          }
	          console.log('GCanvasPlatform = ' + GCanvasPlatform);
	          succ();
	          /*
	            if(e && e.result === 'success'){
	                if (e.data && e.data.platform == "iOS"){
	                    GCanvasPlatform = 1;
	                    succ();
	                }else{
	                    var info = JSON.parse(e.data);
	                    if(info.GCANVASLIBENABLE && info.IS_AVAILABLE){
	                        GDeviceInfo = info;
	                        GSupport.checkList(succ,fail);
	                    }else{
	                        fail&&fail();
	                    }
	                }
	            }else{
	                fail&&fail();
	            }
	            */
	        });
	    },
	
	    getContext: function (contextID) {
	        GLog.d('gcanvas#getContext=====>>>');
	        if (_context){
	            return _context;//unsupport change type after create
	        }
	
	        if (contextID.match(/webgl/i)){
	            _context = new GContextWebGL();
	            _context_type = 1;
	        }else{
	            _context = new GContext2D();
	            _context_type = 0;
	        }
	
	        GBridge.setContextType(_context_type);
	
	        if (!_context.timer) {
	            _context.timer = setInterval(this.render.bind(this), 16);            
	        }
	        
	        return _context;
	    },
	    render: function(){
	        // GLog.d('[GCanvas::render] start...');
	        _context.render("auto");
	    },
	
	    disable: function(){
	        GLog.d('gcanvas#disable=====>>>');
	        GBridge.callDisable();
	    },
	
	    setHiQuality: function(quality){
	        GLog.d('gcanvas#setHiQuality=====>>>' + quality);
	        GBridge.setHiQuality(quality);
	
	    },
	
	    setLogLevel:function(level){
	        GLog.d('gcanvas#setLogLevel=====>>> ' + level);
	        GBridge.setLogLevel(level);
	    }
	};
	
	module.exports = GCanvas;


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/////////////////////////////////////////////////////////////////
	//GBridge
	/////////////////////////////////////////////////////////////////
	var GLog = __webpack_require__(10).GLog;
	
	var inWeex = typeof callNative !== 'undefined';
	var debug = true;
	var canvasModule;
	
	/*
	__weex_define__('@weex-temp/x', function (__weex_require__) {
	    canvasModule = __weex_require__('@weex-module/gcanvas');
	});
	*/
	
	//canvasModule=typeof weex!=='undefined'?weex.requireModule('gcanvas'):__weex_require__('@weex-module/gcanvas');
	canvasModule = (typeof weex!=='undefined'&&weex.requireModule) ? ( weex.requireModule('gcanvas') ) : (__weex_require__('@weex-module/gcanvas') );
	
	var GBridge = {
	    /**执行render指令*/
	    callRender: function (commands) {
	        if (!inWeex) {
	            return;
	        }
	        GLog.d('bridge#callRender() commands is ' + commands);
	        canvasModule.render([commands]);
	    },
	
	    /**预加载图片*/
	    preLoadImage: function (src, cb) {
	        if (!inWeex) {
	            return;
	        }
	        GLog.d('bridge#preLoadImage() image url is ' + src);
	        canvasModule.preLoadImage(src, function (e) {
	            cb && cb(e);
	        });
	    },
	
	    /**
	     * 获取canvas引用
	     * @param ref wx-canvas 引用
	     * @param configArray 配置参数
	     **/
	    callEnable: function (ref, configArray, callback) {
	        if (!inWeex) {
	            return;
	        }
	        var params = {
	            componentId: ref,
	            config:configArray
	        };
	        canvasModule.enable(params, function (e) {
	            GLog.d('bridge#callEnable() return val:' + JSON.stringify(e));
	            callback && callback(e);
	        });
	    },
	
	
	    /**
	     * 释放gcanvas引擎
	     * @param ref wx-canvas 引用
	     * @param configArray 配置参数
	     **/
	    callDisable: function () {
	        if (!inWeex) {
	            return;
	        }
	        var params = {
	            
	        };
	        canvasModule.disable(params, function(e){
	            GLog.d('bridge#callDisable() return val:' + JSON.stringify(e));
	        });
	    },
	
	    /**
	     * 获取设备信息(android)
	     * @param callback 设备信息
	     **/
	    getDeviceInfo: function (callback) {
	        if (!inWeex) {
	            return;
	        }
	        canvasModule.getDeviceInfo({}, function (e) {
	            GLog.d('bridge#getDeviceInfo() return val:' + JSON.stringify(e));
	            callback && callback(e);
	        });
	    },
	
	    /**
	     *
	     * 设置context类型,2d或者webgl
	     *
	     * @param context_type 0代表2d,1代表3d
	     * */
	    setContextType: function (context_type){
	        if(context_type != 0 && context_type != 1){
	            GLog.d('bridge#setContextType(): invalid context type===>' + context_type);
	            return;
	        }
	        GLog.d('bridge#setContextType(): context type is ' + context_type);
	        canvasModule.setContextType(context_type);
	    },
	
	    /**
	     *
	     * 设置日志级别
	     *
	     * @param context_type 0代表2d,1代表3d
	     * */
	    setLogLevel: function (level){
	        GLog.d('bridge#setLogLevel(): native logLevel ' + level);
	        canvasModule.setLogLevel(level);
	    },
	
	    /**
	     *
	     * 设置opengl渲染质量
	     *
	     * @param context_type 0代表2d,1代表3d
	     * */
	    setHiQuality: function (quality){
	        GLog.d('bridge#setHiQuality(): quality: ' + quality);
	        canvasModule.setHiQuality(quality);
	    }
	};
	
	
	module.exports = {
	    GBridge: GBridge,
	    GLog: GLog
	};


/***/ },
/* 10 */
/***/ function(module, exports) {

	/////////////////////////////////////////////////////////////////
	//GLog
	/////////////////////////////////////////////////////////////////
	var GLOG_DEBUG	= 0;
	var GLOG_INFO   = 1;
	var GLOG_WARN   = 2;
	var GLOG_ERROR	= 3;
	var GLOG_NULL   = -1;
	
	var GLog = {};
	GLog._nullFunc = function(){};
	GLog.d = GLog._nullFunc;
	GLog.i = GLog._nullFunc
	GLog.w = GLog._nullFunc;
	GLog.e = GLog._nullFunc;
	GLog._nativeEnable = false;
	GLog._setNativeLevel = function(level){
		/*
		if (!this._nativeEnable)
			return;
		if (level == GLOG_DEBUG)
			GCanvas._toNative(null, null, 'GCanvas', 'setLogLevel', [ "debug" ]);
		else if (level == GLOG_INFO)
			GCanvas._toNative(null, null, 'GCanvas', 'setLogLevel', [ "info" ]);
		else if (level == GLOG_WARN)
			GCanvas._toNative(null, null, 'GCanvas', 'setLogLevel', [ "warn" ]);
		else if (level == GLOG_ERROR)
			GCanvas._toNative(null, null, 'GCanvas', 'setLogLevel', [ "error" ]);
		else 
			GCanvas._toNative(null, null, 'GCanvas', 'setLogLevel', [ "fatal" ]);	
	     */
	}
	GLog._refresh = function(){
	
		
		if (this.enable == false){
			this._setNativeLevel(GLOG_NULL);
			this.d = this._nullFunc;
			this.i = this._nullFunc
			this.w = this._nullFunc;
			this.e = this._nullFunc;
		}
		else
		{
			if (this.level <= GLOG_ERROR)
				this.e = function(msg){ console.error(msg);};
			else
				this.e = this._nullFunc;
				
			if (this.level <= GLOG_WARN)
				this.w = function(msg){ console.warn(msg);};
			else
				this.w = this._nullFunc;
			
			if (this.level <= GLOG_INFO)
				this.i = function(msg){ console.info(msg);
					var args = {
						msg:msg
					}
				//WindVane.call("GLog", "writeLog", args || {}, null, null);
			};
			else
				this.i = this._nullFunc;
			
			if (this.level <= GLOG_DEBUG)
				this.d = function(msg){ console.info(msg);
					var args = {
						msg:msg
					}
				//WindVane.call("GLog", "writeLog", args || {}, null, null);
			};
			else
				this.d = this._nullFunc;
			
			this._setNativeLevel(this.level);	
		}
	}
	GLog.enable = function(){
		this.enable = true;
		this._refresh();
	}
	GLog.disable = function(){
		this.enable = false;
		this._refresh();
	}
	GLog.setLevel = function(level){
		console.info("[setLevel] "+ this.level + "=>" + level);
		this.level = level;
		this.enable = true;
		this._refresh();
	}
	
	//GLog.setLevel(GLOG_WARN);
	GLog.setLevel(GLOG_DEBUG);
	
	module.exports.GLog = GLog

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var GBridge = __webpack_require__(9).GBridge;
	var GLog = __webpack_require__(9).GLog;
	
	function GContext2D() {
	    this._drawCommands = "";
	    this._globalAlpha = 1.0;
	    this._fillStyle = "rgb(0,0,0)";
	    this._strokeStyle = "rgb(0,0,0)";
	    this._lineWidth = 1;
	    this._lineCap = "butt";
	    this._lineJoin= "miter";
	    this._miterLimit = 10;
	    this._globalCompositeOperation = "source-over";
	    this._textAlign = "start";
	    this._textBaseline = "alphabetic";
	    this._font = "10px sans-serif";
	    this._images = {};
	    this._canvases1 = {};
	    this._canvases2 = {};
	    this._getImageData = new Array();
	
	//    GCanvas._forbiddenAutoReplaceCanvas =true;
	//    this._apiCanvas  = document.createElement('canvas');
	//    GCanvas._forbiddenAutoReplaceCanvas =false;
	//    console.error("apicanvas="+this._apiCanvas);
	//    this._apiContext = this._apiCanvas.getContext("2d");
	//    this._apiContext.font = this._font;
	
	    this._savedGlobalAlpha =[];
	    this.timer =null;
	}
	
	
	
	function FillStylePattern(img, pattern) {
	    this._style = pattern;
	    this._img = img;
	}
	
	function FillStyleLinearGradient(x0, y0, x1, y1) {
	    this._start_pos = { _x : x0, _y : y0 };
	    this._end_pos = { _x : x1, _y : y1 };
	    this._stop_count = 0;
	    this._stops = [0, 0, 0, 0, 0];
	}
	
	FillStyleLinearGradient.prototype.addColorStop = function(pos, color) {
	    if (this._stop_count < 5 && 0.0 <= pos && pos <= 1.0) {
	        this._stops[this._stop_count] = { _pos : pos, _color : color };
	        this._stop_count++;
	    }
	}
	
	function FillStyleRadialGradient(x0, y0, r0, x1, y1, r1) {
	    this._start_pos = { _x : x0, _y : y0, _r : r0 };
	    this._end_pos = { _x : x1, _y : y1, _r : r1 };
	    this._stop_count = 0;
	    this._stops = [0, 0, 0, 0, 0];
	}
	
	FillStyleRadialGradient.prototype.addColorStop = function(pos, color) {
	    if (this._stop_count < 5 && 0.0 <= pos && pos <= 1.0) {
	        this._stops[this._stop_count] = { _pos : pos, _color : color };
	        this._stop_count++;
	    }
	}
	
	/**
	 * Represents the alpha value to be used with drawing commands where 1 is
	 * completely visible and 0 is fully transparent.
	 *
	 * @type {number}
	 * @name GContext2D#globalAlpha
	 */
	Object.defineProperty(GContext2D.prototype, "globalAlpha", {
	    get : function() {
	        return this._globalAlpha;
	    },
	    set : function(value) {
	        // if (this._globalAlpha != value) {
	        this._globalAlpha = value;
	        this._drawCommands = this._drawCommands.concat("a" + value.toFixed(6)
	                + ";");
	        // }
	    }
	});
	
	/**
	 * Represents the color or style to use inside shapes. It can only be a
	 * string which must be parsed as CSS <color> value for now.
	 *
	 * @type {string}
	 * @name GContext2D#fillStyle
	 * @example // set context fillStyle context.fillStyle = 'rgb(121,194,245)';
	 */
	Object.defineProperty(GContext2D.prototype, "fillStyle", {
	    get : function() {
	        return this._fillStyle;
	    },
	    set : function(value) {
	        this._fillStyle = value;
	
	        if (typeof(value) == 'string') {
	            this._drawCommands = this._drawCommands.concat("F" + value + ";");
	        }
	        else if (value instanceof FillStylePattern) {
	            if (value._img instanceof Image) {
	                if (!(value._img.src in this._images)) {
	                    var new_image = GCanvas.createImage();
	                    new_image.width = value._img.width;
	                    new_image.height = value._img.height;
	                    new_image.src = value._img.src;
	                    new_image.complete = value._img.complete;
	                    this._images[value._img.src] = new_image;
	                } else {
	                    this._drawCommands = this._drawCommands.concat("G" + this._images[value._img.src]._id + "," + value._style + ";");
	                 }
	            }
	            else if (value._img instanceof GCanvasImage){
	                this._drawCommands = this._drawCommands.concat("G" + value._img._id + "," + value._style + ";");
	            }
	        }
	        else if (value instanceof FillStyleLinearGradient) {
	            var command = "D" + value._start_pos._x + "," + value._start_pos._y + ","
	                + value._end_pos._x + "," + value._end_pos._y + "," + value._stop_count;
	
	            for (var i = 0; i < value._stop_count; ++i) {
	                command += ("," + value._stops[i]._pos + "," + value._stops[i]._color);
	            }
	            this._drawCommands = this._drawCommands.concat(command + ";");
	            //console.log('createLinearGradient command -> ' + command);
	        }
	        else if (value instanceof FillStyleRadialGradient) {
	            var command = "H" + value._start_pos._x + "," + value._start_pos._y + "," + value._start_pos._r + ","
	                + value._end_pos._x + "," + value._end_pos._y + "," + value._end_pos._r + "," + value._stop_count;
	
	            for (var i = 0; i < value._stop_count; ++i) {
	                command += ("," + value._stops[i]._pos + "," + value._stops[i]._color);
	            }
	            this._drawCommands = this._drawCommands.concat(command + ";");
	            //console.log('FillStyleRadialGradient command -> ' + command);
	        }
	    }
	});
	
	/**
	 * Represents the color or style for the lines. It can only be a string
	 * which must be parsed as CSS <color> value for now.
	 *
	 * @type {string}
	 * @name GContext2D#strokeStyle
	 * @example // set context strokeStyle context.strokeStyle = 'rgb(121,194,245)';
	 */
	Object.defineProperty(GContext2D.prototype, "strokeStyle", {
	    get : function() {
	        return this._strokeStyle;
	    },
	    set : function(value) {
	        this._strokeStyle = value;
	
	        if (typeof(value) == 'string') {
	            this._drawCommands = this._drawCommands.concat("S" + value + ";");
	        }
	        else if (value instanceof FillStylePattern) {
	            if (value._img instanceof Image) {
	                if (!(value._img.src in this._images)) {
	                    var new_image = GCanvas.createImage();
	                    new_image.width = value._img.width;
	                    new_image.height = value._img.height;
	                    new_image.src = value._img.src;
	                    new_image.complete = value._img.complete;
	                    this._images[value._img.src] = new_image;
	                } else {
	                    this._drawCommands = this._drawCommands.concat("G" + this._images[value._img.src]._id + "," + value._style + ";");
	                 }
	            }
	            else if (value._img instanceof GCanvasImage){
	                this._drawCommands = this._drawCommands.concat("G" + value._img._id + "," + value._style + ";");
	            }
	        }
	        else if (value instanceof FillStyleLinearGradient) {
	            var command = "D" + value._start_pos._x + "," + value._start_pos._y + ","
	                + value._end_pos._x + "," + value._end_pos._y + "," + value._stop_count;
	
	            for (var i = 0; i < value._stop_count; ++i) {
	                command += ("," + value._stops[i]._pos + "," + value._stops[i]._color);
	            }
	            this._drawCommands = this._drawCommands.concat(command + ";");
	            //console.log('createLinearGradient command -> ' + command);
	        }
	        else if (value instanceof FillStyleRadialGradient) {
	            var command = "H" + value._start_pos._x + "," + value._start_pos._y + "," + value._start_pos._r + ","
	                + value._end_pos._x + "," + value._end_pos._y + "," + value._end_pos._r + "," + value._stop_count;
	
	            for (var i = 0; i < value._stop_count; ++i) {
	                command += ("," + value._stops[i]._pos + "," + value._stops[i]._color);
	            }
	            this._drawCommands = this._drawCommands.concat(command + ";");
	            //console.log('FillStyleRadialGradient command -> ' + command);
	        }
	    }
	});
	
	/**
	 * Represents the width of the lines.
	 *
	 * @type {number}
	 * @name GContext2D#lineWidth
	 * @example // set context lineWidth context.lineWidth = 2;
	 */
	Object.defineProperty(GContext2D.prototype, "lineWidth", {
	    get : function() {
	        return this._lineWidth;
	    },
	    set : function(value) {
	        this._lineWidth = value;
	        this._drawCommands = this._drawCommands.concat("W" + value
	                + ";");
	    }
	});
	/**
	 * The lineCap property sets or returns the style of the end caps for a line.
	 *
	 * @type {number}
	 * @name GContext2D#lineCap
	 * @example // set context lineCap context.lineCap="round";
	 */
	Object.defineProperty(GContext2D.prototype, "lineCap", {
	    get : function() {
	        return this._lineCap;
	    },
	    set : function(value) {
	        this._lineCap = value;
	        this._drawCommands = this._drawCommands.concat("C" + value + ";");
	    }
	});
	
	
	/**
	 * Sets or returns the type of corner created, when two lines meet
	 *
	 * @type {number}
	 * @name GContext2D#lineJoin
	 * @example // set context lineJoin context.lineJoin="round";
	 */
	Object.defineProperty(GContext2D.prototype, "lineJoin", {
	    get : function() {
	        return this._lineJoin;
	    },
	    set : function(value) {
	        this._lineJoin = value;
	        this._drawCommands = this._drawCommands.concat("J" + value + ";");
	    }
	});
	
	
	/**
	 * Sets or returns the maximum miter length
	 *
	 * @type {number}
	 * @name GContext2D#miterLimit
	 * @example // set context miterLimit context.miterLimit=10;
	 */
	Object.defineProperty(GContext2D.prototype, "miterLimit", {
	    get : function() {
	        return this._miterLimit;
	    },
	    set : function(value) {
	        this._miterLimit = value;
	        this._drawCommands = this._drawCommands.concat("M" + value + ";");
	    }
	});
	
	/**
	 * Represents the globalCompositeOperation value to be used with drawing
	 * commands where 1 is completely visible and 0 is fully transparent.
	 *
	 * @type {number}
	 * @name GContext2D#globalCompositeOperation
	 */
	Object.defineProperty(GContext2D.prototype, "globalCompositeOperation", {
	    get : function() {
	        return this._globalCompositeOperation;
	    },
	
	    set : function(value) {
	        // if (this._globalCompositeOperation != value) {
	
	        this._globalCompositeOperation = value;
	        var mode = 0;
	        switch (value) {
	        case "source-over":
	            mode = 0;
	            break;
	        case "source-atop":
	            mode = 5;
	            break;
	        case "source-in":
	            mode = 0;
	            break;
	        case "source-out":
	            mode = 2;
	            break;
	        case "destination-over":
	            mode = 4;
	            break;
	        case "destination-atop":
	            mode = 4;
	            break;
	        case "destination-in":
	            mode = 4;
	            break;
	        case "destination-out":
	            mode = 3;
	            break;
	        case "lighter":
	            mode = 1;
	            break;
	        case "copy":
	            mode = 2;
	            break;
	        case "xor":
	            mode = 6;
	            break;
	        default:
	            mode = 0;
	        }
	
	        this._drawCommands = this._drawCommands.concat("B" + mode + ";");
	        // }
	    }
	});
	
	/**
	 * Represents the textAlign value to be used with drawing commands
	 *
	 * @type {number}
	 * @name GContext2D#textAlign
	 */
	Object.defineProperty(GContext2D.prototype, "textAlign", {
	    get : function() {
	        return this._textAlign;
	    },
	
	    set : function(value) {
	        // if (this._textAlign != value) {
	        this._textAlign = value;
	        var Align = 0;
	        switch (value) {
	        case "start":
	            Align = 0;
	            break;
	        case "end":
	            Align = 1;
	            break;
	        case "left":
	            Align = 2;
	            break;
	        case "center":
	            Align = 3;
	            break;
	        case "right":
	            Align = 4;
	            break;
	        default:
	            Align = 0;
	        }
	
	        this._drawCommands = this._drawCommands.concat("A" + Align + ";");
	        // }
	    }
	
	});
	
	/**
	 * Represents the _textBaseline value to be used with drawing commands
	 *
	 * @type {number}
	 * @name GContext2D#_textBaseline
	 */
	Object.defineProperty(GContext2D.prototype, "textBaseline", {
	    get : function() {
	        return this._textBaseline;
	    },
	
	    set : function(value) {
	        this._textBaseline = value;
	        var baseline = 0;
	        switch (value) {
	        case "alphabetic":
	            baseline = 0;
	            break;
	        case "middle":
	            baseline = 1;
	            break;
	        case "top":
	            baseline = 2;
	            break;
	        case "hanging":
	            baseline = 3;
	            break;
	        case "bottom":
	            baseline = 4;
	            break;
	        case "ideographic":
	            baseline = 5;
	            break;
	        default:
	            baseline = 0;
	            break;
	        }
	
	        this._drawCommands = this._drawCommands.concat("E" + baseline + ";");
	    }
	
	});
	
	/**
	 * Represents the textAlign value to be used with drawing commands
	 *
	 * @type {number}
	 * @name GContext2D#textAlign
	 */
	Object.defineProperty(GContext2D.prototype, "font", {
	    get : function() {
	        return this._font;
	    },
	    set : function(value) {
	        // if (this._font != value) {
	        this._font = value;
	        //this._apiContext.font = this._font;
	        this._drawCommands = this._drawCommands.concat("j" + value + ";");
	        // }
	    }
	
	});
	
	/**
	 * Loads an image into the plugin to be used as a texture in the GCanvas.
	 * Generally this method is never called directly. Instead, it is called
	 * indirectly through GCanvasImage instances upon setting their
	 * {@link GCanvasImage#src|GCanvasImage.src} property.
	 *
	 * @param {GCanvasImage}
	 *            image The image to be loaded into the GCanvas plugin.
	 * @param {function}
	 *            [successCallback] A callback that is fired when the image has
	 *            been successfully loaded.
	 * @param {function}
	 *            [errorCallback] A callback that is fired when there was an
	 *            error in loading the image.
	 * @example // create a new image and load // it from a relative URL path
	 *          var myImage = GCanvas.createImage(); myImage.src =
	 *          "images/spritesheet.jpg"; // calls loadTexture for you
	 * @private
	 */
	GContext2D.prototype.loadTexture = function(image, successCallback, errorCallback) {
	    // if (successCallback && typeof successCallback !== 'function') {
	    //     throw new Error(
	    //             'GContext2D.loadTexture failure: successCallback parameter not a function');
	    // }
	    // if (errorCallback && typeof errorCallback !== 'function') {
	    //     throw new Error(
	    //             'GContext2D.loadTexture failure: errorCallback parameter not a function');
	    // }
	
	    // GCanvas._toNative(successCallback, errorCallback, 'GCanvas',
	    //         'loadTexture', [ image.src, image._id ]);
	};
	
	/**
	 * Unloads an image from the GCanvas plugin. Generally this method is
	 * never called directly. Instead, it is called indirectly through
	 * GCanvasImage instances upon setting their
	 * {@link GCanvasImage#src|GCanvasImage.src} property to a false value
	 * such as <code>null</code> or an empty string (<code>""</code>).
	 *
	 * @param {GCanvasImage}
	 *            image The image to be unloaded from the GCanvas plugin.
	 * @example // unload an image from memory myImage.src = null; // calls
	 *          unloadTexture for you
	 * @private
	 */
	GContext2D.prototype.unloadTexture = function(image) {
	    // GCanvas._toNative(null, null, 'GCanvas', 'unloadTexture',
	    //         [ image._id ]);
	};
	
	/**
	 * Defines the 2D matrix transform applied to drawings within the context.
	 *
	 * @param {number}
	 *            a The value that affects the positioning of pixels along the x
	 *            axis when scaling or rotating the context.
	 * @param {number}
	 *            b The value that affects the positioning of pixels along the y
	 *            axis when rotating or skewing the context.
	 * @param {number}
	 *            c The value that affects the positioning of pixels along the x
	 *            axis when rotating or skewing the context.
	 * @param {number}
	 *            d The value that affects the positioning of pixels along the y
	 *            axis when scaling or rotating the context.
	 * @param {number}
	 *            tx The distance by which to translate the context along the x
	 *            axis.
	 * @param {number}
	 *            ty The distance by which to translate the context along the y
	 *            axis.
	 */
	GContext2D.prototype.setTransform = function(a, b, c, d, tx, ty) {
	    this._drawCommands = this._drawCommands.concat("t"
	            + (a === 1 ? "1" : a.toFixed(6)) + ","
	            + (b === 0 ? "0" : b.toFixed(6)) + ","
	            + (c === 0 ? "0" : c.toFixed(6)) + ","
	            + (d === 1 ? "1" : d.toFixed(6)) + "," + tx + "," + ty + ";");
	};
	
	/**
	 * Defines an added 2D matrix transform applied to drawings within the
	 * context.
	 *
	 * @param {number}
	 *            a The value added to the value that affects the positioning of
	 *            pixels along the x axis when scaling or rotating the context.
	 * @param {number}
	 *            b The value added to the value that affects the positioning of
	 *            pixels along the y axis when rotating or skewing the context.
	 * @param {number}
	 *            c The value added to the value that affects the positioning of
	 *            pixels along the x axis when rotating or skewing the context.
	 * @param {number}
	 *            d The value added to the value that affects the positioning of
	 *            pixels along the y axis when scaling or rotating the context.
	 * @param {number}
	 *            tx The value added to the distance by which to translate the
	 *            context along the x axis.
	 * @param {number}
	 *            ty The value added to the distance by which to translate the
	 *            context along the y axis.
	 */
	GContext2D.prototype.transform = function(a, b, c, d, tx, ty) {
	    this._drawCommands = this._drawCommands.concat("f"
	            + (a === 1 ? "1" : a.toFixed(6)) + ","
	            + (b === 0 ? "0" : b.toFixed(6)) + ","
	            + (c === 0 ? "0" : c.toFixed(6)) + ","
	            + (d === 1 ? "1" : d.toFixed(6)) + "," + tx + "," + ty + ";");
	};
	
	/**
	 * Restores the 2D matrix transform to the identity matrix. This is
	 * equivalent to calling <code>context.setTransform(1,0,0,1,0,0)</code>.
	 */
	GContext2D.prototype.resetTransform = function() {
	    this._drawCommands = this._drawCommands.concat("m;");
	};
	
	/**
	 * Scales the 2D matrix transform along the x and y axes.
	 *
	 * @param {number}
	 *            a The value added to the value that affects the positioning of
	 *            pixels along the x axis when scaling or rotating the context.
	 * @param {number}
	 *            d The value added to the value that affects the positioning of
	 *            pixels along the y axis when scaling or rotating the context.
	 */
	GContext2D.prototype.scale = function(a, d) {
	    this._drawCommands = this._drawCommands.concat("k" + a.toFixed(6) + ","
	            + d.toFixed(6) + ";");
	};
	
	/**
	 * Rotates the 2D matrix transform by a specified number of radians.
	 *
	 * @param {number}
	 *            angle The value in radians to rotate the context.
	 */
	GContext2D.prototype.rotate = function(angle) {
	    this._drawCommands = this._drawCommands
	            .concat("r" + angle.toFixed(6) + ";");
	};
	
	/**
	 * Moves the 2D matrix transform along the x and y axes.
	 *
	 * @param {number}
	 *            tx The value added to the distance by which to translate the
	 *            context along the x axis.
	 * @param {number}
	 *            ty The value added to the distance by which to translate the
	 *            context along the y axis.
	 */
	GContext2D.prototype.translate = function(tx, ty) {
	    this._drawCommands = this._drawCommands.concat("l" + tx + "," + ty + ";");
	};
	
	/**
	 * Sets a save point for the current context transform. This allows you to
	 * arbitrarily modify the transform and restore it back to its to its
	 * original state at the time save() was called by using restore().
	 *
	 * @see GContext2D#restore
	 */
	GContext2D.prototype.save = function() {
	    this._savedGlobalAlpha.push(this._globalAlpha);
	    this._drawCommands = this._drawCommands.concat("v;");
	};
	
	/**
	 * Restores the state of the context transform to the state at the point in
	 * time when save() was last called.
	 *
	 * @see GContext2D#save
	 */
	GContext2D.prototype.restore = function() {
	    this._drawCommands = this._drawCommands.concat("e;");
	    this._globalAlpha = this._savedGlobalAlpha.pop();
	};
	
	
	GContext2D.prototype.drawImage = function(image, // image
	sx, sy, sw, sh, // source (or destination if fewer args)
	dx, dy, dw, dh) { // destination
	
	    GLog.d("[GContext2D.drawImage] start...");
	
	    if (typeof image !== 'string') {
	        image = image.src;
	    }
	    
	    GBridge.preLoadImage(image);
	
	    var numArgs = arguments.length;
	
	    this._drawCommands += ("d" + numArgs + "," + image + "," 
	            + sx + "," + sy + "," + sw + "," + sh + "," 
	            + dx + "," + dy + "," + dw + "," + dh + ";");
	};
	
	/**
	 * Informs the drawing context that drawing commands have completed for the
	 * current frame and the should be sent to the GCanvas plugin for drawing
	 * to the screen.
	 * <p>
	 * This method is unique to GContext2D and does not exist within the HTML
	 * 2D context, so the utility method {@link GCanvas.render} should be
	 * used to make it easy to call or not call this method depending on the
	 * context you are currently working with.
	 * </p>
	 *
	 * @example // makes necessary GCanvas render call // if canvas being
	 *          used is GCanvas var myCanvas = GCanvas.create(); var
	 *          myContext = myCanvas.getContext("2d");
	 *  // ... myContext.translate(10,10); myContext.rotate(Math.PI); //
	 * ...
	 *  // after all context calls are complete // for the current frame:
	 * GCanvas.render(); // calls GContext2D.render()
	 */
	
	GContext2D.prototype.render = function(flag) {
	    if (typeof flag === "undefined"){
	        clearInterval(this.timer);
	        this.timer = null;
	    }
	    var commands = this._drawCommands;
	    this._drawCommands = "";
	    if (commands != null && commands != "") {
	        GLog.d("GContext2D#render() called, commands is "+ commands);
	        GBridge.callRender(commands)
	    }
	};
	
	/**
	 * Implementation of GCanvas.capture.
	 *
	 * @private
	 */
	GContext2D.prototype.capture = function(x, y, w, h, fileName, successCallback, errorCallback) {
	    // if (successCallback && typeof successCallback !== 'function') {
	    //     throw new Error('successCallback parameter not a function');
	    // }
	    // if (errorCallback && typeof errorCallback !== 'function') {
	    //     throw new Error('errorCallback parameter not a function');
	    // }
	
	    // GCanvas._toNative(successCallback, errorCallback, 'GCanvas',
	    //         'capture', [ x, y, w, h, fileName ]);
	};
	
	
	GContext2D.prototype.createPattern = function(img, pattern) {
	    return new FillStylePattern(img, pattern);
	};
	
	/**
	 * Implementation of GCanvas.createLinearGradient(x0, y0, x1, y1).
	 *
	 * @private
	 */
	 GContext2D.prototype.createLinearGradient = function(x0, y0, x1, y1) {
	    return new FillStyleLinearGradient(x0, y0, x1, y1);
	};
	
	/**
	 * Implementation of GCanvas.createRadialGradient(x0, y0, x1, y1).
	 *
	 * @private
	 */
	 GContext2D.prototype.createRadialGradient = function(x0, y0, r0, x1, y1, r1) {
	    return new FillStyleRadialGradient(x0, y0, r0, x1, y1, r1);
	};
	
	GContext2D.prototype.strokeRect = function(x, y, w, h, successCallback,
	        errorCallback) {
	    this._drawCommands = this._drawCommands.concat("s" + x + "," + y + "," + w
	            + "," + h + ";");
	};
	
	GContext2D.prototype.clearRect = function(x, y, w, h, successCallback,
	        errorCallback) {
	    // TODO: enable it later.
	    this._drawCommands = this._drawCommands.concat("c" + x + "," + y + "," + w
	        + "," + h + ";");
	}
	
	GContext2D.prototype.clip = function(successCallback, errorCallback) {
	    this._drawCommands = this._drawCommands.concat("p;");
	}
	
	GContext2D.prototype.resetClip = function(successCallback, errorCallback) {
	    this._drawCommands = this._drawCommands.concat("q;");
	}
	
	GContext2D.prototype.closePath = function(successCallback, errorCallback) {
	    this._drawCommands = this._drawCommands.concat("o;");
	}
	
	GContext2D.prototype.moveTo = function(x, y, successCallback, errorCallback) {
	    this._drawCommands = this._drawCommands.concat("g" + x.toFixed(6) + ","
	            + y.toFixed(6) + ";");
	}
	
	GContext2D.prototype.lineTo = function(x, y, successCallback, errorCallback) {
	    this._drawCommands = this._drawCommands.concat("i" + x.toFixed(6) + ","
	            + y.toFixed(6) + ";");
	}
	
	GContext2D.prototype.quadraticCurveTo = function(cpx, cpy, x, y,
	        successCallback, errorCallback) {
	    this._drawCommands = this._drawCommands.concat("u" + cpx + "," + cpy + ","
	            + x + "," + y + ";");
	}
	
	GContext2D.prototype.bezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y,
	        successCallback, errorCallback) {
	    this._drawCommands = this._drawCommands.concat("z" + cp1x + "," + cp1y
	            + "," + cp2x + "," + cp2y + "," + x + "," + y + ";");
	}
	
	GContext2D.prototype.arcTo = function(x1, y1, x2, y2, radius,
	        successCallback, errorCallback) {
	    this._drawCommands = this._drawCommands.concat("h" + x1 + "," + y1 + ","
	            + x2 + "," + y2 + "," + radius + ";");
	}
	
	/**
	 * Resets the current default path.
	 *
	 * @param null
	 */
	GContext2D.prototype.beginPath = function() {
	    this._drawCommands = this._drawCommands.concat("b;");
	};
	
	/**
	 * Paint the specified rectangular area using the fillStyle. If either
	 * height or width are zero, this method has no effect.
	 *
	 * @param {number}
	 *            x The x location of the source clipping rectangle
	 * @param {number}
	 *            y The y location of the source clipping rectangle
	 * @param {number}
	 *            w The width of the rectangle
	 * @param {number}
	 *            h The height of the rectangle
	 */
	GContext2D.prototype.fillRect = function(x, y, w, h) {
	    this._drawCommands = this._drawCommands.concat("n" + x + "," + y + "," + w
	            + "," + h + ";");
	};
	
	/**
	 * Adds a new closed subpath to the path, representing the given rectangle.
	 *
	 * @param {number}
	 *            x The x location of the rectangle
	 * @param {number}
	 *            y The y location of the rectangle
	 * @param {number}
	 *            w The width of the rectangle
	 * @param {number}
	 *            h The height of the rectangle
	 */
	GContext2D.prototype.rect = function(x, y, w, h) {
	    this._drawCommands = this._drawCommands.concat("w" + x + "," + y + "," + w
	            + "," + h + ";");
	};
	
	/**
	 * Fills the subpaths of the current default path or the given path with the
	 * current fill style.
	 *
	 * @param {string}
	 *            path The given path to fill.
	 */
	GContext2D.prototype.fill = function(path) {
	    this._drawCommands = this._drawCommands.concat("L;");
	};
	
	/**
	 * Strokes the subpaths of the current default path or the given path with
	 * the current stroke style.
	 *
	 * @param {string}
	 *            path The given path to stroke.
	 */
	GContext2D.prototype.stroke = function(path) {
	    this._drawCommands = this._drawCommands.concat("x;");
	};
	
	/**
	 * Adds points to the subpath such that the arc described by the
	 * circumference of the circle described by the arguments, starting at the
	 * given start angle and ending at the given end angle, going in the given
	 * direction (defaulting to clockwise), is added to the path, connected to
	 * the previous point by a straight line.
	 *
	 * @param {number}
	 *            x
	 * @param {number}
	 *            y
	 * @param {number}
	 *            radius
	 * @param {number}
	 *            startAngle
	 * @param {number}
	 *            endAngle
	 * @param {string}
	 *            anticlockwise
	 */
	GContext2D.prototype.arc = function(x, y, radius, startAngle, endAngle,
	        anticlockwise) {
	
	    var ianticlockwise = 0;
	    if (anticlockwise)
	        ianticlockwise = 1;
	
	    this._drawCommands = this._drawCommands.concat("y" + x + "," + y + ","
	            + radius + "," + startAngle + "," + endAngle + "," + ianticlockwise
	            + ";");
	};
	
	
	
	GContext2D.prototype.fillText = function(text, x, y) {
	    var tmptext =text.replace(/!/g,"!!");
	        tmptext =tmptext.replace(/,/g,"!,");
	        tmptext =tmptext.replace(/;/g,"!;");
	    this._drawCommands = this._drawCommands.concat("T" + tmptext + "," + x + ","
	            + y + ",0.0;");
	};
	
	GContext2D.prototype.strokeText = function(text, x, y) {
	    this._drawCommands = this._drawCommands.concat("U" + text + "," + x + ","
	            + y + ",0.0;");
	};
	
	
	//TODO:这个api有用需要原生的canvas对象，所以不支持
	GContext2D.prototype.measureText = function(text) {
	    return -1;
	    //return this._apiContext.measureText(text);
	};
	
	GContext2D.prototype.isPointInPath = function(x,y) {
	    return true;
	};
	
	
	/////////////////////////////////////////////////////////////////
	//base64
	/////////////////////////////////////////////////////////////////
	
	function GarrToBase64(buffer) {
	    var binary = ''
	    var bytes = new Uint8Array( buffer )
	    var len = bytes.byteLength;
	    for (var i = 0; i < len; i++) {
	        binary += String.fromCharCode( bytes[ i ] )
	    }
	    return window.btoa( binary );
	}
	
	function _GcharDecode (nChr) {
	  return nChr > 64 && nChr < 91 ?
	      nChr - 65
	    : nChr > 96 && nChr < 123 ?
	      nChr - 71
	    : nChr > 47 && nChr < 58 ?
	      nChr + 4
	    : nChr === 43 ?
	      62
	    : nChr === 47 ?
	      63
	    :
	      0;
	}
	
	function Gbase64ToArr (sBase64, nBlocksSize) {
	  var
	    sB64Enc = sBase64.replace(/[^A-Za-z0-9\+\/]/g, ""), nInLen = sB64Enc.length,
	    nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2, taBytes = new Uint8Array(nOutLen);
	
	  for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {
	    nMod4 = nInIdx & 3;
	    nUint24 |= _GcharDecode(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;
	    if (nMod4 === 3 || nInLen - nInIdx === 1) {
	      for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {
	        taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;
	      }
	      nUint24 = 0;
	
	    }
	  }
	
	  return taBytes;
	}
	
	
	
	/////////////////////////////////////////////////////////////////
	//GCanvasImage
	/////////////////////////////////////////////////////////////////
	function GImageData(w, h) {
	    GLog.d("GImageData wh=" + w + "," + h);
	    this.width = w;
	    this.height = h;
	    this.data = new Uint8Array(w*h*4);
	}
	
	GContext2D.prototype.createImageData = function(w, h) {
	    GLog.d("GContext2D::createImageData wh=" + w + "," + h);
	    return new GImageData(w,h);
	};
	
	
	GContext2D.prototype._putImageData = function(data,dx, dy, sw, sh,  dw, dh){
	    this._drawCommands = this._drawCommands.concat("P"
	        + dx + ","
	        + dy + ","
	        + sw + ","
	        + sh + ","
	        + dw + ","
	        + dh + ","
	        + GarrToBase64(data) + ";");
	}
	GContext2D.prototype.putImageData = function(imgData, x, y, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {
	    GLog.d("GContext2D::putImageData [" + arguments.length + "] "
	        + "dest_xy=(" + x + "," + y + ") "
	        + "dirty_xy=(" + dirtyX + "," + dirtyY + ") "
	        + "dirty_wh=(" + dirtyWidth + "," + dirtyHeight + ") ");
	
	    if (arguments.length <= 3){
	        this._putImageData(imgData.data, x, y, imgData.width, imgData.height, imgData.width, imgData.height);
	    }
	    else{
	        var destData = new Uint8Array(dirtyWidth*dirtyHeight*4);
	        var imgPos;
	        var destPos = 0
	        for(var i =0; i < dirtyHeight; i++){
	            imgPos = (imgData.width*(dirtyY + i) + dirtyX)*4;
	            for(var j=0; j< dirtyWidth; ++j){
	                destData[destPos++]=imgData.data[imgPos++];
	                destData[destPos++]=imgData.data[imgPos++];
	                destData[destPos++]=imgData.data[imgPos++];
	                destData[destPos++]=imgData.data[imgPos++];
	            }
	        }
	
	        this._putImageData(destData, x+dirtyX, y+dirtyY, dirtyWidth, dirtyHeight, dirtyWidth, dirtyHeight);
	    }
	};
	
	
	GContext2D.prototype.getImageDataAsyn = function(x, y, w, h) {
	    return '';
	    // GLog.d("GContext2D::getImageDataAsyn xy=(" + x + "," + y + "), wh=(" + w + ","+ h +")");
	    // GCanvas._instance.getContext().render("auto");
	    // var len = w*h;
	    // var imgData = new GImageData(w,h);
	    // imgData._x = x;
	    // imgData._y = y;
	    // imgData._dataGet = 0;
	    // imgData._split = 0;
	    // var me = this;
	    // me._getImageData.push(imgData);
	
	    // var h2 = Math.floor(262144/w);// 2^18
	    // if (h2 < h)
	    //     imgData._split = 1;
	
	    // function getImageDataAsynSuccess(getData) {
	    //     var destData = me._getImageData[0];
	    //     GLog.d("GContext2D::getImageDataAsyn: dataGet=" + destData._dataGet);
	    //     if (0 == destData._split){// one part
	    //         destData.data = Gbase64ToArr(getData);
	    //         destData._dataGet += destData.data.length;
	    //     }else{// multi parts
	    //         var taBytes  = Gbase64ToArr(getData);
	    //         destData._dataGet += taBytes.length;
	    //         for (var i=0;i<taBytes.length;i++){
	    //             destData.data[destData._dataGet+i] = taBytes[i];
	    //         }
	    //     }
	
	    //     if (destData._dataGet >= (destData._x*destData._y)){
	    //         if (typeof destData.onload === 'function') {
	    //             GLog.d("GContext2D::getImageDataAsyn: callback exec.");
	    //             destData.onload();
	    //         }
	    //         me._getImageData.splice(0,1);//delete first data
	    //     }
	    // }
	
	    // for(var i=0; i<h; i+= h2){
	    //     GCanvas._toNative(getImageDataAsynSuccess, getImageDataAsynSuccess, 'GCanvas',
	    //             'getImageData', [ x, y+i, w, (i+h2>h)?(h-i):h2 ]);
	    // }
	
	
	    // return imgData;
	};
	
	
	
	module.exports = GContext2D;


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by godsong on 16/12/12.
	 */
	var GM = __webpack_require__(13);
	var CanvasElement=__webpack_require__(7)
	var _ready = false;
	var _context;
	var _renderQueue = [];
	var _chartRender = GM.Chart.prototype.render;
	GM.Chart.prototype.render = function () {
	    if (_ready) {
	        _chartRender.call(this);
	        _context.render();
	    }
	    else {
	        _renderQueue.push(this);
	    }
	};
	var G2Chart=GM.Chart;
	GM.Chart=function(config){
	    var canvasElement=new CanvasElement();
	    config.el=canvasElement;
	    return new G2Chart(config);
	}
	module.exports = function (name) {
	    switch (name.toLowerCase()) {
	        case 'g2':
	            return GM;
	        case 'gm':
	            return GM;
	        default:
	            return GM;
	    }
	};
	module.exports.ready = function (context,id,weexElement) {
	    _ready = true;
	    _context = context;
	    var chart;
	    if (_renderQueue.length > 0) {
	        while (chart = _renderQueue.shift()) {
	            _chartRender.call(chart);
	        }
	        context.render();
	    }
	};

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	!function(t,e){ true?module.exports=e():"function"==typeof define&&define.amd?define("GM",[],e):"object"==typeof exports?exports.GM=e():t.GM=e()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return t[r].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){"use strict";var r=n(2);n(88),n(55),n(91),n(68),n(40),t.exports=r},function(t,e,n){var r=n(76);t.exports=r},function(t,e,n){var r={Chart:n(97),Util:n(1),Geom:n(16),Shape:n(35),G:n(7),Global:n(3),Vector2:n(8),Theme:n(39),Scale:n(24),Coord:n(30),Plot:n(38),GuideAssist:n(37),Frame:n(5),AnimateAssist:n(27)};t.exports=r},function(t,e,n){"use strict";var r=n(39),i=n(1),a={sizes:{min:1,max:10},scales:{nice:!0},widthRatio:{column:.5,rose:.999999,multiplePie:.75},animateReduceMultiple:1,lineDash:[5,15]};a.setTheme=function(t){i.mix(this,t)},a.setTheme(r),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(6),a=n(5),s=n(17),o=n(51),c="_origin",u=function(t){u.superclass.constructor.call(this,t)};u.ATTRS={id:"",type:null,container:null,attrs:null,shapeObj:null,createTime:null,styleCfg:{},shapeDatas:[]},r.extend(u,i),r.mixin(u,[o]),r.augment(u,{_mapping:function(t){var e=this,n=t.toJSON(),i=e.get("attrs"),s=[];return r.each(n,function(t){var n={};n[c]=t[c],n.points=t.points,n.nextPoints=t.nextPoints,r.each(i,function(i){var a=i.names,s=e._getAttrValues(i,t);r.each(s,function(t,e){var i=a[e];n[i]=r.isArray(t)&&1===t.length?t[0]:t})}),s.push(n)}),new a(s)},_processShapePoints:function(t){var e,n,i=this,o=i.get("shapeType")||i.get("type"),c=s.getShape(o),u=[];return c._coord=i.getCoord(),r.each(t,function(t){var e=[];t.each(function(t){var n=i.getAttrValue("shape",t),r=i.getShapePointInfo(t),a=c.getShapePoints(n,r);t.points=a,e.push(t)}),e=new a(e),u.push(e)}),r.each(u,function(t,r){e=u[r+1],n=e?e.colArray("points")[0]:null,t.addCol("nextPoints",function(){return n})}),i.set("shapeObj",c),u},_getAttrValues:function(t,e){var n=t.scales,i=[];r.each(n,function(t){var n=t.dim;"identity"===t.type?i.push(t.value):i.push(e[n])});var a=t.mappingValues.apply(t,i);return a},draw:function(t){var e=this,n=[];return t=e.sortFrames(t),t=e.processFrames(t),t=e._processShapePoints(t),r.each(t,function(t,r){t=e.beforeMapping(t),t=e._mapping(t),t.rowCount()&&e.drawFrame(t,r),n.push(t)}),n},sortFrames:function(t){var e=this.getXScale();return r.indexOf(["time","timeCat"],e.type)>-1?this.sort(t):t},processFrames:function(t){return t},beforeMapping:function(t){return t},isInCircle:function(){return this.getCoord().isPolar},getShapePointInfo:function(t){var e,n,r=this.getXScale(),i=this.getYScale();return e=r?this._normalizeValues(t[r.dim],r):t.x?t.x:.1,n=i?this._normalizeValues(t[i.dim],i):t.y?t.y:.1,{x:e,y:n,y0:i?i.scale(this.getYMinValue()):void 0,size:this.getSize(t)}},_normalizeValues:function(t,e){var n=[];return r.isArray(t)?r.each(t,function(t){n.push(e.scale(t))}):n=e.scale(t),n},getDefalutSize:function(){return.1},_getSize:function(t){var e,n=this.getCoord();return e=this.isInCircle()&&!n.isTransposed?(n.get("endAngle")-n.get("startAngle"))*n.get("radius"):this.getDimWidth("x"),t/e},getDimWidth:function(t){var e=this,n=e.getCoord(),r=n.convertPoint({x:0,y:0}),i=n.convertPoint({x:"x"===t?1:0,y:"x"===t?0:1}),a=0;return r&&i&&(a=Math.sqrt(Math.pow(i.x-r.x,2)+Math.pow(i.y-r.y,2))),a},getSize:function(t){var e=this.getAttrValue("size",t);return e=r.isNull(e)?this.getDefalutSize():this._getSize(e)},drawFrame:function(t){var e,n,i,a=this,s=t.toJSON(),o=a.get("container"),c=a.get("shapeObj");r.each(s,function(t,r){a.get("shapeDatas").push(t),t.index=r,e=a.getDrawCfg(t),n=a.getDrawShape(t.shape),i=c.drawShape(n,e,o),a.afterDraw(i,t)})},afterDraw:function(){},getDrawShape:function(t){return r.isArray(t)?t[0]:t},getDrawCfg:function(t){var e=this.get("styleCfg"),n=this.isInCircle(),r=t._origin,i={points:t.points,nextPoints:t.nextPoints,color:t.color,isInCircle:n,style:e,size:t.size,shape:t.shape,opacity:t.opacity,x:t.x,y:t.y,origin:t,id:this._getId(r),geomType:this.get("type")};return n&&(i.center=this.getCoord().get("center")),i},_getId:function(t){var e=this.get("idDims"),n=this.get("id"),r=n;if(e&&e.length>0)e.forEach(function(e){r+=" "+t[e]});else{var i=this.get("groupScales");i&&i.length>0&&i.forEach(function(e){var n=e.dim;"identity"!==e.type&&".."!==n.slice(0,2)&&(r+=" "+t[n])});var a=this.getAttr("position"),s=a.getDims(),o=s[0],c=s[1],u=this.get("type");r+="interval"===u||"intervalStack"===u||"schemal"===u?" "+t[o]:"line"===u||"area"===u?" "+u:" "+t[o]+" "+t[c]+" "+u}return r},getYMinValue:function(){var t,e=this.getYScale(),n=e.min;return t=n>=0?n:0},getAttrValue:function(t,e){var n=this.getAttr(t),r=null;return n&&(r=this._getAttrValues(n,e)[0]),r},getAttr:function(t){var e=this.get("attrs"),n=null;return r.each(e,function(e){e.type===t&&(n=e)}),n},getCoord:function(){return this.getAttr("position").coord},getXDim:function(){var t=this.getXScale();return t.dim},getYDim:function(){var t=this.getYScale();return t.dim},getXScale:function(){return this.getAttr("position").scales[0]},getYScale:function(){return this.getAttr("position").scales[1]}}),t.exports=u},function(t,e,n){var r=n(22);n(65),t.exports=r},function(t,e,n){var r=n(67);t.exports=r},function(t,e,n){"use strict";function r(t,e){var n=t.getContext("2d");if(n.beginPath(),n.save(),n.globalAlpha=e.opacity||1,e.lineDash&&n.setLineDash&&n.setLineDash(e.lineDash),e.fill&&(e.fillStyle=e.fill),delete e.fill,e.stroke&&(e.strokeStyle=e.stroke),delete e.stroke,e.fontStyle||e.fontVariant||e.fontWeight||e.fontSize||e.fontFamily){var r={};a.mix(r,c.defaultFont,e),e.font=[r.fontStyle,r.fontVariant,r.fontWeight,r.fontSize+"px",r.fontFamily].join(" ")}return a.mix(n,e),n}function i(t,e){var n=t.globalAlpha;e.strokeStyle&&(e.strokeOpacity&&(t.globalAlpha=e.strokeOpacity),t.stroke(),t.globalAlpha=n),e.fillStyle&&(t.globalAlpha=e.fillOpacity||t.globalAlpha,t.fill(),(e.fillOpacity||e.strokeOpacity)&&(t.strokeStyle=e.strokeStyle?e.strokeStyle:e.fillStyle,t.globalAlpha=e.strokeOpacity||1,t.stroke())),t.restore()}var a=n(1),s=n(8),o=n(106),c=n(3);t.exports={drawLine:function(t,e,n,a){var s=r(n,a);s.moveTo(t.x,t.y),s.lineTo(e.x,e.y),i(s,a)},drawText:function(t,e,n,i){var a;i.rotate&&(a=i.rotate*Math.PI/180,delete i.rotate);var s=r(n,i);a?(s.translate(e.x,e.y),s.rotate(a),s.fillText(""+t,0,0)):s.fillText(""+t,e.x,e.y),s.restore()},drawCircle:function(t,e,n,a){var s=r(n,a);s.arc(t.x,t.y,e,0,2*Math.PI),s.closePath(),i(s,a)},drawArc:function(t,e,n,a,s,o){var c=r(s,o);c.arc(t.x,t.y,e,n,a),o.z!==!1&&c.closePath(),i(c,o)},radiusRect:function(t,e,n,r,i,a){a.moveTo(t+i,e),a.arcTo(t+n,e,t+n,e+r,i),a.arcTo(t+n,e+r,t,e+r,i),a.arcTo(t,e+r,t,e,i),a.arcTo(t,e,t+n,e,i)},drawRect:function(t,e,n){var a=r(e,n),s=t[0].x,o=t[0].y,c=t[2].x,u=t[1].y;t.forEach(function(t){t.x>c&&(c=t.x),t.x<s&&(s=t.x),t.y>u&&(u=t.y),t.y<o&&(o=t.y)});var l=s,f=o,h=c-s,g=u-o;if(n.radius){var p=Math.min(n.radius,h/2,g/2);this.radiusRect(l,f,h,g,p,a)}else a.rect(l,f,h,g);n.z!==!1&&a.closePath(),i(a,n)},drawShape:function(t,e,n){var a=r(t,e);n(a),e.z&&a.closePath(),i(a,e)},drawLines:function(t,e,n){var a=r(e,n);this.lines(t,a),n.z&&a.closePath(),i(a,n)},lines:function(t,e,n){if(t.length){n!==!1&&e.moveTo(t[0].x,t[0].y);for(var r=1,i=t.length;r<i;r++){var a=t[r];e.lineTo(a.x,a.y)}}},drawFan:function(t,e,n,a){var o=r(n,a),c=new s(1,0),u=new s(t[0].x-e.x,t[0].y-e.y),l=u.length(),f=new s(t[1].x-e.x,t[1].y-e.y),h=f.length(),g=new s(t[2].x-e.x,t[2].y-e.y),p=c.angleTo(f),v=c.angleTo(g);p>v&&p-v<1e-4?(o.moveTo(e.x+h,e.y),o.arc(e.x,e.y,h,0,Math.PI),o.arc(e.x,e.y,h,Math.PI,2*Math.PI),o.moveTo(e.x+l,e.y),o.arc(e.x,e.y,l,2*Math.PI,Math.PI,!0),o.arc(e.x,e.y,l,Math.PI,0,!0),o.closePath()):(o.moveTo(t[0].x,t[0].y),o.lineTo(t[1].x,t[1].y),o.arc(e.x,e.y,h,p,v),o.lineTo(t[3].x,t[3].y),o.arc(e.x,e.y,l,v,p,!0),o.closePath()),i(o,a)},drawSmooth:function(t,e,n){if(0!==t.length){var r=this.before(e,n);this.smooth(t,r),this.after(r,n)}},before:function(t,e){return r(t,e)},after:function(t,e){return i(t,e)},smooth:function(t,e,n){var r=o.smooth(t);n!==!1&&e.moveTo(t[0].x,t[0].y);for(var i=0,a=r.length;i<a;i++){var s=r[i];e.bezierCurveTo(s[1],s[2],s[3],s[4],s[5],s[6])}}}},function(t,e,n){"use strict";function r(t,e){this.x=t,this.y=e}var i=n(1);r.add=function(t,e){return new r(t.x+e.x,t.y+e.y)},r.sub=function(t,e){return new r(t.x-e.x,t.y-e.y)},i.augment(r,{length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){var t=1/this.length();return new r(this.x*t,this.y*t)},add:function(t){return r.add(this,t)},sub:function(t){return r.sub(this,t)},multiply:function(t){return new r(this.x*t,this.y*t)},dot:function(t){return this.x*t.x+this.y*t.y},angle:function(t){var e=this.dot(t)/(this.length()*t.length());return Math.acos(e)},angleTo:function(t){var e=this.angle(t),n=this.direction(t);return n>=0?e:2*Math.PI-e},zero:function(){return 0===this.x&&0===this.y},direction:function(t){return this.x*t.y-t.x*this.y},distanceTo:function(t){return r.sub(this,t).length()},clone:function(){return new r(this.x,this.y)},getPoint:function(){return{x:this.x,y:this.y}}}),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=["min","max"],a=function(t){r.mix(this,t)};r.augment(a,{xScale:null,yScale:null,cfg:{},parsePoint:function(t,e){var n,a=this,s=a.xScale,o=a.yScale,c=e[0],u=e[1],l=u;if(c=s?r.indexOf(i,c)!==-1?s.scale(s[c]):s.scale(c):1,o){var f=o.scale(l),h=o.scale(o[l]);n=r.indexOf(i,u)!==-1?h:f}else n=1;return t.convertPoint({x:c,y:n})},paint:function(){}}),t.exports=a},function(t,e,n){"use strict";var r=n(1);n(18);var i=function(t){r.mix(this,t)};r.augment(i,{bgimageData:null,imageData:null,ratio:1,startPoint:{x:0,y:0},center:{x:200,y:200},radius:160,reduceMultiple:1,duration:1e3,easing:"easeInOut",success:null,paint:function(t){var e=this,n=document.createElement("canvas"),r=t.width,i=t.height,a=r/parseInt(t.style.width,10);e.ratio=a,n.style.width=r+"px",n.style.height=i+"px",n.width=r,n.height=i,e.draw(t,n)},draw:function(){},animateStep:function(t){var e=this;r.animateStep(function(n,r){r%e.reduceMultiple!==0&&1!==n||t(n)},e.duration,e.easing,e.success)},clear:function(t){var e=t.getContext("2d");e.clearRect(0,0,t.width,t.height)}}),t.exports=i},function(t,e,n){"use strict";var r=n(1),i=function(t){r.mix(this,t)};i.prototype={type:"base",names:null,scales:[],min:0,max:10,method:function(t){return t*(this.max-this.min)+this.min},callback:function(){var t,e,n,i=this,a=i.arr,s=i.scales,o=r.toArray(arguments),c=[];return r.each(s,function(s,u){t=o[u],n=s.scale(t),e=s.translate(t),"identity"===s.type?c.push(s.value):r.isArray(a)?c.push(i._getArrValue(a,s,n,e)):i.method?c.push(i.method(n)):c.push(null)}),c},getNames:function(){var t=this.scales,e=this.names,n=[];return r.each(t,function(t,r){n.push(e[r])}),n},getDims:function(){var t=this.scales,e=[];return r.each(t,function(t){e.push(t.dim)}),e},getScale:function(t){var e=this.scales,n=this.names,r=n.indexOf(t);return e[r]},mappingValues:function(){var t=this.scales,e=r.toArray(arguments),n=this.callback,i=e;if(n){for(var a=0;a<e.length;a++)e[a]=this.parseParam(e[a],t[a]);i=n.apply(this,e)}return this.names&&1===this.names.length&&(i=[i]),i},parseParam:function(t,e){var n=t;return e.isLinear||(n=e.scale(t),n=e.invert(n)),n},_getArrValue:function(t,e,n,r){var i=0;return e.isCategory?i=r:e.isLinear&&(i=parseInt(n*(t.length-1),10)),t[i%t.length]}},t.exports=i},function(t,e,n){"use strict";var r=n(1),i=function(t){r.mix(this,t),this.init()};r.augment(i,{formatter:null,range:[0,1],ticks:null,init:function(){},getTicks:function(){var t=this,e=t.ticks,n=[];return r.each(e,function(e){var i;i=r.isObject(e)?e:{text:t.getText(e),value:t.scale(e)},n.push(i)}),n},getText:function(t){var e=this.formatter;return t=e?e(t):t,!r.isNull(t)&&t.toString||(t=""),t.toString()},rangeMin:function(){return this.range[0]},rangeMax:function(){var t=this.range;return t[t.length-1]},invert:function(){},translate:function(t){return t},scale:function(){},clone:function(){var t=this,e=t.constructor,n={};return r.each(t,function(e,r){n[r]=t[r]}),new e(n)},change:function(t){return this.ticks=null,r.mix(this,t),this.init(),this}}),t.exports=i},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t),this._init()}var i=n(1),a=n(6),s=n(47),o=["color","size","shape"],c=n(5),u="_origin";s.Base.prototype.sort=function(t){var e=this.getXScale(),n=[];if("cat"===e.type||"timeCat"===e.type)n=t.slice(0);else{var r=this.getXDim();i.each(t,function(t){n.push(c.sort(t,r))})}return n},r.ATTRS={coreType:null,frames:null,attrs:null,container:null,styleCfg:null},i.extend(r,a),i.augment(r,{_init:function(){var t=this.get("coreType"),e=new s[t]({attrs:this.get("attrs"),container:this.get("container"),styleCfg:this.get("styleCfg")});this.set("core",e),this.processCore()},_getGroupScales:function(){var t=this.get("core"),e=[];return i.each(o,function(n){var r=t.getAttr(n);if(r){var a=r.scales;i.each(a,function(t){t&&t.isCategory&&i.indexOf(e,t)===-1&&e.push(t)})}}),e},_groupFrames:function(t){var e=this,n=[],r=e._getGroupScales();return i.each(r,function(t){n.push(t.dim)}),c.group(t,n)},processCore:function(){},initData:function(t){var e=this._groupFrames(t);e=this._saveOriginData(e),e=this.processFrames(e),this.set("frames",e)},processFrames:function(t){return t},_saveOriginData:function(t){return i.each(t,function(t){var e=t.toJSON();t.addCol(u,e)}),t},draw:function(t){var e=this.get("frames"),n=this.get("core");t&&n.set("container",t),n.draw(e)},getXScale:function(){var t=this.get("core");return t.getXScale()},getYScale:function(){var t=this.get("core");return t.getYScale()},_isStack:function(t){var e=!1;return"intervalStack"!==t&&"areaStack"!==t||(e=!0),e},_getSnap:function(t,e){var n,r=0,i=this.get("attrs")[0].dims[1];if(this._isStack(this.get("type"))&&t.dim===i){var a=this.get("frames");for(n=[],a.forEach(function(e){e.data.forEach(function(e){n.push(e[t.dim])})});r<n.length&&!(n[0][0]>e);r++){if(n[n.length-1][1]<=e){r=n.length-1;break}if(n[r][0]<=e&&n[r][1]>e)break}}else for(n=t.values,n.sort(function(t,e){return t-e});r<n.length&&!((n[0]+n[1])/2>e)&&!((n[r-1]+n[r])/2<=e&&(n[r+1]+n[r])/2>e);r++)if((n[n.length-2]+n[n.length-1])/2<=e){r=n.length-1;break}var s=n[r];return s},getSnapRecords:function(t,e){var n=this,r=n.get("coord"),a=n.getXScale(),s=n.getYScale(),o=a.dim,c=s.dim,u=r.invertPoint(t),l=n.get("frames"),f=[];if(e===c){var h=s.invert(u.y);s.isCategory||(h=n._getSnap(s,h)),i.each(l,function(t){t.each(function(t){(i.isArray(h)?i.equalsArray(t[c],h):t[c]===h)&&f.push(t)})})}else{var g=a.invert(u.x);a.isCategory||(g=n._getSnap(a,g)),i.each(l,function(t){t.each(function(t){t[o]===g&&f.push(t)})})}return f},getAllShapeData:function(){var t=this.get("core");return t.get("shapeDatas")}}),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(17),a=n(3);r.mix(i.ShapeBase,{parsePoint:function(t){1===t.x&&(t.x=.9999999),1===t.y&&(t.y=.9999999);var e=this._coord;return e.convertPoint(t)},parsePoints:function(t){if(!t)return!1;var e=this,n=[];return r.each(t,function(t){n.push(e.parsePoint(t))}),n}}),r.mix(i.GeomShape,{drawShape:function(t,e,n){var r=this.getShape(t);return e.color||(e.color=a.colors[0]),r.drawShape(e,n)}}),t.exports=i},function(t,e,n){var r={};r.number=n(74),r.time=n(75),r.category=n(73),t.exports=r},function(t,e,n){"use strict";var r=n(13);r.Line=n(100),r.Point=n(101),r.Interval=n(32),r.IntervalStack=n(99),r.StackMixin=n(33),r.WidthMixin=n(34),t.exports=r},function(t,e,n){"use strict";var r=n(1),i={},a={defaultShapeType:null,getShape:function(t){var e=this,n=e[t]||e[e.defaultShapeType]||i.ShapeBase;return n._coord=e._coord,n},getShapePoints:function(t,e){var n=this.getShape(t);return n.getShapePoints(e)},drawShape:function(t,e,n){var r=this.getShape(t);return r.drawShape(e,n)}},s={_coord:null,drawShape:function(){},getShapePoints:function(){}};i.registGeom=function(t,e){var n=r.ucfirst(t),s=r.mix({},a,e);return i[n]=s,s.className=n,s},i.registShape=function(t,e,n){var a=r.ucfirst(t),s=i[a],o=s.getShape(),c=r.mix({},o,n);return s[e]=c,c},i.getShape=function(t){var e=this;return t=t||"point",t=r.ucfirst(t),e[t]||i.ShapeBase},i.GeomShape=a,i.ShapeBase=s,t.exports=i},function(t,e,n){function r(){return++a}var i=n(1),a=0,s={},o=Math.pow,c=Math,u=Math.abs,l={linear:function(t){return t},easeIn:function(t){return o(t,1.7)},easeOut:function(t){return o(t,.48)},easeInOut:function(t){var e=.48-t/1.04,n=c.sqrt(.1734+e*e),r=n-e,i=o(u(r),1/3)*(r<0?-1:1),a=-n-e,s=o(u(a),1/3)*(a<0?-1:1),l=i+s+.5;return 3*(1-l)*l*l+l*l*l},backIn:function(t){var e=1.70158;return t*t*((e+1)*t-e)},backOut:function(t){t-=1;var e=1.70158;return t*t*((e+1)*t+e)+1},elastic:function(t){return t===!!t?t:o(2,-10*t)*c.sin((t-.075)*(2*Math.PI)/.3)+1},bounce:function(t){var e,n=7.5625,r=2.75;return t<1/r?e=n*t*t:t<2/r?(t-=1.5/r,e=n*t*t+.75):t<2.5/r?(t-=2.25/r,e=n*t*t+.9375):(t-=2.625/r,e=n*t*t+.984375),e}};i.mix(i,{animateStep:function(t,e,n,a){function o(t,e,r,a){var f=(new Date).getTime(),h=f-c;if(h>=r)return e(1,t),void(a&&a());var g=l[n||"linear"],p=g(h/r);e(p,t),s[u]=i.requestAnimationFrame(function(){o(t+1,e,r,a)})}var c=(new Date).getTime(),u=r();return o(0,t,e,a),u},stopStep:function(t){s[t]&&(i.cancelAnimationFrame()(s[t]),delete s[t])}}),t.exports=i},function(t,e,n){"use strict";var r=n(1),i=["color","shape","size","opacity"],a="_origin";t.exports={getShapeData:function(t){var e={},n=t.toJSON(),s=n[0],o=t.colArray("_origin");return r.each(i,function(t){s.hasOwnProperty(t)&&(e[t]=s[t])}),e[a]=o,e}}},function(t,e,n){"use strict";var r=n(1);t.exports={splitData:function(t){if(!t.length)return[];var e,n=[],i=[],a=this.getYDim();return r.each(t,function(t){e=t._origin?t._origin[a]:t[a],r.isArray(e)&&r.isNull(e[0])||r.isNull(e)?(n.push(i),i=[]):i.push(t)}),n.push(i),n}}},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(4),s=n(20),o=n(19);i.extend(r,a),i.mixin(r,[s,o]),r.ATTRS={type:"path",shapeType:"line"},i.augment(r,{drawFrame:function(t,e){var n,r,a,s=this,o=t.toJSON(),c=this.splitData(o),u=this.get("container"),l=this.get("shapeObj"),f=o[0],h=this.getDrawCfg(f),g=f.points.length;f.index=e,h=this.getDrawCfg(f);var p=s.get("adjusts"),v=p&&i.indexOf(p,"Stack")!==-1,d=s.getShapeData(t);s.get("shapeDatas").push(d),i.each(c,function(t,e){h.splitedIndex=e;for(var i=0;i<g;i++)if(n=[],!v||0!==i){for(var o=0;o<t.length;o++)a=t[o],n.push(a.points[i]);if(0===n.length)return;h.points=n,h.index=i,r=s.getDrawShape(h.shape),l.drawShape(r,h,u)}})},_getJoinIdAttr:function(){var t=this.get("attrs"),e=[];return i.each(t,function(t){"position"!==t.type&&e.push(t)}),e}}),t.exports=r},function(t,e,n){var r=n(1),i=function(t,e){this.data=t,r.mix(this,e),this.initFrame()};i.prototype={isFrame:!0,initFrame:function(){var t=this,e=t.data,n=t.colNames(),i=t.arr;if(r.isArray(e[0])&&(i=t.arr=e),!i){i=[];for(var a=0;a<n.length;a++){for(var s=[],o=n[a],c=0;c<e.length;c++)s.push(e[c][o]);i.push(s)}t.arr=i}},contains:function(t){var e=this.colNames();return r.indexOf(e,t)!==-1},colNames:function(){var t=this,e=t.names;if(!e){var n=this.data,i=n[0];e=[],i&&r.each(i,function(t,n){e.push(n)}),t.names=e}return e},rowCount:function(){var t=this,e=t.arr;return e&&e.length?e[0].length:0},colCount:function(){var t=this,e=t.colNames();return e?e.length:0},colIndex:function(t){return r.indexOf(this.names,t)},colArray:function(t){var e=t;return r.isString(t)&&(e=this.colIndex(t)),this.arr[e]},colReplace:function(t,e){var n=this.arr,i=this.colNames();if(r.isString(t)){var a=t;t=r.indexOf(i,a)}return n[t]=e,this},each:function(t){for(var e=this,n=e.rowCount(),r=0;r<n;r++){var i=e._getObject(r);t(i,r)}return e},rowObject:function(t){return this._getObject(t)},_getObject:function(t,e){var n=this,r=n.arr,i={};e=e||n.colNames();for(var a=0;a<e.length;a++)i[e[a]]=r[a][t];return i},addCol:function(t,e){var n=this;if(r.isFunction(e)){var i=e;e=[],n.each(function(t,n){var r=i(t,n);e.push(r)})}n.names.push(t),n.arr.push(e)},toArray:function(){return this.arr},toJSON:function(){for(var t=this,e=t.rowCount(),n=[],r=0;r<e;r++)n.push(t._getObject(r));return n}},t.exports=i},function(t,e){"use strict";function n(t){for(var e=1;t>10;)e=10*e,t/=10;for(;t<1;)e/=10,t=10*t;return e}function r(t,e){var n=t.length;if(0===n)return NaN;var r=t[0];if(e<t[0])return NaN;if(e>=t[n-1])return t[n-1];for(var i=1;i<t.length&&!(e<t[i]);i++)r=t[i];return r}function i(t,e){var n=t.length;if(0===n)return NaN;var r,i=t[0];if(e>t[n-1])return NaN;if(e<t[0])return t[0];for(var a=1;a<t.length;a++){if(e<=t[a]){r=t[a];break}i=t[a]}return r}var a={snapFactorTo:function(t,e,r){var i=1;t<0&&(i=-1),t*=i;var s=n(t);return i*=s,t/=s,t="floor"===r?a.snapFloor(e,t):"ceil"===r?a.snapCeiling(e,t):a.snapTo(e,t),t*i},snapMultiple:function(t,e,n){var r;return r=n?Math.ceil(t/e,10):Math.floor(t/e,10),r*e},snapTo:function(t,e){var n=r(t,e),a=i(t,e);if(isNaN(n)||isNaN(a)){if(t[0]>=e)return t[0];var s=t[t.length-1];if(s<=e)return s}return Math.abs(e-n)<Math.abs(a-e)?n:a},snapFloor:function(t,e){return r(t,e)},snapCeiling:function(t,e){return i(t,e)}};t.exports=a},function(t,e,n){var r=n(1),i=n(12);i.Linear=n(78),i.linear=function(t){return new i.Linear(t)},i.Cat=n(25),i.cat=function(t){return new i.Cat(t)},i.Identity=n(77),i.I=function(t){return new i.Identity(t)},i.TimeCat=n(79),i.timeCat=function(t){return new i.TimeCat(t)},i.I_TYPE="identity",i.isCategory=function(t){if("cat"===t)return!0;var e=r.ucfirst(t);return!(!i[e]||!i[e].superclass||"cat"!==i[e].superclass.type)},t.exports=i},function(t,e,n){"use strict";var r=n(12),i=n(1),a=n(15),s=function(t){s.superclass.constructor.call(this,t)};i.extend(s,r),i.augment(s,{type:"cat",tickCount:null,isCategory:!0,init:function(){var t=this,e=t.values,n=t.tickCount;if(i.each(e,function(t,n){e[n]=t.toString()}),!t.ticks){var r=e;if(n){var s=a.category({maxCount:n,data:e});r=s.ticks}this.ticks=r}},getText:function(t){return this.values.indexOf(t)>-1?t=t:i.isNumber(t)&&(t=this.values[Math.round(t)]),s.superclass.getText.call(this,t)},translate:function(t){var e=this.values.indexOf(t);return e===-1&&i.isNumber(t)?e=t:e===-1&&(e=NaN),e},scale:function(t){var e,n=this.rangeMin(),r=this.rangeMax();return(i.isString(t)||this.values.indexOf(t)!==-1)&&(t=this.translate(t)),e=this.values.length>1?t/(this.values.length-1):t,n+e*(r-n)},invert:function(t){if(i.isString(t))return t;var e=this.rangeMin(),n=this.rangeMax();t<e&&(t=e),t>n&&(t=n);var r=(t-e)/(n-e),a=Math.round(r*(this.values.length-1))%this.values.length;return a=a||0,this.values[a]}}),t.exports=s},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(2),s=a.Geom;r.ATTRS={coreType:"Area"},i.extend(r,s),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(3),a=function(t){r.mix(this,t)};r.augment(a,{animate:null,setImageData:function(t,e){var n=this;n.animate.imageData=t,n.animate.bgImageData=e},setStartPoint:function(t){this.animate.startPoint=t},setPolar:function(t,e){this.animate.center=t,this.animate.radius=e},setCallBack:function(t){var e=this.animate.success,n=null;n=r.isFunction(e)?function(){t(),e()}:t,this.animate.success=n},paint:function(t){var e=this.animate;e.cycle=i.animateReduceMultiple,e.paint(t)}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(6),a=n(7),s=n(8),o=function(t){o.superclass.constructor.call(this,t),this.init()};o.ATTRS={ticks:[],tickLine:{},offsetFactor:1,canvas:null,gridPoints:[]},r.extend(o,i),r.augment(o,{init:function(){},draw:function(){var t=this,e=t.get("line"),n=t.get("tickLine"),r=t.get("label");e&&t.drawLine(e),n&&t.drawTicks(n),r&&t.drawLabels(r)},drawGrid:function(){var t=this,e=t.get("grid");if(e){var n,i=t.get("canvas"),s=t.get("gridPoints"),o=t.get("ticks"),c=s.length;r.each(s,function(t,s){if(r.isFunction(e)){var u=o[s]||{};n=e(u.text,s,c)}else n=e;n&&a.drawLines(t,i,n)})}},getOffsetPoint:function(){},getAxisVector:function(){},getOffsetVector:function(t,e){var n=this,r=n.getAxisVector(t),i=r.normalize(),a=n.get("offsetFactor"),o=new s(i.y*-1*a,i.x*a);return o.multiply(e)},getSidePoint:function(t,e){var n=this,r=n.getOffsetVector(t,e);return{x:t.x+r.x,y:t.y+r.y}},drawTicks:function(t){var e=this,n=e.get("ticks"),i=t.value,s=e.get("canvas");r.each(n,function(n){var r=e.getOffsetPoint(n.value),o=e.getSidePoint(r,i);a.drawLine(r,o,s,t)})},getTextAlignInfo:function(t,e){var n,r,i=this,a=i.getOffsetVector(t,e);return n=a.x>0?"left":a.x<0?"right":"center",r=a.y>0?"top":a.y<0?"bottom":"middle",{textAlign:n,textBaseline:r}},drawLabels:function(t){var e,n=this,i=n.get("ticks"),s=n.get("canvas"),o=i.length;r.each(i,function(i,c){if(e=r.isFunction(t)?t(i.text,c,o):t){var u=n.get("labelOffset"),l=n.getOffsetPoint(i.value),f=n.getSidePoint(l,u),h=r.mix({},n.getTextAlignInfo(l,u),e);a.drawText(h.text||i.text,f,s,h)}})},drawLine:function(){}}),t.exports=o},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t),this.__init()}var i=n(1),a=n(6);r.ATTRS={type:"cartesian",transposed:!1},i.extend(r,a),i.augment(r,{isRect:!0,isTransposed:!1,__init:function(){var t=this,e=t.get("plot"),n={start:e.get("bl").x,end:e.get("br").x},r={start:e.get("bl").y,end:e.get("tl").y};this.isTransposed=t.get("transposed"),t.set("x",n),t.set("y",r)},convertPoint:function(t){var e=this,n=e.isTransposed,r=n?"y":"x",i=n?"x":"y",a=e.get("x"),s=e.get("y");return{x:a.start+(a.end-a.start)*t[r],y:s.start+(s.end-s.start)*t[i]}},invertPoint:function(t){var e=this,n=e.isTransposed,r=n?"y":"x",i=n?"x":"y",a=e.get("x"),s=e.get("y"),o={};return o[r]=(t.x-a.start)/(a.end-a.start),o[i]=(t.y-s.start)/(s.end-s.start),o}}),t.exports=r},function(t,e,n){"use strict";t.exports={Rect:n(29),Cartesian:n(29),Polar:n(31),Circle:n(31)}},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t),this.__init()}var i=n(1),a=n(6),s=n(8);r.ATTRS={startAngle:-Math.PI/2,endAngle:3*Math.PI/2,inner:0,type:"polar"},i.extend(r,a),i.augment(r,{isPolar:!0,isTransposed:!1,__init:function(){var t=this,e=t.get("plot"),n=t.get("inner"),r=Math.min(e.get("width"),e.get("height"))/2,i={start:t.get("startAngle"),end:t.get("endAngle")},a={start:r*n,end:r},s={x:(e.get("bl").x+e.get("br").x)/2,y:(e.get("tl").y+e.get("bl").y)/2};this.isTransposed=t.get("transposed"),t.set("center",s),t.set("radius",r),t.set("x",i),t.set("y",a)},convertPoint:function(t){var e=this,n=e.get("center"),r=e.isTransposed,i=r?"y":"x",a=r?"x":"y",s=e.get("x"),o=e.get("y"),c=s.start+(s.end-s.start)*t[i],u=o.start+(o.end-o.start)*t[a];return{x:n.x+Math.cos(c)*u,y:n.y+Math.sin(c)*u}},invertPoint:function(t){var e=this,n=e.get("center"),r=e.isTransposed,i=r?"y":"x",a=r?"x":"y",o=e.get("x"),c=e.get("y"),u=new s(1,0),l=new s(t.x-n.x,t.y-n.y);if(l.zero())return{x:0,y:0};for(var f=u.angleTo(l);f>o.end;)f-=2*Math.PI;var h=l.length(),g=(f-o.start)/(o.end-o.start),p=(h-c.start)/(c.end-c.start),v={};return v[i]=g,v[a]=p,v}}),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(13),s=n(34);r.ATTRS={coreType:"Interval"},i.extend(r,a),i.mixin(r,[s]),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(5),a=function(){};a.ATTRS={isAdjust:!0},r.augment(a,{processFrames:function(t){for(var e=this,n=e.getXScale().dim,a=e.getYScale().dim,s=t.length,o=[],c={},u=[],l=0;l<s;l++){for(var f=t[l].toJSON(),h=0;h<f.length;h++){var g=f[h],p=g[n],v=g[a],d=p.toString();v=r.isArray(v)?v[1]:v,c[d]||(c[d]=0),g[a]=[c[d],v+c[d]],c[d]+=v}o.push(f)}return r.each(o,function(t){var e=new i(t);u.push(e)}),u}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(3),a=function(){};a.ATTRS={isAdjust:!0},r.augment(a,{processCore:function(){var t=this,e=this.get("core");e.getDefalutSize=function(){return t._getDefalutSize()}},_getDefalutSize:function(){var t=this.get("core"),e=t.getCoord(),n=t.getXScale(),r=n.values,a=i.widthRatio.column;return e.isPolar&&(a=e.isTransposed?1===r.length?i.widthRatio.rose:i.widthRatio.multiplePie:i.widthRatio.rose),a*(1/r.length)}}),t.exports=a},function(t,e,n){"use strict";var r=n(14);n(104),n(103),n(102),t.exports=r},function(t,e,n){"use strict";var r=n(1),i={splitPoints:function(t){var e=[],n=t.x,i=t.y;return i=r.isArray(i)?i:[i],r.each(i,function(t,i){var a={x:r.isArray(n)?n[i]:n,y:t};e.push(a)}),e}};t.exports=i},function(t,e,n){"use strict";var r=n(1),i=function(t){r.mix(this,t),this.guides=[]};r.augment(i,{guides:null,xScale:null,yScale:null,addGuide:function(t){this.guides.push(t)},setScale:function(t,e){var n=this.guides;this.xScale=t,this.yScale=e,r.each(n,function(n){n.xScale=t,n.yScale=e})},paintFront:function(t,e){var n=this.guides;r.each(n,function(n){"text"!==n.type&&"html"!==n.type||n.paint(t,e)})},paintBack:function(t,e){var n=this.guides;r.each(n,function(n){"text"!==n.type&&"html"!==n.type&&n.paint(t,e)})},clear:function(t){if(this.guides=[],t){var e=t.getElementsByClassName("guideWapper")[0];e&&t.removeChild(e)}return this}}),t.exports=i},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t),this.__init()}var i=n(1),a=n(6);i.extend(r,a),i.augment(r,{__init:function(){var t=this,e=t.get("start"),n=t.get("end"),r={};r.x=Math.min(e.x,n.x),r.y=Math.min(e.y,n.y),t.set("tl",r);var i={};i.x=Math.max(e.x,n.x),i.y=Math.min(e.y,n.y),t.set("tr",i);var a={};a.x=Math.min(e.x,n.x),a.y=Math.max(e.y,n.y),t.set("bl",a);var s={};s.x=Math.max(e.x,n.x),s.y=Math.max(e.y,n.y),t.set("br",s),t.set("width",s.x-r.x),t.set("height",s.y-r.y)},reset:function(t,e){this.set("start",t),this.set("end",e),this.__init()},isInRange:function(t,e){i.isObject(t)&&(e=t.y,t=t.x);var n=this.get("tl"),r=this.get("br");return n.x<=t&&t<=r.x&&n.y<=e&&e<=r.y}}),t.exports=r},function(t,e,n){"use strict";var r="#999999",i="#E9E9E9",a=n(1),s={label:{fillStyle:"#979797",font:"20px san-serif"},labelOffset:6,line:{stroke:i,lineWidth:1},grid:{stroke:i,lineWidth:1},tickLine:null},o={fontStyle:"",fontVariant:"",fontWeight:"",fontSize:"10px",fontFamily:'"Helvetica Neue", Helvetica, "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", "\u5fae\u8f6f\u96c5\u9ed1", SimSun, "sans-serif"'},c={defaultFont:o,pixelRatio:1,margin:[40,40,40,40],colors:["#4E7CCC","#36B3C3","#4ECDA5","#94E08A","#E2F194","#EDCC72","#F8AB60","#F9815C","#EB4456","#C82B3D"],axis:{bottom:a.mix(!0,{},s,{line:{stroke:r},label:{textBaseline:"hanging"},labelOffset:12,gridAttrs:{},grid:function(t,e,n){return 0===e||e===n-1?null:a.mix({},s.grid,c.axis.bottom.gridAttrs)}}),left:a.mix(!0,{},s,{label:{textAlign:"end"},line:null,tickLine:null}),right:a.mix(!0,{},s,{label:{textAlign:"start"},line:null,tickLine:null,grid:null}),circle:a.mix(!0,{},s,{line:{stroke:r}}),radius:a.mix(!0,{},s,{})}};t.exports=c},function(t,e,n){var r=n(2);r.AnimateAssist=n(41),t.exports=r},function(t,e,n){var r=n(18),i=n(2),a=n(42),s=n(44),o=n(43),c=n(46),u=n(45),l=i.AnimateAssist;r.augment(l,{waveh:function(t){var e={type:"waveh"};e=r.mix({},t,e),this.animate=new c(e)},wavec:function(t){var e={type:"wavec"};e=r.mix({},t,e),this.animate=new u(e)},scalex:function(t){var e={type:"scalex"};e=r.mix({},t,e),this.animate=new a(e)},scaley:function(t){var e={type:"scaley"};e=r.mix({},t,e),this.animate=new s(e)},scalexy:function(t){var e={type:"scalexy"};e=r.mix({},t,e),this.animate=new o(e)}}),t.exports=l},function(t,e,n){"use strict";var r=n(1),i=n(10),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{draw:function(t,e){var n=this,r=n.ratio,i=n.startPoint.x*r,a=t.width,s=t.height,o=t.getContext("2d"),c=e.getContext("2d"),u=n.imageData,l=n.bgImageData;c.putImageData(u,0,0),n.animateStep(function(c){n.clear(t),o.putImageData(l,0,0);var u=i*c/r,f=(a-i)*c/r;o.drawImage(e,0,0,a,s,i*(1-c)/r,0,u+f,s/r)})}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(10),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{draw:function(t,e){var n=this,r=n.ratio,i=n.center,a=t.width,s=t.height,o=t.getContext("2d"),c=e.getContext("2d"),u=n.imageData,l=n.bgImageData;
	c.putImageData(u,0,0),n.animateStep(function(c){n.clear(t),o.putImageData(l,0,0),o.drawImage(e,0,0,a,s,i.x*(1-c),i.y*(1-c),a*c/r,s*c/r)})}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(10),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{draw:function(t,e){var n=this,r=n.ratio,i=n.startPoint.y*r,a=t.width,s=t.height,o=t.getContext("2d"),c=e.getContext("2d"),u=n.imageData,l=n.bgImageData;c.putImageData(u,0,0),n.animateStep(function(c){n.clear(t),o.putImageData(l,0,0);var u=i*c/r,f=(s-i)*c/r;o.drawImage(e,0,0,a,s,0,i*(1-c)/r,a/r,u+f)})}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(10),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{draw:function(t,e){var n=this,r=t.width,i=t.height,a=t.getContext("2d"),s=e.getContext("2d"),o=n.ratio,c=n.center,u=n.radius,l=n.imageData,f=n.bgImageData;a.putImageData(f,0,0),s.putImageData(l,0,0),n.animateStep(function(s){n.clear(t),a.putImageData(f,0,0),a.save(),n.sector(a,2*Math.PI*s,c,u),a.clip(),a.drawImage(e,0,0,r,i,0,0,r/o,i/o),a.restore()})},sector:function(t,e,n,r){t.beginPath(),t.strokeStyle="rgba(1, 1, 1, 0)",t.arc(n.x,n.y,r,1.5*Math.PI,1.5*Math.PI+e),t.moveTo(n.x+Math.sin(e)*r,n.y-Math.cos(e)*r),t.lineTo(n.x,n.y),t.lineTo(n.x,n.y-r),t.stroke()}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(10),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{draw:function(t,e){var n=this,r=t.width,i=t.height,a=t.getContext("2d"),s=n.ratio,o=e.getContext("2d"),c=n.imageData,u=n.bgImageData;a.putImageData(u,0,0),o.putImageData(c,0,0),n.animateStep(function(o){n.clear(t),a.putImageData(u,0,0),a.drawImage(e,0,0,r*o,i,0,0,r*o/s,i/s)})}}),t.exports=a},function(t,e,n){var r={};r.Base=n(4),r.Interval=n(49),r.Point=n(52),r.Line=n(50),r.Polygon=n(53),r.Schema=n(54),r.Path=n(21),r.Area=n(48),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(4),s=n(20),o=n(19);i.extend(r,a),i.mixin(r,[s,o]),r.ATTRS={type:"area"},i.augment(r,{sortFrames:function(t){return this.sort(t)},drawFrame:function(t,e){var n,r,a,s,o=this,c=t.toJSON(),u=this.splitData(c),l=this.get("container"),f=this.get("shapeObj"),h=c[0];h.index=e,n=this.getDrawCfg(h);var g=o.getShapeData(t);o.get("shapeDatas").push(g),i.each(u,function(t,e){n.splitedIndex=e,a=[];for(var i=0;i<t.length;i++)s=t[i],a.push(s.points);0!==a.length&&(n.points=a,r=o.getDrawShape(n.shape),f.drawShape(r,n,l))})},_getJoinIdAttr:function(){var t=this.get("attrs"),e=[];return i.each(t,function(t){"position"!==t.type&&e.push(t)}),e}}),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(4);r.ATTRS={type:"interval"},i.extend(r,a),i.mixin(r),i.augment(r,{getDrawCfg:function(t){var e=this,n=r.superclass.getDrawCfg.call(e,t),i=e.getCoord();return i.isPolar&&(n.z=!0,n.center=i.get("center")),n}}),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(21);i.extend(r,a),r.ATTRS={type:"line"},i.augment(r,{sortFrames:function(t){return this.sort(t)}}),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(5);t.exports={sort:function(t){var e=this.getXDim(),n=[];return r.each(t,function(t){n.push(i.sort(t,e))}),n}}},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(4);i.extend(r,a),r.ATTRS={type:"point"},t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(4);i.extend(r,a),r.ATTRS={type:"polygon"},i.augment(r,{getShapePointInfo:function(t){var e,n=a.prototype.getShapePointInfo.call(this,t),r=this,s=n.x,o=n.y;if(!i.isArray(s)||!i.isArray(o)){var c=r.getXScale(),u=r.getYScale(),l=c.values?c.values.length:c.ticks.length,f=u.values?u.values.length:u.ticks.length,h=.5/l,g=.5/f;c.isCategory&&u.isCategory?(s=[s-h,s-h,s+h,s+h],o=[o-g,o+g,o+g,o-g]):i.isArray(s)?(e=s,s=[e[0],e[0],e[1],e[1]],o=[o-g/2,o+g/2,o+g/2,o-g/2]):i.isArray(o)&&(e=o,o=[e[0],e[1],e[1],e[0]],s=[s-h/2,s-h/2,s+h/2,s+h/2])}var p=i.mix({},t,{x:s,y:o});return p}}),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(4);i.extend(r,a),r.ATTRS={type:"schema"},t.exports=r},function(t,e,n){var r=n(2);r.GuideAssist=n(57),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(9),a=n(2),s=a.Vector2,o=a.G,c=function(t){c.superclass.constructor.call(this,t)};r.extend(c,i),r.augment(c,{start:[],end:[],cfg:{strokeStyle:"#CCC"},getCfg:function(t){var e=this,n=e.parsePoint(t,e.start),r=e.parsePoint(t,e.end),i=t.get("center"),a=new s(1,0),o=new s.sub(n,i),c=new s.sub(r,i),u=o.length(),l={radius:u,startAngle:2*Math.PI-o.angleTo(a,!0),endAngle:2*Math.PI-c.angleTo(a,!0)};return l},paint:function(t,e){var n=this.getCfg(t),i=r.mix({z:!1},this.cfg,n),a=t.get("center"),s=n.radius,c=n.startAngle,u=n.endAngle;o.drawArc(a,s,c,u,e,i)}}),t.exports=c},function(t,e,n){"use strict";var r=n(2),i=n(1),a=n(9);a.Text=n(61),a.Line=n(59),a.Arc=n(56),a.Html=n(58),a.Rect=n(60);var s=r.GuideAssist;i.augment(s,{_getDefault:function(){return{xScale:this.xScale,yScale:this.yScale}},line:function(t,e,n){var r={type:"line",from:t,to:e,cfg:i.mix({},n)};i.mix(r,this._getDefault());var s=new a.Line(r);return this.addGuide(s),this},text:function(t,e,n){var r={type:"text",position:t,text:e,cfg:i.mix({},n)};i.mix(r,this._getDefault());var s=new a.Text(r);return this.addGuide(s),this},arc:function(t,e,n){var r={type:"arc",start:t,end:e,cfg:i.mix({},n)};i.mix(r,this._getDefault());var s=new a.Arc(r);return this.addGuide(s),this},html:function(t,e,n){var r={type:"html",point:t,html:e,cfg:i.mix({},n)};i.mix(r,this._getDefault());var s=new a.Html(r);return this.addGuide(s),this},rect:function(t,e,n){var r={type:"rect",start:t,end:e,cfg:i.mix({},n)};i.mix(r,this._getDefault());var s=new a.Rect(r);return this.addGuide(s),this}}),t.exports=s},function(t,e,n){"use strict";function r(t,e,n){var r=[];switch(t){case"tl":r[0]=0,r[1]=0;break;case"tr":r[0]=-e,r[1]=0;break;case"bl":r[0]=0,r[1]=Math.floor(-n);break;case"br":r[0]=Math.floor(-e),r[1]=Math.floor(-n);break;case"rc":r[0]=Math.floor(-e),r[1]=Math.floor(-n/2);break;case"lc":r[0]=0,r[1]=Math.floor(-n/2);break;case"tc":r[0]=Math.floor(-e/2),r[1]=Math.floor(-n);break;case"bc":r[0]=Math.floor(-e/2),r[1]=0;break;default:r[0]=Math.floor(-e/2),r[1]=Math.floor(-n/2)}return r}var i=n(1),a=n(9);n(62);var s=function(t){s.superclass.constructor.call(this,t)};i.extend(s,a),i.augment(s,{type:"html",point:[],cfg:{offset:[0,0],align:"cc"},html:"",paint:function(t,e){var n=this,a=n.parsePoint(t,n.point),s=i.createDom(n.html);s=i.modiCSS(s,{position:"absolute",top:Math.floor(a.y)+"px",left:Math.floor(a.x)+"px",visibility:"hidden"});var o=e.parentNode;o=i.modiCSS(o,{position:"relative"});var c;o.getElementsByClassName("guideWapper").length>0?c=o.getElementsByClassName("guideWapper")[0]:(c=i.createDom('<div class="guideWapper"></div>'),c=i.modiCSS(c,{position:"absolute",top:0,left:0}),o.appendChild(c)),c.appendChild(s);var u=n.cfg;if(u.align){var l=u.align,f=i.getWidth(s),h=i.getHeight(s),g=r(l,f,h);a.x=a.x+g[0],a.y=a.y+g[1]}if(u.offset){var p=u.offset;a.x=a.x+p[0],a.y=a.y+p[1]}i.modiCSS(s,{top:Math.floor(a.y)+"px",left:Math.floor(a.x)+"px",visibility:"visible"})}}),t.exports=s},function(t,e,n){"use strict";var r=n(1),i=n(9),a=n(2),s=a.G,o=function(t){o.superclass.constructor.call(this,t)};r.extend(o,i),r.augment(o,{from:[],to:[],cfg:{strokeStyle:"#000",lineWidth:1},paint:function(t,e){var n=this,r=[];r[0]=n.parsePoint(t,n.from),r[1]=n.parsePoint(t,n.to);var i=n.cfg;s.drawLines(r,e,i)}}),t.exports=o},function(t,e,n){"use strict";var r=n(1),i=n(9),a=n(2),s=a.G,o=function(t){o.superclass.constructor.call(this,t)};r.extend(o,i),r.augment(o,{start:[],end:[],cfg:{fillStyle:"#fafafa"},paint:function(t,e){var n=this,r=n.cfg,i=[];i[0]=n.parsePoint(t,n.start),i[1]=n.parsePoint(t,[n.start[0],n.end[1]]),i[2]=n.parsePoint(t,n.end),i[3]=n.parsePoint(t,[n.end[0],n.start[1]]),r.radius?s.drawRect(i,e,r):s.drawLines(i,e,r)}}),t.exports=o},function(t,e,n){"use strict";var r=n(1),i=n(9),a=n(2),s=a.G,o=function(t){o.superclass.constructor.call(this,t)};r.extend(o,i),r.augment(o,{position:[],text:"",cfg:{fill:"#000",textAlign:"center"},paint:function(t,e){var n=this,r=n.position,i=n.parsePoint(t,r),a=n.cfg,o=n.text;s.drawText(o,i,e,a)}}),t.exports=o},function(t,e,n){"use strict";var r=n(1);r.mix(r,{modiCSS:function(t,e){var n;for(n in e)e.hasOwnProperty(n)===!0&&(t.style[n]=e[n]);return t},createDom:function(t){var e=document.createElement("div");return t=t.replace(/(^\s*)|(\s*$)/g,""),e.innerHTML=""+t,e.childNodes[0]},getStyle:function(t,e){return window.getComputedStyle?window.getComputedStyle(t,null)[e]:t.currentStyle[e]},getWidth:function(t){var e=this.getStyle(t,"width");return"auto"===e&&(e=t.offsetWidth),parseFloat(e)},getHeight:function(t){var e=this.getStyle(t,"height");return"auto"===e&&(e=t.offsetHeight),parseFloat(e)}}),t.exports=r},function(t,e,n){var r=n(64);t.exports=r},function(t,e){"use strict";function n(t){return t instanceof Date?t:new Date(t)}function r(t,e,n){var r=new Date(n);switch(isNaN(r)&&(r=new Date),e=parseInt(e,10),t){case"s":r=new Date(r.getTime()+1e3*e);break;case"n":r=new Date(r.getTime()+6e4*e);break;case"h":r=new Date(r.getTime()+36e5*e);break;case"d":r=new Date(r.getTime()+864e5*e);break;case"w":r=new Date(r.getTime()+6048e5*e);break;case"m":r=new Date(r.getFullYear(),r.getMonth()+e,r.getDate(),r.getHours(),r.getMinutes(),r.getSeconds());break;case"y":r=new Date(r.getFullYear()+e,r.getMonth(),r.getDate(),r.getHours(),r.getMinutes(),r.getSeconds())}return r}var i=/^(?:(?!0000)[0-9]{4}([-\/.]+)(?:(?:0?[1-9]|1[0-2])\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\1(?:29|30)|(?:0?[13578]|1[02])\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-\/.]?)0?2\2(?:29))(\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/,a=function(){var t=/w{1}|d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,e=/\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,n=/[^-+\dA-Z]/g,r=function(t,e){for(t=String(t),e=e||2;t.length<e;)t="0"+t;return t},i={"default":"ddd mmm dd yyyy HH:MM:ss",shortDate:"m/d/yy",longDate:"mmmm d, yyyy",fullDate:"dddd, mmmm d, yyyy",shortTime:"h:MM TT",longTime:"h:MM:ss TT Z",isoDate:"yyyy-mm-dd",isoTime:"HH:MM:ss",isoDateTime:"yyyy-mm-dd'T'HH:MM:ss",isoUTCDateTime:"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'",localShortDate:"yy\u5e74mm\u6708dd\u65e5",localShortDateTime:"yy\u5e74mm\u6708dd\u65e5 hh:MM:ss TT",localLongDate:"yyyy\u5e74mm\u6708dd\u65e5",localLongDateTime:"yyyy\u5e74mm\u6708dd\u65e5 hh:MM:ss TT",localFullDate:"yyyy\u5e74mm\u6708dd\u65e5 w",localFullDateTime:"yyyy\u5e74mm\u6708dd\u65e5 w hh:MM:ss TT"},a={dayNames:["Sun","Mon","Tue","Wed","Thu","Fri","Sat","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","\u661f\u671f\u65e5","\u661f\u671f\u4e00","\u661f\u671f\u4e8c","\u661f\u671f\u4e09","\u661f\u671f\u56db","\u661f\u671f\u4e94","\u661f\u671f\u516d"],monthNames:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","January","February","March","April","May","June","July","August","September","October","November","December"]};return function(s,o,c){if(1!==arguments.length||"[object String]"!==Object.prototype.toString.call(s)||/\d/.test(s)||(o=s,s=void 0),s=s?new Date(s):new Date,isNaN(s))throw SyntaxError("invalid date");o=String(i[o]||o||i["default"]),"UTC:"===o.slice(0,4)&&(o=o.slice(4),c=!0);var u=c?"getUTC":"get",l=s[u+"Date"](),f=s[u+"Day"](),h=s[u+"Month"](),g=s[u+"FullYear"](),p=s[u+"Hours"](),v=s[u+"Minutes"](),d=s[u+"Seconds"](),m=s[u+"Milliseconds"](),x=c?0:s.getTimezoneOffset(),y={d:l,dd:r(l,void 0),ddd:a.dayNames[f],dddd:a.dayNames[f+7],w:a.dayNames[f+14],m:h+1,mm:r(h+1,void 0),mmm:a.monthNames[h],mmmm:a.monthNames[h+12],yy:String(g).slice(2),yyyy:g,h:p%12||12,hh:r(p%12||12,void 0),H:p,HH:r(p,void 0),M:v,MM:r(v,void 0),s:d,ss:r(d,void 0),l:r(m,3),L:r(m>99?Math.round(m/10):m,void 0),t:p<12?"a":"p",tt:p<12?"am":"pm",T:p<12?"A":"P",TT:p<12?"AM":"PM",Z:c?"UTC":(String(s).match(e)||[""]).pop().replace(n,""),o:(x>0?"-":"+")+r(100*Math.floor(Math.abs(x)/60)+Math.abs(x)%60,4),S:["th","st","nd","rd"][l%10>3?0:(l%100-l%10!==10)*l%10]};return o.replace(t,function(t){return t in y?y[t]:t.slice(1,t.length-1)})}}(),s={add:function(t,e,n){return r(t,e,n)},addHour:function(t,e){return r("h",t,e)},addMinute:function(t,e){return r("n",t,e)},addSecond:function(t,e){return r("s",t,e)},addDay:function(t,e){return r("d",t,e)},addWeek:function(t,e){return r("w",t,e)},addMonths:function(t,e){return r("m",t,e)},addYear:function(t,e){return r("y",t,e)},isDateEquals:function(t,e){return t.getFullYear()===e.getFullYear()&&t.getMonth()===e.getMonth()&&t.getDate()===e.getDate()},isEquals:function(t,e){return t===e||!(!t||!e)&&(!(!t.getTime||!e.getTime)&&t.getTime()===e.getTime())},isDateString:function(t){return i.test(t)},format:function(t,e,n){return a(t,e,n)},parse:function(t){return"string"==typeof t&&(t=t.replace(/-/g,"/")),n(t)},today:function(){var t=new Date;return new Date(t.getFullYear(),t.getMonth(),t.getDate())},getDate:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate())}};t.exports=s},function(t,e,n){var r=n(1),i=n(66),a=n(22);r.mix(a,{values:function(t,e){var n=[],r={},a=t.colArray(e);a=i.formatArray(a);for(var s=0,o=a.length;s<o;s++){var c=a[s];r[c]||void 0===c||(r[c]=!0,n.push(c))}return n},group:function(t,e){if(!e)return[t];var n=a.groupToMap(t,e),r=[];for(var i in n)n.hasOwnProperty(i)&&r.push(n[i]);return r},groupToMap:function(t,e){var n=t.colNames(),i={};if(!e)return{0:t};if(!r.isFunction(e)){var s=r.isArray(e)?e:e.replace(/\s+/g,"").split("*");e=function(t){for(var e="",n=0,r=s.length;n<r;n++)e+=t[s[n]].toString();return e}}t.each(function(t){var n=e(t);i[n]?i[n].push(t):i[n]=[t]});for(var o in i)i.hasOwnProperty(o)&&(i[o]=new a(i[o],{names:n.slice(0)}));return i},merge:function(){for(var t=r.toArray(arguments),e=t[0],n=e.colNames(),i=e.colCount(),s=[],o=0;o<i;o++){s[o]=[];for(var c=0;c<t.length;c++){var u=t[c].colArray(o);s[o]=s[o].concat(u)}}return new a(s,{names:n})},sort:function(t,e){var n=t.toJSON();return n.sort(function(t,n){return t[e]-n[e]}),new a(n,{names:t.colNames()})}}),t.exports=a},function(t,e,n){var r=n(1);t.exports={filterNull:function(t){var e=[];return r.each(t,function(t){r.isNull(t)||e.push(t)}),e},mixIf:function(t,e,n){r.each(n,function(n){t[n]=e[n]})},formatArray:function(t){var e=[];return r.each(t,function(t){r.isArray(t)?e=e.concat(t):e.push(t)}),e}}},function(t,e,n){"use strict";function r(t){if(!t._attrs&&t!==i){var e=t.superclass.constructor;e&&!e._attrs&&r(e),t._attrs={},a.mix(!0,t._attrs,e._attrs),a.mix(!0,t._attrs,t.ATTRS)}}var i,a=n(1);i=function(t){r(this.constructor),this._attrs={},this.events={};var e=this.getDefaultCfg();a.mix(this._attrs,e,t)},a.augment(i,{getDefaultCfg:function(){var t=this,e=t.constructor,n=e._attrs,r=a.mix(!0,{},n);return r},set:function(t,e){var n="_onRender"+a.ucfirst(t);return this[n]&&this[n](e,this._attrs[t]),this._attrs[t]=e,this},get:function(t){return this._attrs[t]},on:function(t,e){var n=this,r=n.events,i=r[t];return i||(i=r[t]=[]),i.push(e),n},fire:function(t,e){var n=this,r=n.events,i=r[t];i&&a.each(i,function(t){t(e)})},off:function(t,e){var n=this,r=n.events,i=r[t];return t?(i&&a.remove(i,e),n):(n.events={},n)},destroy:function(){var t=this,e=t.destroyed;return e?t:(t._attrs={},t.events={},void(t.destroyed=!0))}}),t.exports=i},function(t,e,n){var r=n(2);r.Geom.Polygon=n(69),n(70),r.Chart.registGeom("polygon"),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(2),s=a.Geom;r.ATTRS={coreType:"Polygon"},i.extend(r,s),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(2),a=i.Shape,s=i.G,o=a.registGeom("polygon",{defaultShapeType:"polygon"});a.registShape("polygon","polygon",{getShapePoints:function(t){var e=[];return r.each(t.x,function(n,r){var i=t.y[r];e.push({x:n,y:i})}),e},drawShape:function(t,e){var n=this.parsePoints(t.points),i=r.mix({fillStyle:t.color,z:!0},t.style);s.drawLines(n,e,i)}}),t.exports=o},function(t,e,n){var r=n(72);t.exports=r},function(t,e){"use strict";function n(t,e,r){r=r||0;for(var i in e)if(e.hasOwnProperty(i)){var o=e[i];null!==o&&s.isObject(o)?(s.isObject(t[i])||(t[i]={}),r<a?n(t[i],e[i],r+1):t[i]=e[i]):s.isArray(o)?(t[i]=[],t[i]=t[i].concat(o)):void 0!==o&&(t[i]=e[i])}}var r=Object.prototype,i=r.toString,a=5,s={substitute:function(t,e){return t&&e?t.replace(/\\?\{([^{}]+)\}/g,function(t,n){return"\\"===t.charAt(0)?t.slice(1):void 0===e[n]?"":e[n]}):t},ucfirst:function(t){return t+="",t.charAt(0).toUpperCase()+t.substring(1)},isString:function(t){return"string"==typeof t},isNumber:function(t){return"number"==typeof t},isNumeric:function(t){return!isNaN(parseFloat(t))&&isFinite(t)},isBoolean:function(t){return"boolean"==typeof t},isFunction:function(t){return"function"==typeof t},isArray:"isArray"in Array?Array.isArray:function(t){return"[object Array]"===i.call(t)},isDate:function(t){return"[object Date]"===i.call(t)},isNull:function(t){return void 0===t||null===t},notNull:function(t){return!s.isNull(t)},isBlank:function(t){if(s.isArray(t))return 0===t.length;if(s.isObject(t)){var e=0;return s.each(t,function(t,n){e++}),0===e}return!1},isObject:"[object Object]"===i.call(null)?function(t){return null!==t&&void 0!==t&&"[object Object]"===i.call(t)&&void 0===t.ownerDocument}:function(t){return"[object Object]"===i.call(t)},extend:function(t,e,n,r){s.isFunction(e)||(n=e,e=t,t=function(){});var i=Object.create?function(t,e){return Object.create(t,{constructor:{value:e}})}:function(t,e){function n(){}n.prototype=t;var r=new n;return r.constructor=e,r},a=i(e.prototype,t);return t.prototype=s.mix(a,t.prototype),t.superclass=i(e.prototype,e),s.mix(a,n),s.mix(t,r),t},augment:function(t){for(var e=s.toArray(arguments),n=1;n<e.length;n++){var r=e[n];s.isFunction(r)&&(r=r.prototype),s.mix(t.prototype,r)}},toArray:function(t){return t&&t.length?Array.prototype.slice.call(t):[]},mix:function(){var t=s.toArray(arguments),e=t[0];if(e===!0){e=t[1];for(var r=2;r<t.length;r++){var i=t[r];n(e,i)}}else for(var r=1;r<t.length;r++){var i=t[r];for(var a in i)i.hasOwnProperty(a)&&"constructor"!==a&&(e[a]=i[a])}return e},each:function(t,e){if(t)if(s.isObject(t)){for(var n in t)if(t.hasOwnProperty(n)){var r=e(t[n],n);if(r===!1)break}}else if(t.length)for(var i=0;i<t.length;i++){var r=e(t[i],i);if(r===!1)break}},requestAnimationFrame:function(t){var e=window.requestAnimationFrame||window.webkitRequestAnimationFrame||function(t){return setTimeout(t,16)};return e(t)},cancelAnimationFrame:function(t){var e=window.cancelAnimationFrame||window.webkitCancelAnimationFrame||function(t){return clearTimeout(t)};return e(t)}};t.exports=s},function(t,e,n){"use strict";function r(t,e){var n=[];return e?i.isArray(t[0])&&i.each(t[0],function(e,r){for(var i=e,a=1;a<t.length;a++)i+=t[a][r];n.push(i)}):i.each(t,function(t){i.isArray(t)?n=n.concat(t):n.push(t)}),n}var i=n(1),a=6,s=function(t){var e={},n=[],i=t.maxCount||a,s=r(t.data);if(s.length<i)n=[].concat(s);else{var o=s.length,c=parseInt(o/(i-1),10),u=s.map(function(t,e){return e%c===0?s.slice(e,e+c):null}).filter(function(t){return t});n.push(s[0]);for(var l=1;l<u.length&&l<i-1;l++)n.push(u[l][0]);n.push(s[o-1])}return e.categories=s,e.ticks=n,e};t.exports=s},function(t,e,n){"use strict";var r=n(1),i=4,a=6,s=[0,1,2,2.5,3,4,5,7.5,10],o=r.isNull,c=n(23),u=function(t){var e,n=t.min,u=t.max,l=t.interval,f=[],h=t.minCount||i,g=t.maxCount||a,p=(h+g)/2;if(o(l)&&(u===n&&(u=t.min+1,l=1),o(l))){var v=(u-n)/p;l=c.snapFactorTo(v,s,"ceil"),e=parseInt((u-n)/l,10),e>g&&(e=g),e<h&&(e=h),l=c.snapFactorTo((u-n)/e,s,"ceil")}u=c.snapMultiple(u,l,!0),n=c.snapMultiple(n,l,!1),e=Math.round((u-n)/l),n=r.fixedBase(n,l),f.push(n);for(var d=1;d<=e;d++)f.push(r.fixedBase(l*d+n,l));return{min:n,max:r.fixedBase(u,l),interval:l,count:e,ticks:f}};t.exports=u},function(t,e,n){"use strict";function r(t){return new Date(t).getFullYear()}function i(t){return new Date(t,0,1).getTime()}function a(t){return new Date(t).getMonth()}function s(t,e){var n=r(t),i=r(e),s=a(t),o=a(e);return 12*(i-n)+(o-s)%12}function o(t,e){return new Date(t,e,1).getTime()}function c(t,e){return Math.ceil((e-t)/d)}function u(t,e){return Math.ceil((e-t)/v)}function l(t,e){return Math.ceil((e-t)/6e4)}var f=n(1),h=6,g=[1,2,4,6,8,12],p=6e4,v=36e5,d=864e5,m=n(23),x=function(t){var e,n=t.min,x=t.max,y=t.interval,S=[];if(x===n&&(x=n+d),f.isNull(y)){var w,T,A=x-n,_=d,C=365*_;y=parseInt(A/(t.maxCount||h)),w=y/C;var D=r(n);if(w>.51){T=Math.ceil(w);for(var M=r(x),b=D;b<=M+T;b+=T)S.push(i(b));y=null}else if(w>.0834){for(var T=r(n),P=Math.ceil(w/.0834),k=a(n),I=s(n,x),b=0;b<=I+P;b+=P)S.push(o(D,b+k));y=null}else if(y>.5*_){var O=new Date(n),T=O.getFullYear(),P=O.getMonth(n),N=O.getDate(),F=Math.ceil(y/_),R=c(n,x);y=F*_;for(var b=0;b<R+F;b+=F)S.push(new Date(T,P,N+b).getTime())}else if(y>v){var O=new Date(n),T=O.getFullYear(),P=O.getMonth(n),F=O.getDate(),G=O.getHours(),L=m.snapTo(g,Math.ceil(y/v)),z=u(n,x);y=L*v;for(var b=0;b<=z+L;b+=L)S.push(new Date(T,P,F,G+b).getTime())}else if(y>p){var j=l(n,x),Y=Math.ceil(y/p);y=Y*p;for(var b=0;b<=j+Y;b+=Y)S.push(n+b*p)}else{y<1e3&&(y=1e3),n=1e3*Math.floor(n/1e3);var H=Math.ceil((x-n)/1e3),B=Math.ceil(y/1e3);y=1e3*B;for(var b=0;b<H+B;b+=B)S.push(n+1e3*b)}}if(!S.length){n=1e3*Math.floor(n/1e3),x=1e3*Math.ceil(x/1e3);for(var e=(x-n)/y,b=0;b<=e;b++)S.push(f.fixedBase(y*b+n,y))}return{max:x,min:n,interval:y,ticks:S,count:S.length}};t.exports=x},function(t,e,n){"use strict";function r(t,e){var n=e.toString(),r=n.indexOf(".");if(r===-1)return Math.round(t);var i=n.substr(r+1).length;return parseFloat(t.toFixed(i))}function i(t,e){for(var n in e)e.hasOwnProperty(n)&&"constructor"!==n&&(t[n]=e[n])}var a=n(71);a.mix(a,{mixin:function(t,e){if(t&&e){t._mixins=e,t.ATTRS=t.ATTRS||{};var n={};a.each(e,function(e){a.augment(t,e);var r=e.ATTRS;r&&a.mix(n,r)}),t.ATTRS=a.mix(n,t.ATTRS)}},map:function(t,e){var n=[];return a.each(t,function(t,r){n.push(e(t,r))}),n},filter:function(t,e){var n=[];return a.each(t,function(t,r){e(t,r)&&n.push(t)}),n},guid:function(){var t={};return function(e){return e=e||"g",t[e]?t[e]+=1:t[e]=1,e+t[e]}}(),inArray:function(t,e){return a.indexOf(t,e)!==-1},indexOf:function(t,e){var n=Array.prototype.indexOf;if(n)return n.call(t,e);for(var r=-1,i=0;i<t.length;i++)if(t[i]===e){r=i;break}return r},remove:function(t,e){var n=a.indexOf(t,e);n!==-1&&t.splice(n,1)},empty:function(t){if(!(t instanceof Array))for(var e=t.length-1;e>=0;e--)delete t[e];t.length=0},equalsArray:function(t,e){if(t===e)return!0;if(!t||!e)return!1;if(t.length!==e.length)return!1;for(var n=!0,r=0;r<t.length;r++)if(t[r]!==e[r]){n=!1;break}return n},wrapBehavior:function(t,e){var n=function(n){t[e](n)};return t["_wrap_"+e]=n,n},getWrapBehavior:function(t,e){return t["_wrap_"+e]},fixedBase:function(t,e){return r(t,e)},length:function(t){if(a.isArray(t))return t.length;if(a.isObject(t)){var e=0;return a.each(t,function(){e++}),e}return 0},clone:function(t){if("object"!=typeof t||null===t)return t;var e;if(a.isArray(t)){e=[];for(var n=0,r=t.length;n<r;n++)"object"==typeof t[n]&&null!=t[n]?e[n]=a.clone(t[n]):e[n]=t[n]}else{e={};for(var i in t)"object"==typeof t[i]&&null!=t[i]?e[i]=a.clone(t[i]):e[i]=t[i]}return e},simpleMix:function(t,e,n,r){return e&&i(t,e),n&&i(t,n),r&&i(t,r),t}}),t.exports=a},function(t,e,n){"use strict";var r=n(12),i=n(1),a=function(t){a.superclass.constructor.call(this,t)};i.extend(a,r),i.augment(a,{type:"identity",value:null,getText:function(){return this.value.toString()},scale:function(){return 1},invert:function(){return this.value}}),t.exports=a},function(t,e,n){"use strict";var r=n(12),i=n(1),a=n(15),s=function(t){s.superclass.constructor.call(this,t)};i.extend(s,r),i.augment(s,{type:"linear",isLinear:!0,min:null,max:null,nice:!0,tickCount:5,tickInterval:null,init:function(){var t=this;if(t.ticks){var e=t.ticks,n=t.translate(e[0]),r=t.translate(e[e.length-1]);(i.isNull(t.min)||t.min>n)&&(t.min=n),(i.isNull(t.max)||t.max<r)&&(t.max=r)}else t.min=t.translate(t.min),t.max=t.translate(t.max),t.initTicks()},calculateTicks:function(){var t=this,e=t.min,n=t.max,r=t.tickCount,i=t.tickInterval,s=a.number({min:e,max:n,minCount:r,maxCount:r,interval:i});return s.ticks},initTicks:function(){var t=this,e=t.calculateTicks();if(t.nice)t.ticks=e,t.min=e[0],t.max=e[e.length-1];else{var n=[];i.each(e,function(e){e>=t.min&&e<=t.max&&n.push(e)}),t.ticks=n}},scale:function(t){if(null===t||void 0===t)return NaN;var e=this.max,n=this.min;if(e===n)return 0;var r=(t-n)/(e-n),i=this.rangeMin(),a=this.rangeMax();return i+r*(a-i)},invert:function(t){var e=(t-this.rangeMin())/(this.rangeMax()-this.rangeMin());return this.min+e*(this.max-this.min)}}),t.exports=s},function(t,e,n){"use strict";var r=n(25),i=n(1),a=n(63),s=n(15),o=function(t){o.superclass.constructor.call(this,t)};i.extend(o,r),i.augment(o,{type:"timeCat",mask:"yyyy-mm-dd HH:MM:ss",tickCount:5,init:function(){var t=this,e=this.values;e.sort(function(e,n){return e=t._toTimeStamp(e),n=t._toTimeStamp(n),e-n}),i.each(e,function(n,r){e[r]=t._toTimeStamp(n)}),this.ticks=this.calculateTicks(!0)},calculateTicks:function(t){var e=this,n=e.tickCount,r=s.category({maxCount:n,data:e.values}),o=r.ticks;return t&&i.each(o,function(t,n){o[n]=a.format(t,e.mask)}),o},translate:function(t){t=this._toTimeStamp(t);var e=this.values.indexOf(t);return e===-1&&(e=i.isNumber(t)&&t<this.values.length?t:NaN),e},scale:function(t){var e,n=this.rangeMin(),r=this.rangeMax(),i=this.translate(t);return e=this.values.length>1&&i>-1?i/(this.values.length-1):0,n+e*(r-n)},getText:function(t){var e="",n=this.translate(t);n>-1&&(e=this.values[n]);var r=this.formatter;return e=parseInt(e,10),e=r?r(e):a.format(e,this.mask)},getTicks:function(){var t=this,e=this.calculateTicks(!1),n=[];return i.each(e,function(e){var r;r=i.isObject(e)?e:{text:t.getText(e),value:t.scale(e)},n.push(r)}),n},_toTimeStamp:function(t){return i.isString(t)&&(t=t.replace(/-/gi,"/").replace("T"," ").replace("Z",""),t=new Date(t).getTime()),i.isDate(t)&&(t=t.getTime()),t}}),t.exports=o},function(t,e,n){var r=n(2);r.Geom.Schema=n(81),n(82),r.Chart.registGeom("schema"),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(2),s=a.Geom;r.ATTRS={coreType:"Schema"},i.extend(r,s),i.mixin(r,[s.WidthMixin]),t.exports=r},function(t,e,n){"use strict";var r=n(2),i=r.Shape,a=i.registGeom("schema",{});t.exports=a},function(t,e,n){"use strict";var r=n(11),i=n(1),a=function(t){a.superclass.constructor.call(this,t)};i.extend(a,r),i.augment(a,{type:"color",names:["color"],arr:null}),r.Color=a,r.Position=n(85),r.Size=n(87),r.Shape=n(86),r.Opacity=n(84),t.exports=r},function(t,e,n){"use strict";var r=n(1),i=n(11),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{type:"opacity",names:["opacity"],min:.1,max:1,arr:null}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(11),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{type:"position",names:["x","y","z"],coord:null,parseParam:function(t,e){var n;return r.isArray(t)?(n=[],r.each(t,function(t){n.push(e.scale(t))})):n=e.scale(t),n},callback:function(t,e){var n,i,a,s=this.coord;if(t||0===t||(t=.1),e||0===e||(e=.1),r.isArray(e)&&r.isArray(t)){n=[],i=[];for(var o=0,c=0;o<t.length&&c<e.length;o++,c++)a=s.convertPoint({x:t[o],y:e[c]}),n.push(a.x),i.push(a.y)}else if(r.isArray(e))i=[],r.each(e,function(e){a=s.convertPoint({x:t,y:e}),n&&n!==a.x?(r.isArray(n)||(n=[n]),n.push(a.x)):n=a.x,i.push(a.y)});else if(r.isArray(t))n=[],r.each(t,function(t){a=s.convertPoint({x:t,y:e}),i&&i!==a.y?(r.isArray(i)||(i=[i]),i.push(a.y)):i=a.y,n.push(a.x)});else{var u=s.convertPoint({x:t,y:e});n=u.x,i=u.y}return[n,i]}}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(11),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{type:"shape",names:["shape"],arr:null}),t.exports=a},function(t,e,n){"use strict";var r=n(1),i=n(11),a=function(t){a.superclass.constructor.call(this,t)};r.extend(a,i),r.augment(a,{type:"size",names:["size"],arr:null}),t.exports=a},function(t,e,n){var r=n(2);r.Geom.Area=n(26),r.Geom.AreaStack=n(89),n(90),r.Chart.registGeom("area"),r.Chart.registGeom("areaStack"),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(26),s=n(2),o=s.Geom.StackMixin;i.extend(r,a),i.mixin(r,[o]),t.exports=r},function(t,e,n){"use strict";function r(t,e){return Math.abs(t-e)<1e-5}function i(t,e){var n=!0;return s.each(t,function(t){if(!r(t.x,e.x)||!r(t.y,e.y))return n=!1,!1}),n}function a(t,e){var n=this,r=t.points,a=[],o=[];s.each(r,function(t){o.push(t[0]),a.push(t[1])});var c=s.mix({fillStyle:t.color},t.style),l=u.before(e,c);o.reverse(),a=n.parsePoints(a),o=n.parsePoints(o),t.isInCircle?(i(o,t.center)&&(o=[]),n.drawCircleArea(a,o,l)):n.drawRectShape(a,o,l),u.after(l,c)}var s=n(1),o=n(2),c=o.Shape,u=o.G,l=c.registGeom("area",{defaultShapeType:"area"});c.registShape("area","area",{getShapePoints:function(t){var e=t.x,n=t.y,r=t.y0;n=s.isArray(n)?n:[r,n];var i=[];return i.push({x:e,y:n[0]},{x:e,y:n[1]}),i},drawShape:function(t,e){a.call(this,t,e)},drawCircleArea:function(t,e,n){u.lines(t,n),n.lineTo(t[0].x,t[0].y),n.closePath(),e.length&&(u.lines(e,n),n.closePath())},drawRectShape:function(t,e,n){t=t.concat(e),u.lines(t,n),n.closePath()}}),c.registShape("area","smooth",{drawShape:function(t,e){a.call(this,t,e)},drawCircleArea:function(t,e,n){u.smooth(t,n),n.closePath(),e.length&&(u.smooth(e,n),n.closePath())},drawRectShape:function(t,e,n){u.smooth(t,n),n.lineTo(e[0].x,e[0].y),u.smooth(e,n,!1),n.closePath()}}),t.exports=l},function(t,e,n){var r=n(2);n(92),t.exports=r},function(t,e,n){function r(t){var e=t.sort(function(t,e){return t<e?1:-1}),n=e.length;if(n<4)for(var r=e[n-1],i=0;i<4-n;i++)e.push(r);return e}function i(t,e,n){var i=r(e),a=[{x:t,y:i[0]},{x:t,y:i[1]},{x:t-n/2,y:i[2]},{x:t-n/2,y:i[1]},{x:t+n/2,y:i[1]},{x:t+n/2,y:i[2]},{x:t,y:i[2]},{x:t,y:i[3]}];return a}var a=n(2),s=n(1),o=a.Shape,c=a.G;n(80);var u=o.registShape("schema","candle",{getShapePoints:function(t){var e=i(t.x,t.y,t.size);return e},drawShape:function(t,e){var n=this.parsePoints(t.points),r=s.mix({strokeStyle:t.color,fillStyle:t.color},t.style),i=c.before(e,r);i.moveTo(n[0].x,n[0].y),i.lineTo(n[1].x,n[1].y),i.moveTo(n[2].x,n[2].y);for(var a=3;a<6;a++)i.lineTo(n[a].x,n[a].y);i.closePath(),i.moveTo(n[6].x,n[6].y),i.lineTo(n[7].x,n[7].y),c.after(i,r)}});t.exports=u},function(t,e,n){"use strict";function r(t){var e=t.slice(0);if(e.length>0){var n=e[0],r=e[e.length-1];0!==n.value&&e.unshift({value:0}),1!==r.value&&e.push({value:1})}return e}var i=n(1),a=n(94),s=n(3),o=function(t){this.axisCfg={},i.mix(this,t)};i.augment(o,{axisCfg:{},canvas:null,_isHide:function(t){var e=this.axisCfg;return!e||e[t]===!1},_getLinePosition:function(t,e){var n="";return"x"===t&&(n="bottom"),"y"===t&&(n=e?"right":"left"),n},_getLineCfg:function(t,e,n){var r,i,a=1;return"x"===e?(r={x:0,y:0},i={x:1,y:0}):n?(r={x:1,y:0},i={x:1,y:1}):(r={x:0,y:0},i={x:0,y:1},a=-1),t.isTransposed&&(a*=-1),{offsetFactor:a,start:t.convertPoint(r),end:t.convertPoint(i)}},_getCircleCfg:function(t){return{startAngle:t.get("startAngle"),endAngle:t.get("endAngle"),center:t.get("center"),radius:t.get("radius")}},_getRadiusCfg:function(t){var e,n,r=t.isTransposed;return r?(e={x:0,y:0},n={x:1,y:0}):(e={x:0,y:0},n={x:0,y:1}),{offsetFactor:-1,start:t.convertPoint(e),end:t.convertPoint(n)}},_getAxisCfg:function(t,e,n,a,s){var o=this.axisCfg,c=e.getTicks(),u=i.mix(!0,{ticks:c,canvas:this.canvas},s,o[e.dim]);if(u.grid&&n){var l=[],f=r(n.getTicks());i.each(c,function(e){var n=[];i.each(f,function(r){var i="x"===a?e.value:r.value,s="x"===a?r.value:e.value,o=t.convertPoint({
	x:i,y:s});n.push(o)}),l.push(n)}),u.gridPoints=l}return u},_createAxis:function(t,e,n,r,o){var c,u,l,f=this,h=t.get("type"),g=t.isTransposed;if("cartesian"===h){c=a.Line;var p=f._getLinePosition(r,o);u=s.axis[p],l=f._getLineCfg(t,r,o)}else"x"===r&&!g||"y"===r&&g?(c=a.Circle,u=s.axis.circle,l=f._getCircleCfg(t)):(c=a.Line,u=s.axis.radius,l=f._getRadiusCfg(t));var v=f._getAxisCfg(t,e,n,r,u);v=i.mix(!0,{},v,l);var d=new c(v);return d.drawGrid(),d},createAxis:function(t,e,n){var r=this,a=[];if(e&&!r._isHide(e.dim)){var s=r._createAxis(t,e,n[0],"x");a.push(s)}i.each(n,function(n,i){if(!r._isHide(n.dim)){var s=r._createAxis(t,n,e,"y",i);a.push(s)}}),i.each(a,function(t){t.draw()})}}),t.exports=o},function(t,e,n){"use strict";t.exports={Line:n(96),Circle:n(95)}},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(28),s=n(7),o=n(8);r.ATTRS={startAngle:-Math.PI/2,endAngle:3*Math.PI/2,radius:null,center:null},i.extend(r,a),i.augment(r,{getOffsetPoint:function(t){var e=this,n=e.get("startAngle"),r=e.get("endAngle"),i=n+(r-n)*t;return e._getCirclePoint(i)},_getCirclePoint:function(t,e){var n=this,r=n.get("center");return e=e||n.get("radius"),{x:r.x+Math.cos(t)*e,y:r.y+Math.sin(t)*e}},getTextAlignInfo:function(t,e){var n,r=this,i=r.getOffsetVector(t,e),a="middle";return i.x>0?n="left":i.x<0?n="right":(n="center",i.y>0?a="top":i.y<0&&(a="bottom")),{textAlign:n,textBaseline:a}},getAxisVector:function(t){var e=this,n=e.get("center"),r=e.get("offsetFactor");return new o((t.y-n.y)*r,(t.x-n.x)*-1*r)},drawLine:function(t){var e=this,n=e.get("center"),r=e.get("radius"),i=e.get("canvas"),a=e.get("startAngle"),o=e.get("endAngle");s.drawArc(n,r,a,o,i,t)}}),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(28),s=n(7),o=n(8);r.ATTRS={start:null,end:null},i.extend(r,a),i.augment(r,{getOffsetPoint:function(t){var e=this,n=e.get("start"),r=e.get("end"),i=r.x-n.x,a=r.y-n.y;return{x:n.x+i*t,y:n.y+a*t}},getAxisVector:function(){var t=this,e=t.get("start"),n=t.get("end");return new o(n.x-e.x,n.y-e.y)},drawLine:function(t){var e=this,n=e.get("canvas"),r=e.get("start"),i=e.get("end");s.drawLine(r,i,n,t)}}),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t),this.__init()}function i(t){return function(){var e=this,n=new f({chart:e,type:t,coord:e.get("coord")});return e.__addLayer(n),n}}var a=n(6),s=n(38),o=n(1),c=n(5),u=n(30),l=n(16),f=n(105),h=n(107),g=n(93),p=n(37),v=n(3),d=n(98),m=n(27);r.ATTRS={id:null,margin:null,data:null,scales:{},coordCfg:{type:"cartesian"},layers:null,geoms:null,colDefs:null},o.extend(r,a),o.augment(r,{source:function(t,e){var n=this;return e&&n.set("colDefs",e),n.__initData(t),n},axis:function(t,e){var n=this,r=n.get("axisAssist");return t?(r.axisCfg=r.axisCfg||{},r.axisCfg[t]=e):r.axisCfg=null,n},createScale:function(t,e){var n=this;e=e||n.get("data");var r=n.get("scales");return r[t]||(r[t]=n._createScale(t,e)),r[t]},_createScale:function(t,e){var n=this,r=n.get("coord"),i=r.isPolar,a=n.get("scaleAssist");return a.createScale(t,e,i)},coord:function(t,e){var n,r=this;return e?(n=e,n.type=t):n=o.isString(t)?{type:t}:t,r.set("coordCfg",n),r.__initCoord(),r},getPosition:function(t){var e=this,n=e.get("coord"),r=e._getXScale(),i=e._getYScales()[0],a=r.dim,s=r.scale(t[a]),o=i.dim,c=i.scale(t[o]);return n.convertPoint({x:s,y:c})},getRecord:function(t){var e=this,n=e.get("coord"),r=e._getXScale(),i=e._getYScales()[0],a=n.invertPoint(t),s={};return s[r.dim]=r.invert(a.x),s[i.dim]=i.invert(a.y),s},getSnapRecords:function(t,e){var n=this.get("geoms")[0],r=n.getSnapRecords(t,e);return r},__init:function(){var t=this;t.__initCanvas(),t.set("layers",[]),t.set("geoms",[]),t.set("scaleAssist",new h),t.set("axisAssist",new g({canvas:t.get("canvas")})),t.set("guideAssist",new p),t.set("animateAssist",new m),t.__initData(t.get("data"))},__initData:function(t){t&&(t instanceof c||(t=new c(t)),this.set("data",t));var e=this.get("colDefs");if(e){var n=this.get("scaleAssist");n.defs=e}},_getRatio:function(){return v.pixelRatio},__initCanvas:function(){var t,e=this,n=e.get("id"),r=e.get("el");t=r?r:document.getElementById(n);var i=d.getWidth(t),a=d.getHeight(t),s=e._getRatio();if(s){t.width=i*s,t.height=a*s;var o=t.getContext("2d");o.scale(s,s)}e.set("width",i),e.set("height",a),e.set("canvas",t),e.__initLayout()},__initLayout:function(){var t=this,e=t.get("margin");o.isNull(e)&&(e=v.margin,t.set("margin",e));var n,r,i,a,s=t.get("width"),c=t.get("height");o.isNumber(e)?(n=a=e,r=i=e):o.isArray(e)&&(n=e[0],i=o.isNull(e[1])?e[0]:e[1],a=o.isNull(e[2])?e[0]:e[2],r=o.isNull(e[3])?i:e[3]),a=c-a,i=s-i;var u={plot:{start:{x:r,y:n},end:{x:i,y:a}},lAxis:{start:{x:0,y:n},end:{x:r,y:c}},rAxis:{start:{x:i,y:n},end:{x:s,y:c}},bAxis:{start:{x:r,y:a},end:{x:i,y:c}}};t.set("layout",u),t.__initPlot()},__initPlot:function(){var t=this,e=t.get("layout"),n=new s({start:e.plot.start,end:e.plot.end});t.set("plot",n),t.__initCoord()},__initCoord:function(){var t=this,e=t.get("plot"),n=o.mix({},t.get("coordCfg"),{plot:e}),r=n.type,i=u[o.ucfirst(r)]||u.Cartesian,a=new i(n);t.set("coord",a)},__addLayer:function(t){var e=this;e.get("layers").push(t)},clear:function(){var t=this.get("canvas").parentNode;return this.get("guideAssist").clear(t),this.set("layers",[]),this.set("geoms",[]),this.set("scales",{}),this._clearCanvas(),this},_clearCanvas:function(){var t=this.get("canvas"),e=t.getContext("2d");return e.clearRect(0,0,t.width,t.height),this},_isDataChange:function(){var t=this,e=!1,n=t.get("geoms");return o.each(n,function(t){if(t.get("isAdjust"))return e=!0,!1}),e},_trainScale:function(t){var e,n=this,r=n._getYScales();t.length>0&&(e=c.merge.apply(null,t)),o.each(r,function(t){if(t.isLinear){var r=n._createScale(t.dim,e);t.change({min:r.min,max:r.max})}})},_renderBackGuide:function(){var t=this,e=t.get("canvas"),n=t.get("guideAssist");if(n.guides.length){var r=t.get("coord"),i=t._getXScale(),a=t._getYScales()[0];n.setScale(i,a),n.paintBack(r,e)}},_renderFrontGuide:function(){var t=this,e=t.get("canvas"),n=t.get("guideAssist");if(n.guides.length){var r=t.get("coord"),i=t._getXScale(),a=t._getYScales()[0];n.setScale(i,a),n.paintFront(r,e)}},_renderAnimate:function(t){var e=this,n=e.get("imageData"),r=e.get("bgImageData"),i=e.get("animateAssist"),a=e.get("canvas"),s=e.get("coord"),o=s.get("center"),c=s.get("radius"),u=e.get("geoms")[0],l=u.get("core"),f=l.getYScale(),h=l.getYMinValue(),g=s.convertPoint({x:0,y:f.scale(h)});i.animate&&(i.setImageData(n,r),i.setStartPoint(g),i.setPolar(o,c),i.setCallBack(t),i.paint(a))},render:function(){var t,e,n,r=this,i=r.get("layers"),a=r.get("geoms"),s=r.get("data"),c=r.get("animateAssist"),u=[];for(n=0;n<i.length;n++)t=i[n],e=t.createGeom(),e.initData(s),u=u.concat(e.get("frames")),a.push(e);return r._isDataChange()&&r._trainScale(u),r.beforeDrawGeom(),c.animate?o.requestAnimationFrame(function(){r.set("bgImageData",r.getImageData()),r._clearCanvas(),r.drawGeom(a),r.set("imageData",r.getImageData()),r._clearCanvas(),r._renderAnimate(r._renderFrontGuide.bind(r))}):(r.drawGeom(a),r._renderFrontGuide()),r},drawGeom:function(t,e){for(var n=0;n<t.length;n++)e?t[n].draw(e):t[n].draw()},beforeDrawGeom:function(){var t=this;t._renderAxis(),t._renderBackGuide()},getImageData:function(){var t=this,e=t.get("canvas"),n=e.getContext("2d"),r=t.get("width"),i=t.get("height"),a=t._getRatio();return n.getImageData(0,0,r*a,i*a)},_getXScale:function(){var t=this,e=t.get("geoms"),n=e[0].getXScale();return n},_getYScales:function(){var t=this,e=t.get("geoms"),n=[];return o.each(e,function(t){var e=t.getYScale();o.indexOf(n,e)===-1&&n.push(e)}),n},_renderAxis:function(){var t=this,e=t.get("axisAssist"),n=t._getXScale(),r=t._getYScales(),i=t.get("coord");e.createAxis(i,n,r)},guide:function(){return this.get("guideAssist")},animate:function(){return this.get("animateAssist")}});for(var x in l)l.hasOwnProperty(x)&&o.isFunction(l[x])&&(x=x[0].toLowerCase()+x.substr(1),r.prototype[x]=i(x));r.registGeom=function(t){t=t[0].toLowerCase()+t.substr(1),r.prototype[t]=i(t)},t.exports=r},function(t,e){"use strict";var n={getStyle:function(t,e){return"undefined"!=typeof window&&window.getComputedStyle?window.getComputedStyle(t,null)[e]:t.currentStyle[e]},getWidth:function(t){var e=n.getStyle(t,"width");return"auto"===e&&(e=t.offsetWidth),parseFloat(e)},getHeight:function(t){var e=n.getStyle(t,"height");return"auto"===e&&(e=t.offsetHeight),parseFloat(e)}};t.exports=n},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(32),s=n(33);i.extend(r,a),i.mixin(r,[s]),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(13);r.ATTRS={coreType:"Line"},i.extend(r,a),t.exports=r},function(t,e,n){"use strict";function r(t){r.superclass.constructor.call(this,t)}var i=n(1),a=n(13);i.extend(r,a),r.ATTRS={coreType:"Point"},t.exports=r},function(t,e,n){"use strict";function r(t){var e=t.x,n=t.y,r=t.y0,a=t.size,s=r,o=n;i.isArray(n)&&(o=n[1],s=n[0]);var c,u;i.isArray(e)?(c=e[0],u=e[1]):(c=e-a/2,u=e+a/2);var l=[];return l.push({x:c,y:s},{x:c,y:o},{x:u,y:o},{x:u,y:s}),l}var i=n(1),a=n(14),s=n(7),o=a.registGeom("interval",{defaultShapeType:"rect"});a.registShape("interval","rect",{getShapePoints:function(t){return r(t)},drawShape:function(t,e){var n=this.parsePoints(t.points),r=i.mix({fillStyle:t.color,z:!0},t.style);if(t.isInCircle){var a=n.slice(0);this._coord.isTransposed&&(a=[n[0],n[3],n[2],n[1]]),s.drawFan(a,t.center,e,r)}else s.drawRect(n,e,r)}}),t.exports=o},function(t,e,n){"use strict";function r(t){var e=i.mix({strokeStyle:t.color,lineWidth:t.size||o,z:t.isInCircle},t.style);return e}var i=n(1),a=n(14),s=n(7),o=4,c=n(36),u=n(3),l=a.registGeom("line",{defaultShapeType:"line"});a.registShape("line","line",{getShapePoints:function(t){return c.splitPoints(t)},drawShape:function(t,e){var n=this.parsePoints(t.points),i=r(t);s.drawLines(n,e,i)}}),a.registShape("line","smooth",{drawShape:function(t,e){var n=this.parsePoints(t.points),i=r(t);s.drawSmooth(n,e,i)}}),a.registShape("line","dash",{drawShape:function(t,e){var n=this.parsePoints(t.points),i=r(t);i.lineDash=u.lineDash,s.drawLines(n,e,i)}}),t.exports=l},function(t,e,n){"use strict";function r(t){return{size:t.size||o,style:i.mix({lineWidth:0,strokeStyle:t.color,fillStyle:t.color},t.style)}}var i=n(1),a=n(14),s=n(7),o=5,c=n(36),u=a.registGeom("point",{defaultShapeType:"circle"});a.registShape("point","circle",{getShapePoints:function(t){return c.splitPoints(t)},drawShape:function(t,e){if(0!==t.size){var n=r(t),a=this.parsePoints(t.points),o=n.size,c=n.style;i.each(a,function(t){s.drawCircle(t,o,e,c)})}}}),a.registShape("point","rect",{drawShape:function(t,e){if(0!==t.size){var n=r(t),a=this.parsePoints(t.points),o=n.size,c=n.style;i.each(a,function(t){s.drawShape(e,c,function(e){e.rect(t.x-o,t.y-o,2*o,2*o)})})}}}),t.exports=u},function(t,e,n){"use strict";var r=n(1),i=n(83),a=n(3),s=n(16),o=n(35),c=function(t){r.mix(this,t),this.attrs=[]};r.augment(c,{type:null,attrs:null,chart:null,styleCfg:null,_createScales:function(t){var e=this,n=[];return r.each(t,function(t){var r=e._createScale(t);n.push(r)}),n},createGeom:function(){var t=this,e=t.type,n=s[r.ucfirst(e)],i=new n({type:e,attrs:t.attrs,styleCfg:t.styleCfg,coord:t.coord,container:t.chart.get("canvas")});return i},_createScale:function(t){var e=this.chart;return e.createScale(t)},_parseDims:function(t){return r.isString(t)&&t.indexOf("*")!==-1?t=t.replace(/\s+/g,"").split("*"):(r.isNumber(t)||r.isString(t))&&(t=[t]),t},_addAttr:function(t,e){t=r.ucfirst(t);var n=this.attrs,a=new i[t](e);n.push(a)},_createAttr:function(t,e,n){e=this._parseDims(e);var i,s=this._createScales(e),c=[],u=r.ucfirst(this.type),l={dims:e,scales:s};"shape"===t?(i=o[u],r.each(i,function(t,e){r.isObject(t)&&c.push(e)})):c=a[t+"s"],r.isFunction(n)?l.callback=n:r.isArray(n)&&(c=n),"position"===t&&(l.coord=this.coord),"size"===t?(l.min=c.min,l.max=c.max):l.arr=c,this._addAttr(t,l)},position:function(t,e){return this._createAttr("position",t,e),this},color:function(t,e){return this._createAttr("color",t,e),this},size:function(t,e){return this._createAttr("size",t,e),this},shape:function(t,e){return this._createAttr("shape",t,e),this},style:function(t){return this.styleCfg=t,this}}),t.exports=c},function(t,e,n){"use strict";function r(t){return new o(t.x,t.y)}function i(t,e){return t.x*=e,t.y*=e,t}function a(t,e,n,a){var s,c,u,l,f,h,g,p,v=[],d=!!a;if(d){for(u=new o(1/0,1/0),l=new o((-(1/0)),(-(1/0))),p=0,g=t.length;p<g;p++)f=r(t[p]),u.min(f),l.max(f);u.min(r(a[0])),l.max(r(a[1]))}for(p=0,h=t.length;p<h;p++){if(f=r(t[p]),n)s=r(t[p?p-1:h-1]),c=r(t[(p+1)%h]);else{if(0===p||p===h-1){v.push([f.x,f.y]);continue}s=r(t[p-1]),c=r(t[p+1])}var m=o.sub(c,s);i(m,e);var x=f.distanceTo(s),y=f.distanceTo(c),S=x+y;0!==S&&(x/=S,y/=S);var w=i(m.clone(),-x),T=i(m.clone(),y),A=o.add(f,w),_=o.add(f,T);d&&(A.max(u),A.min(l),_.max(u),_.min(l)),v.push([A.x,A.y]),v.push([_.x,_.y])}return n&&v.push(v.shift()),v}function s(t,e,n){for(var r,i,s,o=!!e,c=a(t,.4,o,n),u=t.length,l=[],f=0;f<u-1;f++)r=c[2*f],i=c[2*f+1],s=t[f+1],l.push(["C",r[0],r[1],i[0],i[1],s.x,s.y]);return o&&(r=c[u],i=c[u+1],s=t[0],l.push(["C",r[0],r[1],i[0],i[1],s.x,s.y])),l}var o=n(8);t.exports={smooth:s}},function(t,e,n){"use strict";var r=n(1),i=n(24),a=n(3),s=n(5),o={LINEAR:"linear",CAT:"cat",TIME_CAT:"timeCat"},c=function(t){r.mix(this,t),this.defs=this.defs||{}};r.augment(c,{defs:null,_getDefs:function(){var t=this.defs;return r.mix(!0,{},a.scales,t)},_getRange:function(t,e,n){return t===o.CAT||t===o.TIME_CAT?this._getCatRange(e,n):[0,1]},_getCatRange:function(t,e){var n,r=t.length;return n=1===r?[.5,1]:e?[0,1-1/r]:[1/(2*r),1-1/(2*r)]},_getScaleCfg:function(t,e,n){var r={dim:e};if(n&&n.names.length>0&&n.contains(e)){var i=s.values(n,e);i.length>0&&t!==o.CAT&&t!==o.TIME_CAT&&(r.min=Math.min.apply(null,i),r.max=Math.max.apply(null,i)),r.values=i}return r},_getDefaultType:function(t,e){var n=o.LINEAR,i=e.rowObject(0),a=i[t];return r.isArray(a)&&(a=a[0]),r.isString(a)&&(n=o.CAT),n},_createDefaultScale:function(t,e){var n=this._getDefaultType(t,e),r=this._getScaleCfg(n,t,e);return i[n](r)},createScale:function(t,e,n){var a,s=this,o=s._getDefs();if(r.isNumber(t))a=i.I({value:t,dim:t.toString()});else if(o[t]||r.indexOf(e.colNames(),t)!==-1)if(o[t]){var c=o[t],u=c.type||s._getDefaultType(t,e),l=s._getScaleCfg(u,t,e);r.isNull(c.min)||(l.min=c.min),r.isNull(c.max)||(l.max=c.max),r.mix(l,c),l.values||(l.values=[]),a=i[u](l)}else a=s._createDefaultScale(t,e);else a=i.I({value:t,dim:t});if(a&&"I"!==a.type&&(!o[t]||!o[t].range)&&a.values){var f=s._getRange(a.type,a.values,n);a.range=f}return a}}),t.exports=c}])});

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by godsong on 16/12/12.
	 */
	
	//var Canvas=require('../../../js/core/gcanvas');
	var Canvas=__webpack_require__(8);
	
	//字体渲染测试
	exports.case0 = function (GM,context) {
	
	
	var margin = 30;    
	context = Canvas.getContext('2d');
	
	
	/*
	context.font="30px";
	context.fillText("1 abc 你好 123 ~!@#$%^&*()_+",20,50);
	
	context.font="30px Arial";
	context.fillText("2 abc 你好 123 ~!@#$%^&*()_+",20,50 + margin);
	
	context.font="30px sans-serif";
	context.fillText("3 abc 你好 123 ~!@#$%^&*()_+",20,50 + margin*2);
	*/
	
	//context.font="30px NotoSansSC";
	//context.fillText("4 abc 你好 123 ~!@#$%^&*()_+",20,250);
	context.font="30px sans-serif";
	context.fillText("font test",20,50 + margin*3);
	
	context.font="30px sans-serif";
	context.fillText("5.1 abcdefghijklmn ABCDEFGHIJKLMNOPQRSTUVWXYZ",20,50 + margin*4);
	
	context.font="30px serif";
	context.fillText("5.2 abcdefghijklmn ABCDEFGHIJKLMNOPQRSTUVWXYZ",20,50 + margin*5);
	
	context.font="30px SimSun";
	context.fillText("你好 阿里巴巴 淘宝 天猫 阿里云 菜鸟",20,50 + margin*6);
	
	context.font="30px Arial";
	context.fillText("你好 阿里巴巴 淘宝 天猫 阿里云 菜鸟",20,50 + margin*7);
	
	context.font="30px serif";
	context.fillText("5.3 1234567890",20,50 + margin*8);
	
	context.font="30px sans-serif";
	context.fillText("5.4 1234567890",20,50 + margin*9);
	
	context.font="30px sans-serif";
	context.fillText("5.5 ~!@#$%^&*()_+{}|[]\:\";''<>?,./",20, 50 + margin*10);
	
	context.font="30px serif";
	context.fillText("5.6 ~!@#$%^&*()_+{}|[]\:\";''<>?,./",20, 50 + margin*11);
	
	context.render();
	
	
	};
	
	//点图
	exports.case1 = function (GM) {
	    GM.Global.pixelRatio = 1;
	    var Util = GM.Util;
	    var data = [
	        {"time": '2016-08-08 00:00:00', "tem": 10},
	        {"time": '2016-08-08 00:10:00', "tem": 22},
	        {"time": '2016-08-08 00:30:00', "tem": 20},
	        {"time": '2016-08-09 00:35:00', "tem": 26},
	        {"time": '2016-08-09 01:00:00', "tem": 20},
	        {"time": '2016-08-09 01:20:00', "tem": 26},
	        {"time": '2016-08-10 01:40:00', "tem": 28},
	        {"time": '2016-08-10 02:00:00', "tem": 20},
	        {"time": '2016-08-10 02:20:00', "tem": 28}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    var defs = {
	        time: {
	            type: 'timeCat',
	            mask: 'mm/dd',
	            tickCount: 3
	        },
	        tem: {
	            tickCount: 5,
	            min: 0
	        }
	    };
	    //配置刻度文字大小，供PC端显示用(移动端可以使用默认值20px)
	    chart.axis('tem', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    chart.axis('time', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    chart.source(data, defs);
	    chart.point().position('time*tem');
	    chart.render();
	};
	
	//折线图
	exports.case2 = function (GM) {
	
	    GM.Global.pixelRatio = 1;
	    var Util = GM.Util;
	    var data = [
	        {"time": '2016-08-08 00:00:00', "tem": 10},
	        {"time": '2016-08-08 00:10:00', "tem": 22},
	        {"time": '2016-08-08 00:30:00', "tem": 20},
	        {"time": '2016-08-09 00:35:00', "tem": 26},
	        {"time": '2016-08-09 01:00:00', "tem": 20},
	        {"time": '2016-08-09 01:20:00', "tem": 26},
	        {"time": '2016-08-10 01:40:00', "tem": 28},
	        {"time": '2016-08-10 02:00:00', "tem": 20},
	        {"time": '2016-08-10 02:20:00', "tem": 28}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    var defs = {
	        time: {
	            type: 'timeCat',
	            mask: 'mm/dd',
	            tickCount: 3,
	            range: [0, 1]
	        },
	        tem: {
	            tickCount: 5,
	            min: 0
	        }
	    };
	    //配置刻度文字大小，供PC端显示用(移动端可以使用默认值20px)
	    chart.axis('tem', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    chart.axis('time', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    chart.source(data, defs);
	    chart.line().position('time*tem');
	    chart.render();
	
	};
	
	//平滑折线图
	exports.case3 = function (GM) {
	
	    GM.Global.pixelRatio = 1;
	    var Util = GM.Util;
	    var data = [
	        {"time": '周一', "tem": 10, "city": "beijing"},
	        {"time": '周二', "tem": 22, "city": "beijing"},
	        {"time": '周三', "tem": 20, "city": "beijing"},
	        {"time": '周四', "tem": 26, "city": "beijing"},
	        {"time": '周五', "tem": 20, "city": "beijing"},
	        {"time": '周六', "tem": 26, "city": "beijing"},
	        {"time": '周日', "tem": 28, "city": "beijing"},
	        {"time": '周一', "tem": 5, "city": "newYork"},
	        {"time": '周二', "tem": 12, "city": "newYork"},
	        {"time": '周三', "tem": 26, "city": "newYork"},
	        {"time": '周四', "tem": 20, "city": "newYork"},
	        {"time": '周五', "tem": 28, "city": "newYork"},
	        {"time": '周六', "tem": 26, "city": "newYork"},
	        {"time": '周日', "tem": 20, "city": "newYork"}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    var defs = {
	        time: {
	            tickCount: 7,
	            range: [0, 1]
	        },
	        tem: {
	            tickCount: 5,
	            min: 0
	        }
	    };
	    //配置time刻度文字样式
	    var label = {
	        fill: '#979797',
	        font: '14px SimSun',
	        offset: 6
	    };
	
	
	
	    chart.axis('time', {
	        label: function (text, index, total) {
	
	            var cfg = Util.mix({}, label);
	            // 第一个点左对齐，最后一个点右对齐，其余居中，只有一个点时左对齐
	            if (index === 0) {
	                cfg.textAlign = 'start';
	            }
	            if (index > 0 && index === total - 1) {
	                cfg.textAlign = 'end';
	            }
	            return cfg;
	        }
	    });
	    //配置刻度文字大小，供PC端显示用(移动端可以使用默认值20px)
	    chart.axis('tem', {
	        label: {
	            fontSize: 14,
	            fontFamily: 'sans-serif'
	        }
	    });
	    chart.source(data, defs);
	    chart.line().position('time*tem').color('city').shape('smooth');
	    chart.render();
	
	};
	
	//带点折线图
	exports.case4 = function (GM) {
	
	    //双精度
	    GM.Global.pixelRatio = 1;
	    var Util = GM.Util;
	    var data = [
	        {"time": '2016-08-08 00:00:00', "tem": 10},
	        {"time": '2016-08-08 00:10:00', "tem": 22},
	        {"time": '2016-08-08 00:30:00', "tem": 20},
	        {"time": '2016-08-09 00:35:00', "tem": 26},
	        {"time": '2016-08-09 01:00:00', "tem": 20},
	        {"time": '2016-08-09 01:20:00', "tem": 26},
	        {"time": '2016-08-10 01:40:00', "tem": 28},
	        {"time": '2016-08-10 02:00:00', "tem": 20},
	        {"time": '2016-08-10 02:20:00', "tem": 28}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    var defs = {
	        time: {
	            type: 'timeCat',
	            mask: 'yyyy-mm-dd',
	            tickCount: 2,
	            range: [0, 1]
	        },
	        tem: {
	            tickCount: 5,
	            min: 0
	        }
	    };
	    //配置time刻度文字样式
	    var label = {
	        fill: '#979797',
	        font: '14px sans-serif',
	        offset: 6
	    };
	    chart.axis('time', {
	        label: function (text, index, total) {
	            var cfg = Util.mix({}, label);
	            // 第一个点左对齐，最后一个点右对齐，其余居中，只有一个点时左对齐
	            if (index === 0) {
	                cfg.textAlign = 'start';
	            }
	            if (index > 0 && index === total - 1) {
	                cfg.textAlign = 'end';
	            }
	            return cfg;
	        }
	    });
	    //配置刻度文字大小，供PC端显示用(移动端可以使用默认值20px)
	    chart.axis('tem', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    chart.source(data, defs);
	    chart.line().position('time*tem').shape('smooth');
	    chart.point().position('time*tem');
	    chart.render();
	};
	
	//区域图
	exports.case5 = function (GM) {
	
	    var Util = GM.Util;
	    // 双精度
	    GM.Global.pixelRatio = 1;
	    var data = [
	        {"time": '2016-08-08 00:00:00', "tem": 10, "city": "beijing"},
	        {"time": '2016-08-08 00:10:00', "tem": 22, "city": "beijing"},
	        {"time": '2016-08-08 00:30:00', "tem": 16, "city": "beijing"},
	        {"time": '2016-08-09 00:35:00', "tem": 26, "city": "beijing"},
	        {"time": '2016-08-09 01:00:00', "tem": 12, "city": "beijing"},
	        {"time": '2016-08-09 01:20:00', "tem": 26, "city": "beijing"},
	        {"time": '2016-08-10 01:40:00', "tem": 18, "city": "beijing"},
	        {"time": '2016-08-10 02:00:00', "tem": 26, "city": "beijing"},
	        {"time": '2016-08-10 02:20:00', "tem": 12, "city": "beijing"},
	        {"time": '2016-08-08 00:00:00', "tem": 28, "city": "newYork"},
	        {"time": '2016-08-08 00:10:00', "tem": 16, "city": "newYork"},
	        {"time": '2016-08-08 00:30:00', "tem": 26, "city": "newYork"},
	        {"time": '2016-08-09 00:35:00', "tem": 12, "city": "newYork"},
	        {"time": '2016-08-09 01:00:00', "tem": 26, "city": "newYork"},
	        {"time": '2016-08-09 01:20:00', "tem": 20, "city": "newYork"},
	        {"time": '2016-08-10 01:40:00', "tem": 29, "city": "newYork"},
	        {"time": '2016-08-10 02:00:00', "tem": 16, "city": "newYork"},
	        {"time": '2016-08-10 02:20:00', "tem": 22, "city": "newYork"}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    chart.source(data, {
	        time: {
	            type: 'timeCat',
	            mask: 'yyyy-mm-dd',
	            tickCount: 3,
	            range: [0, 1]
	        },
	        tem: {
	            tickCount: 5,
	            min: 0
	        }
	    });
	    //配置刻度文字大小，供PC端显示用(移动端可以使用默认值20px)
	    chart.axis('tem', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    //配置time刻度文字样式
	    var label = {
	        fill: '#979797',
	        font: '14px sans-serif',
	        offset: 6
	    };
	    chart.axis('time', {
	        label: function (text, index, total) {
	            var cfg = Util.mix({}, label);
	            // 第一个点左对齐，最后一个点右对齐，其余居中，只有一个点时左对齐
	            if (index === 0) {
	                cfg.textAlign = 'start';
	            }
	            if (index > 0 && index === total - 1) {
	                cfg.textAlign = 'end';
	            }
	            return cfg;
	        }
	    });
	    chart.area().position('time*tem').color('city').shape('smooth').style({
	        opacity: 0.6
	    });
	    chart.render();
	};
	
	
	//带事件的重叠区域图
	exports.case6 = function (GM) {
	
	    GM.Global.pixelRatio = 1;
	    var data = [
	        {"month": 12, "tem": 7, "city": "tokyo"},
	        {"month": 1, "tem": 6.9, "city": "tokyo"},
	        {"month": 2, "tem": 9.5, "city": "tokyo"},
	        {"month": 3, "tem": 14.5, "city": "tokyo"},
	        {"month": 4, "tem": 18.2, "city": "tokyo"},
	        {"month": 5, "tem": 21.5, "city": "tokyo"},
	        {"month": 6, "tem": 25.2, "city": "tokyo"},
	        {"month": 7, "tem": 26.5, "city": "tokyo"},
	        {"month": 8, "tem": 23.3, "city": "tokyo"},
	        {"month": 9, "tem": 18.3, "city": "tokyo"},
	        {"month": 10, "tem": 13.9, "city": "tokyo"},
	        {"month": 11, "tem": 9.6, "city": "tokyo"},
	        {"month": 12, "tem": 0, "city": "newYork"},
	        {"month": 1, "tem": 0.8, "city": "newYork"},
	        {"month": 2, "tem": 5.7, "city": "newYork"},
	        {"month": 3, "tem": 11.3, "city": "newYork"},
	        {"month": 4, "tem": 17, "city": "newYork"},
	        {"month": 5, "tem": 22, "city": "newYork"},
	        {"month": 6, "tem": 24.8, "city": "newYork"},
	        {"month": 7, "tem": 24.1, "city": "newYork"},
	        {"month": 8, "tem": 20.1, "city": "newYork"},
	        {"month": 9, "tem": 14.1, "city": "newYork"},
	        {"month": 10, "tem": 8.6, "city": "newYork"},
	        {"month": 11, "tem": 2.5, "city": "newYork"},
	        {"month": 12, "tem": 2, "city": "berlin"},
	        {"month": 1, "tem": 0.6, "city": "berlin"},
	        {"month": 2, "tem": 3.5, "city": "berlin"},
	        {"month": 3, "tem": 8.4, "city": "berlin"},
	        {"month": 4, "tem": 13.5, "city": "berlin"},
	        {"month": 5, "tem": 17, "city": "berlin"},
	        {"month": 6, "tem": 18.6, "city": "berlin"},
	        {"month": 7, "tem": 17.9, "city": "berlin"},
	        {"month": 8, "tem": 14.3, "city": "berlin"},
	        {"month": 9, "tem": 9, "city": "berlin"},
	        {"month": 10, "tem": 3.9, "city": "berlin"},
	        {"month": 11, "tem": 1, "city": "berlin"}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    chart.source(data, {
	        month: {
	            tickCount: 12
	        },
	        tem: {
	            tickCount: 5
	        }
	    });
	    //配置刻度文字大小，供PC端显示用(移动端可以使用默认值20px)
	    chart.axis('tem', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    chart.axis('month', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    chart.areaStack().position('month*tem').color('city').shape('smooth').style({
	        opacity: 0.6
	    });
	    chart.render();
	    function getPoint(canvas, x, y) {
	        var bbox = canvas.getBoundingClientRect();
	        return {
	            x: x - bbox.left,
	            y: y - bbox.top
	        };
	    }
	
	};
	
	//柱状图
	exports.case7 = function (GM) {
	
	    GM.Global.pixelRatio = 1;
	    var data = [
	        {"tem": 10, "city": "tokyo"},
	        {"tem": 4, "city": "newYork"},
	        {"tem": 3, "city": "berlin"}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    chart.source(data, {
	        tem: {
	            tickCount: 5
	        }
	    });
	    //配置刻度文字大小，供PC端显示用(移动端可以使用默认值20px)
	    chart.axis('city', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        },
	        grid: null
	    });
	    chart.axis('tem', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    chart.interval().position('city*tem').color('city');
	    chart.render();
	
	};
	
	//区间柱状图
	exports.case8 = function (GM) {
	
	    GM.Global.pixelRatio = 1;
	    var data = [
	        {"month": '周一', "tem": [0, 7]},
	        {"month": '周二', "tem": [7, 5]},
	        {"month": '周三', "tem": [5, 9.5]},
	        {"month": '周四', "tem": [9.5, 14.5]},
	        {"month": '周五', "tem": [14.5, 10.2]},
	        {"month": '周六', "tem": [10.2, 21.5]},
	        {"month": '周日', "tem": [21.5, 25.2]}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    chart.source(data, {
	        tem: {
	            tickCount: 5
	        }
	    });
	    //配置刻度文字大小，供PC端显示用(移动端可以使用默认值20px)
	    chart.axis('month', {
	        label: {
	            fontSize: 14,
	            fontFamily: "SimSun"
	
	        },
	        grid: null
	    });
	    chart.axis('tem', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    chart.interval().position('month*tem').color('tem', function (tem) {
	        if (tem[1] >= tem[0]) {
	            return 'red'
	        } else {
	            return 'green';
	        }
	    });
	    chart.render();
	
	};
	
	//层叠柱状图
	exports.case9 = function (GM) {
	
	    GM.Global.pixelRatio = 1;
	    var data = [
	        {"time": "周一", "tem": 6.9, "city": "tokyo"},
	        {"time": "周二", "tem": 9.5, "city": "tokyo"},
	        {"time": "周三", "tem": 14.5, "city": "tokyo"},
	        {"time": "周四", "tem": 18.2, "city": "tokyo"},
	        {"time": "周五", "tem": 21.5, "city": "tokyo"},
	        {"time": "周六", "tem": 25.2, "city": "tokyo"},
	        {"time": "周日", "tem": 26.5, "city": "tokyo"},
	        {"time": "周一", "tem": 0.8, "city": "newYork"},
	        {"time": "周二", "tem": 5.7, "city": "newYork"},
	        {"time": "周三", "tem": 11.3, "city": "newYork"},
	        {"time": "周四", "tem": 17, "city": "newYork"},
	        {"time": "周五", "tem": 22, "city": "newYork"},
	        {"time": "周六", "tem": 24.8, "city": "newYork"},
	        {"time": "周日", "tem": 24.1, "city": "newYork"},
	        {"time": "周一", "tem": 0.6, "city": "berlin"},
	        {"time": "周二", "tem": 3.5, "city": "berlin"},
	        {"time": "周三", "tem": 8.4, "city": "berlin"},
	        {"time": "周四", "tem": 13.5, "city": "berlin"},
	        {"time": "周五", "tem": 17, "city": "berlin"},
	        {"time": "周六", "tem": 18.6, "city": "berlin"},
	        {"time": "周日", "tem": 17.9, "city": "berlin"}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    chart.source(data, {
	        tem: {
	            tickCount: 5
	        }
	    });
	    //配置刻度文字大小，供PC端显示用(移动端可以使用默认值20px)
	    chart.axis('time', {
	        label: {
	            fontSize: 14,
	            fontFamily: "SimSun"
	        },
	        grid: null
	    });
	    chart.axis('tem', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    chart.intervalStack().position('time*tem').color('city');
	    chart.render();
	
	};
	
	
	//玉玦图
	exports.case10 = function (GM) {
	
	    GM.Global.pixelRatio = 1;
	    var data = [
	        {"tem": 7, "city": "tokyo"},
	        {"tem": 4, "city": "newYork"},
	        {"tem": 3, "city": "berlin"}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    chart.source(data, {
	        tem: {
	            min: 0,
	            max: 10
	        }
	    });
	    chart.axis(false);
	    chart.coord('polar', {
	        transposed: true,
	        inner: 0.5
	    });
	    chart.interval().position('city*tem').color('city');
	    chart.render();
	
	};
	
	//自定义shape的柱状图
	exports.case11 = function (GM) {
	
	    GM.Global.pixelRatio = 1;
	    var data = [
	        {"tem": 500, "city": "一月"},
	        {"tem": -50, "city": "二月"},
	        {"tem": 450, "city": "五月"},
	        {"tem": -40, "city": "六月"},
	        {"tem": 690, "city": "七月"},
	        {"tem": 346, "city": "八月"},
	    ];
	    var drawShape = function (points, canvas, cfg) {
	        var ctx = canvas.getContext('2d');
	        ctx.beginPath();
	        ctx.moveTo(points[0].x, points[0].y);
	        if (points.length > 1) {
	            for (var i = 1; i <= points.length - 1; i++) {
	                ctx.lineTo(points[i].x, points[i].y);
	            }
	        }
	        ctx.fillStyle = cfg.fill;
	        ctx.fill();
	    };
	    //自定义绘制数据的的形状
	    var Shape = GM.Shape;
	    Shape.registShape('interval', 'polygon', {
	        getShapePoints: function (cfg) {
	            var x = cfg.x;
	            var y = cfg.y;
	            var y0 = cfg.y0;
	            var width = cfg.size;
	            return [
	                {x: x - width / 2, y: y0},
	                {x: x, y: y},
	                {x: x + width / 2, y: y0}
	            ];
	        },
	        drawShape: function (cfg, canvas) {
	            var points = this.parsePoints(cfg.points);
	            var style = cfg.style || {};
	            style.fill = cfg.color;
	            drawShape(points, canvas, style);
	        }
	    });
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    chart.source(data, {
	        tem: {
	            tickCount: 5,
	        }
	    });
	    chart.axis('city', {
	        label: {
	            fontSize: 14,
	            fontFamily: 'SimSun'
	        },
	        line: null,
	        grid: null
	    });
	    chart.axis('tem', {
	        label: {
	            fontSize: 14,
	            fontFamily: 'sans-serif'
	        },
	        grid: {
	            stroke: '#f8f8f8',
	        }
	    });
	    chart.interval().position('city*tem').color('tem*city', function (tem, city) {
	        if (city === '八月') {
	            return '#f5623a';
	        }
	        if (tem >= 0) {
	            return '#f8bdad';
	        }
	        if (tem < 0) {
	            return '#99d6c0';
	        }
	    }).shape('polygon');
	    // 绘制数据
	    chart.render();
	
	};
	
	//饼图
	exports.case12 = function (GM) {
	
	    GM.Global.pixelRatio = 1;
	    var data = [
	        {a: '1', b: 0.3, c: '1'},
	        {a: '1', b: 0.3, c: '2'},
	        {a: '1', b: 0.4, c: '3'}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    chart.source(data);
	    chart.coord('polar', {
	        transposed: true,
	        inner: 0
	    });
	    chart.axis(false);
	    chart.intervalStack().position('a*b').color('c');
	    chart.render();
	
	};
	
	//嵌套饼图
	exports.case13 = function (GM) {
	
	
	    GM.Global.pixelRatio = 1;
	    var data = [
	        {a: '1', b: 0.2, c: '1'},
	        {a: '2', b: 0.5, c: '1'},
	        {a: '3', b: 0.4, c: '1'},
	        {a: '1', b: 0.8, c: '2'},
	        {a: '2', b: 0.5, c: '2'},
	        {a: '3', b: 0.6, c: '2'}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    chart.source(data);
	    chart.coord('polar', {
	        transposed: true,
	        inner: 0.5
	    });
	    chart.axis(false);
	    chart.intervalStack().position('a*b').color('c');
	    chart.render();
	
	
	};
	
	//玫瑰饼图
	exports.case14 = function (GM) {
	
	
	    GM.Global.pixelRatio = 1;
	    var data = [
	        {"tem": 7, "city": "tokyo"},
	        {"tem": 4, "city": "newYork"},
	        {"tem": 3, "city": "berlin"}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    chart.source(data, {
	        tem: {
	            min: 0,
	            nice: false
	        }
	    });
	    chart.coord('polar', {
	        inner: 0
	    });
	    chart.axis(false);
	    chart.interval().position('city*tem').color('city');
	    chart.render();
	
	
	};
	
	//雷达图
	exports.case15 = function (GM) {
	
	
	    GM.Global.pixelRatio = 1;
	    var data = [
	        {name: '张飞', props: '智力', value: 65},
	        {name: '张飞', props: '武力', value: 97},
	        {name: '张飞', props: '政治', value: 50},
	        {name: '张飞', props: '统帅', value: 92},
	        {name: '张飞', props: '忠诚', value: 100},
	        {name: '关羽', props: '智力', value: 80},
	        {name: '关羽', props: '武力', value: 94},
	        {name: '关羽', props: '政治', value: 70},
	        {name: '关羽', props: '统帅', value: 95},
	        {name: '关羽', props: '忠诚', value: 99}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    chart.coord('polar');
	    chart.source(data, {
	        value: {
	            min: 0,
	            tickInterval: 20
	        }
	    });
	    //配置刻度文字大小，供PC端显示用(移动端可以使用默认值20px)
	    chart.axis('props', {
	        label: {
	            fontSize: 14,
	            fontFamily: "SimSun"
	        },
	        line: null
	    });
	    chart.axis('value', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    chart.line().position('props*value').color('name');
	    chart.render();
	
	
	};
	
	//带缩放动画的区域雷达图
	exports.case16 = function (GM) {
	
	    GM.Global.pixelRatio = 1;
	    var data = [
	        {name: '张飞', props: '智力', value: 65},
	        {name: '张飞', props: '武力', value: 97},
	        {name: '张飞', props: '政治', value: 50},
	        {name: '张飞', props: '统帅', value: 92},
	        {name: '张飞', props: '忠诚', value: 100},
	        {name: '关羽', props: '智力', value: 80},
	        {name: '关羽', props: '武力', value: 94},
	        {name: '关羽', props: '政治', value: 70},
	        {name: '关羽', props: '统帅', value: 95},
	        {name: '关羽', props: '忠诚', value: 99}
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    chart.coord('polar');
	    chart.source(data, {
	        value: {
	            min: 0,
	            tickInterval: 20
	        }
	    });
	    //配置刻度文字大小，供PC端显示用(移动端可以使用默认值20px)
	    chart.axis('props', {
	        label: {
	            fontSize: 14,
	            fontFamily: "SimSun"
	        },
	        line: null
	    });
	    chart.axis('value', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    chart.area().position('props*value').color('name').style({
	        opacity: 0.6
	    });
	    // x和y轴同时缩放的动画
	  //  chart.animate().scalexy();
	    chart.render();
	
	}
	
	//股票图
	exports.case17 = function (GM) {
	
	    var Util = GM.Util;
	    GM.Global.pixelRatio = 1;
	    //获取本地数据
	    var data = [
	        {
	            time: "2015-11-19",
	            start: 8.18,
	            max: 8.33,
	            min: 7.98,
	            end: 8.32,
	            volumn: 1810,
	            money: 14723.56
	        },
	        {
	            time: "2015-11-18",
	            start: 8.37,
	            max: 8.6,
	            min: 8.03,
	            end: 8.09,
	            volumn: 2790.37,
	            money: 23309.19
	        },
	        {
	            time: "2015-11-17",
	            start: 8.7,
	            max: 8.78,
	            min: 8.32,
	            end: 8.37,
	            volumn: 3729.04,
	            money: 31709.71
	        },
	        {
	            time: "2015-11-16",
	            start: 8.18,
	            max: 8.69,
	            min: 8.05,
	            end: 8.62,
	            volumn: 3095.44,
	            money: 26100.69
	        },
	        {
	            time: "2015-11-13",
	            start: 8.01,
	            max: 8.75,
	            min: 7.97,
	            end: 8.41,
	            volumn: 5815.58,
	            money: 48562.37
	        },
	        {
	            time: "2015-11-12",
	            start: 7.76,
	            max: 8.18,
	            min: 7.61,
	            end: 8.15,
	            volumn: 4742.6,
	            money: 37565.36
	        },
	        {
	            time: "2015-11-11",
	            start: 7.55,
	            max: 7.81,
	            min: 7.49,
	            end: 7.8,
	            volumn: 3133.82,
	            money: 24065.42
	        },
	        {
	            time: "2015-11-10",
	            start: 7.5,
	            max: 7.68,
	            min: 7.44,
	            end: 7.57,
	            volumn: 2670.35,
	            money: 20210.58
	        },
	        {
	            time: "2015-11-09",
	            start: 7.65,
	            max: 7.66,
	            min: 7.3,
	            end: 7.58,
	            volumn: 2841.79,
	            money: 21344.36
	        },
	        {
	            time: "2015-11-06",
	            start: 7.52,
	            max: 7.71,
	            min: 7.48,
	            end: 7.64,
	            volumn: 2725.44,
	            money: 20721.51
	        },
	        {
	            time: "2015-11-05",
	            start: 7.48,
	            max: 7.57,
	            min: 7.29,
	            end: 7.48,
	            volumn: 3520.85,
	            money: 26140.83
	        },
	        {
	            time: "2015-11-04",
	            start: 7.01,
	            max: 7.5,
	            min: 7.01,
	            end: 7.46,
	            volumn: 3591.47,
	            money: 26285.52
	        },
	        {
	            time: "2015-11-03",
	            start: 7.1,
	            max: 7.17,
	            min: 6.82,
	            end: 7,
	            volumn: 2029.21,
	            money: 14202.33
	        },
	        {
	            time: "2015-11-02",
	            start: 7.09,
	            max: 7.44,
	            min: 6.93,
	            end: 7.17,
	            volumn: 3191.31,
	            money: 23205.11
	        },
	        {
	            time: "2015-10-30",
	            start: 6.98,
	            max: 7.27,
	            min: 6.84,
	            end: 7.18,
	            volumn: 3522.61,
	            money: 25083.44
	        },
	        {
	            time: "2015-10-29",
	            start: 6.94,
	            max: 7.2,
	            min: 6.8,
	            end: 7.05,
	            volumn: 2752.27,
	            money: 19328.44
	        },
	        {
	            time: "2015-10-28",
	            start: 7.01,
	            max: 7.14,
	            min: 6.8,
	            end: 6.85,
	            volumn: 2311.11,
	            money: 16137.32
	        },
	        {
	            time: "2015-10-27",
	            start: 6.91,
	            max: 7.31,
	            min: 6.48,
	            end: 7.18,
	            volumn: 3172.9,
	            money: 21827.3
	        },
	        {
	            time: "2015-10-26",
	            start: 6.9,
	            max: 7.08,
	            min: 6.87,
	            end: 6.95,
	            volumn: 2769.31,
	            money: 19337.44
	        },
	        {
	            time: "2015-10-23",
	            start: 6.71,
	            max: 6.85,
	            min: 6.58,
	            end: 6.79,
	            volumn: 2483.18,
	            money: 16714.31
	        },
	        {
	            time: "2015-10-22",
	            start: 6.38,
	            max: 6.67,
	            min: 6.34,
	            end: 6.65,
	            volumn: 2225.88,
	            money: 14465.56
	        },
	        {
	            time: "2015-10-21",
	            start: 7.08,
	            max: 7.1,
	            min: 6.41,
	            end: 6.41,
	            volumn: 2891.47,
	            money: 19585.98
	        },
	        {
	            time: "2015-10-20",
	            start: 6.88,
	            max: 7.19,
	            min: 6.85,
	            end: 7.12,
	            volumn: 2389.62,
	            money: 16813.58
	        },
	        {
	            time: "2015-10-19",
	            start: 7.1,
	            max: 7.14,
	            min: 6.8,
	            end: 6.94,
	            volumn: 2786.61,
	            money: 19474.72
	        },
	        {
	            time: "2015-10-16",
	            start: 6.92,
	            max: 7.38,
	            min: 6.73,
	            end: 7.15,
	            volumn: 3289.27,
	            money: 22963.97
	        },
	        {
	            time: "2015-10-15",
	            start: 6.63,
	            max: 6.9,
	            min: 6.6,
	            end: 6.89,
	            volumn: 2440.37,
	            money: 16575.84
	        }
	    ];
	    //数据处理
	    data.sort(function (obj1, obj2) {
	        return obj1.time > obj2.time ? 1 : -1;
	    });
	    data.forEach(function (obj) {
	        obj.range = [obj.start, obj.end, obj.max, obj.min];
	        obj.trend = (obj.start <= obj.end) ? 0 : 1;
	    });
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    //配置刻度文字大小，供PC端显示用(移动端可以使用默认值20px)
	    chart.axis('range', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    //配置time刻度文字样式
	    var label = {
	        fill: '#979797',
	        font: '14px sans-serif',
	        offset: 6
	    };
	    chart.axis('time', {
	        label: function (text, index, total) {
	            var cfg = Util.mix({}, label);
	            // 第一个点左对齐，最后一个点右对齐，其余居中，只有一个点时左对齐
	            if (index === 0) {
	                cfg.textAlign = 'start';
	            }
	            if (index > 0 && index === total - 1) {
	                cfg.textAlign = 'end';
	            }
	            return cfg;
	        }
	    });
	    chart.source(data, {
	        range: {
	            tickCount: 5
	        },
	        time: {
	            tickCount: 3
	        }
	    });
	    chart.schema().position('time*range')
	        .color('trend', function (trend) {
	            return ['#C00000', '#19B24B'][trend];
	        })
	        .shape('candle');
	    chart.render();
	
	};
	
	//双 Y 轴
	exports.case18 = function (GM) {
	    GM.Global.pixelRatio = 1;
	    var data = [
	        {"time": "周一", "tem": 6.9, "rain": 10},
	        {"time": "周二", "tem": 9.5, "rain": 13},
	        {"time": "周三", "tem": 14.5, "rain": 14},
	        {"time": "周四", "tem": 18.2, "rain": 10},
	        {"time": "周五", "tem": 21.5, "rain": 12},
	        {"time": "周六", "tem": 25.2, "rain": 16},
	        {"time": "周日", "tem": 26.5, "rain": 13},
	    ];
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    chart.source(data, {
	        tem: {
	            tickCount: 5,
	            max: 30,
	            min: 0
	        },
	        rain: {
	            tickCount: 5,
	            min: 0
	        }
	    });
	    //配置刻度文字大小，供PC端显示用(移动端可以使用默认值20px)
	    chart.axis('time', {
	        label: {
	            fontSize: 14,
	            fontFamily: "SimSun"
	        },
	        grid: null
	    });
	    chart.axis('tem', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    chart.axis('rain', {
	        label: {
	            fontSize: 14,
	            fontFamily: "sans-serif"
	        }
	    });
	    chart.interval().position('time*tem');
	    chart.line().position('time*rain').color('#5ed470').size(2).shape('smooth');
	    chart.point().position('time*rain').color('#5ed470');
	    chart.render();
	};
	
	exports.case19 = function (GM) {
	
	
	    GM.Global.pixelRatio = 1;//双精度
	    var Shape = GM.Shape;
	    var G = GM.G;
	    var data = [{pointer: '当前收益', value: 5, length: 2, y: 1.05}];
	    //自定义绘制数据的的形状      
	    Shape.registShape('point', 'dashBoard', {
	        getShapePoints: function (cfg) {
	            var x = cfg.x;
	            var y = cfg.y;
	            return [
	                {x: x, y: y},
	                {x: x, y: 0.5}
	            ]
	        },
	        drawShape: function (cfg, canvas) {
	            var point1 = cfg.points[0];
	            var point2 = cfg.points[1];
	            point1 = this.parsePoint(point1);
	            point2 = this.parsePoint(point2);
	            G.drawLines([point1, point2], canvas, {
	                stroke: '#18b7d6',
	                lineWidth: 2
	            });
	            var text = cfg.origin._origin.value.toString();
	            G.drawText(text + '%', cfg.center, canvas, {
	                fillStyle: '#f75b5b',
	                font: '30px serif',
	                textAlign: 'center',
	                textBaseline: 'bottom'
	            });
	            G.drawText(cfg.origin._origin.pointer, cfg.center, canvas, {
	                fillStyle: '#ccc',
	                font: '30px SimSun',
	                textAlign: 'center',
	                textBaseline: 'top'
	            });
	        }
	    });
	    var chart = new GM.Chart({
	        id: 'c1'
	    });
	    chart.source(data, {
	        'value': {type: 'linear', min: 0, max: 15, tickCount: 6},
	        'length': {type: 'linear', min: 0, max: 10},
	        y: {type: 'linear', min: 0, max: 1}
	    });
	    chart.coord('polar', {
	        inner: 0,
	        startAngle: -1.25 * Math.PI,
	        endAngle: 0.25 * Math.PI
	    });
	    //配置value轴刻度线
	    chart.axis('value', {
	        tickLine: {
	            strokeStyle: '#b9e6ef',
	            lineWidth: 2,
	            value: -5
	        },
	        //label: null,
	        label: {
	            fontSize: 14,
	            fontFamily: "serif"
	        },
	        grid: null,
	        line: null
	    });
	    chart.axis('y', false);
	    //绘制仪表盘辅助元素
	    chart.guide().arc([0, 1.05], [4.8, 1.05], {
	        strokeStyle: '#18b7d6',
	        lineWidth: 5,
	        lineCap: 'round'
	    });
	    chart.guide().arc([5.2, 1.05], [9.8, 1.05], {
	        strokeStyle: '#ccc',
	        lineWidth: 5,
	        lineCap: 'round'
	    });
	    chart.guide().arc([10.2, 1.05], [15, 1.05], {
	        strokeStyle: '#ccc',
	        lineWidth: 5,
	        lineCap: 'round'
	    });
	    chart.guide().arc([0, 1.2], [15, 1.2], {
	        strokeStyle: '#ccc',
	        lineWidth: 1
	    });
	    chart.guide().text([-0.5, 1.3], '0.00%', {
	        fillStyle: '#ccc',
	        font: '18px serif',
	        textAlign: 'center'
	    });
	    chart.guide().text([7.5, 0.7], '7.50%', {
	        fillStyle: '#ccc',
	        font: '18px serif',
	        textAlign: 'center'
	    });
	    chart.guide().text([15.5, 1.3], '15.00%', {
	        fillStyle: '#ccc',
	        font: '18px serif',
	        textAlign: 'center'
	    });
	    chart.point().position('value*y').size('length').color('#18b7d6').shape('dashBoard');
	    chart.render();
	
	
	};
	
	
	//带缩放动画和自定义背景的柱状图
	exports.case21 = function () {
	
	
	};
	//带平铺动画的多类型线图
	exports.case22 = function () {
	};
	
	//带缩放动画的横向柱状图
	exports.case23 = function () {
	};
	//带平铺动画的环形饼图
	exports.case24 = function () {
	
	
	};
	//带html辅助元素的折线图
	exports.case25 = function (GM) {
	};

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgN2M2ODE0ZWJkYjAwMTNmOTZjZTEiLCJ3ZWJwYWNrOi8vLy4vc3JjL2RlbW8ud2U/OGNlOCIsIndlYnBhY2s6Ly8vLi9zcmMvZGVtby53ZT81MGRhIiwid2VicGFjazovLy8uL3NyYy9kZW1vLndlIiwid2VicGFjazovLy8uL34vd2VleC1jaGFydC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9+L3dlZXgtY2hhcnQvY2hhcnQud2U/YzE3NyIsIndlYnBhY2s6Ly8vLi9+L3dlZXgtY2hhcnQvY2hhcnQud2U/ZGM4OCIsIndlYnBhY2s6Ly8vLi9+L3dlZXgtY2hhcnQvY2hhcnQud2UiLCJ3ZWJwYWNrOi8vLy4vfi93ZWV4LWNoYXJ0L0NhbnZhc0VsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vfi93ZWV4LWdjYW52YXMvZ2NhbnZhcy5qcyIsIndlYnBhY2s6Ly8vLi9+L3dlZXgtZ2NhbnZhcy9ndXRpbC5qcyIsIndlYnBhY2s6Ly8vLi9+L3dlZXgtZ2NhbnZhcy9nbG9nLmpzIiwid2VicGFjazovLy8uL34vd2VleC1nY2FudmFzL2djb250ZXh0MmQuanMiLCJ3ZWJwYWNrOi8vLy4vfi93ZWV4LWNoYXJ0L2NoYXJ0LmpzIiwid2VicGFjazovLy8uL34vZzItbW9iaWxlL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9jYXNlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1QkFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7O0FDdENBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsRUFBQzs7QUFFRCwyRjs7Ozs7O0FDZEE7QUFDQTtB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QUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsY0FBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVCxNQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLDZCQUE0QjtBQUM1Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0Esc0U7QUFDQTs7QUFFQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxNQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLE1BQUs7O0FBRUw7QUFDQTtBQUNBOztBQUVBLE1BQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7OztBQ25NQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBQztBQUNEOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVCxNQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNULE1BQUs7OztBQUdMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVCxNQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBcUM7QUFDckM7QUFDQTtBQUNBLFVBQVM7QUFDVCxNQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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dUJBQXVCO0FBQ2xEO0FBQ0E7QUFDQSx3RUFBdUU7QUFDdkU7QUFDQTtBQUNBO0FBQ0EsRUFBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxXQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLHFCQUFvQjtBQUNwQjtBQUNBLEVBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxXQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQSx3RUFBdUU7QUFDdkU7QUFDQSxFQUFDOzs7QUFHRDtBQUNBO0FBQ0E7QUFDQSxXQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQSx3RUFBdUU7QUFDdkU7QUFDQSxFQUFDOzs7QUFHRDtBQUNBO0FBQ0E7QUFDQSxXQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQSx3RUFBdUU7QUFDdkU7QUFDQSxFQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVFQUFzRTtBQUN0RTtBQUNBO0FBQ0EsRUFBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxXQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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eUNBQXlDO0FBQ2xELFVBQVMseUNBQXlDO0FBQ2xELFVBQVMseUNBQXlDO0FBQ2xELFVBQVMseUNBQXlDO0FBQ2xELFVBQVMseUNBQXlDO0FBQ2xELFVBQVMseUNBQXlDO0FBQ2xELFVBQVMseUNBQXlDO0FBQ2xELFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFTLHlDQUF5QztBQUNsRCxVQUFTLHlDQUF5QztBQUNsRCxVQUFTLHlDQUF5QztBQUNsRCxVQUFTLHlDQUF5QztBQUNsRCxVQUFTLHlDQUF5QztBQUNsRCxVQUFTLHlDQUF5QztBQUNsRCxVQUFTLHlDQUF5QztBQUNsRCxVQUFTLHlDQUF5QztBQUNsRCxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywwQ0FBMEM7QUFDbkQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTs7QUFFQSxrQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVMseUNBQXlDO0FBQ2xELFVBQVMseUNBQXlDO0FBQ2xELFVBQVMseUNBQXlDO0FBQ2xELFVBQVMseUNBQXlDO0FBQ2xELFVBQVMseUNBQXlDO0FBQ2xELFVBQVMseUNBQXlDO0FBQ2xELFVBQVMseUNBQXlDO0FBQ2xELFVBQVMseUNBQXlDO0FBQ2xELFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUyw0REFBNEQ7QUFDckUsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsVUFBUyx1Q0FBdUM7QUFDaEQsVUFBUyx3Q0FBd0M7QUFDakQsVUFBUyx3Q0FBd0M7QUFDakQsVUFBUyx5Q0FBeUM7QUFDbEQsVUFBUyx5Q0FBeUM7QUFDbEQsVUFBUyx5Q0FBeUM7QUFDbEQsVUFBUyx5Q0FBeUM7QUFDbEQsVUFBUyx5Q0FBeUM7QUFDbEQsVUFBUyx5Q0FBeUM7QUFDbEQsVUFBUyx5Q0FBeUM7QUFDbEQsVUFBUywwQ0FBMEM7QUFDbkQsVUFBUyx5Q0FBeUM7QUFDbEQsVUFBUyx5Q0FBeUM7QUFDbEQsVUFBUywwQ0FBMEM7QUFDbkQsVUFBUywwQ0FBMEM7QUFDbkQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUyx5Q0FBeUM7QUFDbEQsVUFBUyx5Q0FBeUM7QUFDbEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUywyQ0FBMkM7QUFDcEQsVUFBUyx3Q0FBd0M7QUFDakQsVUFBUyx5Q0FBeUM7QUFDbEQsVUFBUyx5Q0FBeUM7QUFDbEQsVUFBUyx5Q0FBeUM7QUFDbEQsVUFBUywwQ0FBMEM7QUFDbkQsVUFBUyx3Q0FBd0M7QUFDakQsVUFBUywwQ0FBMEM7QUFDbkQsVUFBUywwQ0FBMEM7QUFDbkQsVUFBUywwQ0FBMEM7QUFDbkQsVUFBUyx1Q0FBdUM7QUFDaEQsVUFBUywwQ0FBMEM7QUFDbkQsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFTLDJCQUEyQjtBQUNwQyxVQUFTLDRCQUE0QjtBQUNyQyxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFVBQVMsNkJBQTZCO0FBQ3RDLFVBQVMsNkJBQTZCO0FBQ3RDLFVBQVMsK0JBQStCO0FBQ3hDLFVBQVMsa0NBQWtDO0FBQzNDLFVBQVMsbUNBQW1DO0FBQzVDLFVBQVMsbUNBQW1DO0FBQzVDLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxVQUFTO0FBQ1Q7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBLE1BQUs7QUFDTDs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFTLDBDQUEwQztBQUNuRCxVQUFTLDBDQUEwQztBQUNuRCxVQUFTLDJDQUEyQztBQUNwRCxVQUFTLDJDQUEyQztBQUNwRCxVQUFTLDJDQUEyQztBQUNwRCxVQUFTLDJDQUEyQztBQUNwRCxVQUFTLDJDQUEyQztBQUNwRCxVQUFTLDRDQUE0QztBQUNyRCxVQUFTLDRDQUE0QztBQUNyRCxVQUFTLDZDQUE2QztBQUN0RCxVQUFTLDJDQUEyQztBQUNwRCxVQUFTLDJDQUEyQztBQUNwRCxVQUFTLDZDQUE2QztBQUN0RCxVQUFTLDZDQUE2QztBQUN0RCxVQUFTLDJDQUEyQztBQUNwRCxVQUFTLDJDQUEyQztBQUNwRCxVQUFTLDJDQUEyQztBQUNwRCxVQUFTLDRDQUE0QztBQUNyRCxVQUFTLDBDQUEwQztBQUNuRCxVQUFTLDRDQUE0QztBQUNyRCxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBOztBQUVBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFTLDBCQUEwQjtBQUNuQyxVQUFTLDRCQUE0QjtBQUNyQyxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFTLHlCQUF5QjtBQUNsQyxVQUFTLHlCQUF5QjtBQUNsQyxVQUFTLHlCQUF5QjtBQUNsQyxVQUFTLHlCQUF5QjtBQUNsQyxVQUFTLHlCQUF5QjtBQUNsQyxVQUFTLHlCQUF5QjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBMkIsd0JBQXdCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFpQix3QkFBd0I7QUFDekMsa0JBQWlCLFdBQVc7QUFDNUIsa0JBQWlCO0FBQ2pCO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsVUFBUyx1QkFBdUI7QUFDaEMsVUFBUyx1QkFBdUI7QUFDaEMsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBLFVBQVMsdUJBQXVCO0FBQ2hDLFVBQVMsdUJBQXVCO0FBQ2hDLFVBQVMsdUJBQXVCO0FBQ2hDLFVBQVMsdUJBQXVCO0FBQ2hDLFVBQVMsdUJBQXVCO0FBQ2hDLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0EsVUFBUywwQkFBMEI7QUFDbkMsVUFBUyw0QkFBNEI7QUFDckMsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0EsVUFBUyxtQ0FBbUM7QUFDNUMsVUFBUyxtQ0FBbUM7QUFDNUMsVUFBUyxtQ0FBbUM7QUFDNUMsVUFBUyxtQ0FBbUM7QUFDNUMsVUFBUyxvQ0FBb0M7QUFDN0MsVUFBUyxtQ0FBbUM7QUFDNUMsVUFBUyxtQ0FBbUM7QUFDNUMsVUFBUyxtQ0FBbUM7QUFDNUMsVUFBUyxtQ0FBbUM7QUFDNUMsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFVBQVMsbUNBQW1DO0FBQzVDLFVBQVMsbUNBQW1DO0FBQzVDLFVBQVMsbUNBQW1DO0FBQzVDLFVBQVMsbUNBQW1DO0FBQzVDLFVBQVMsb0NBQW9DO0FBQzdDLFVBQVMsbUNBQW1DO0FBQzVDLFVBQVMsbUNBQW1DO0FBQzVDLFVBQVMsbUNBQW1DO0FBQzVDLFVBQVMsbUNBQW1DO0FBQzVDLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVMscUNBQXFDO0FBQzlDLFVBQVMscUNBQXFDO0FBQzlDLFVBQVMsc0NBQXNDO0FBQy9DLFVBQVMsc0NBQXNDO0FBQy9DLFVBQVMsc0NBQXNDO0FBQy9DLFVBQVMsc0NBQXNDO0FBQy9DLFVBQVMsc0NBQXNDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLDhCQUE2QjtBQUM3QjtBQUNBO0FBQ0Esa0JBQWlCLDhDQUE4QztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBaUIsV0FBVztBQUM1QixrQkFBaUI7QUFDakI7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWE7QUFDYjtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0EsbUJBQWtCLDhDQUE4QztBQUNoRSxvQkFBbUIsZ0NBQWdDO0FBQ25ELGFBQVk7QUFDWixNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBOzs7QUFHQTs7O0FBR0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0EsRyIsImZpbGUiOiJkZW1vLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pXG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG5cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGV4cG9ydHM6IHt9LFxuIFx0XHRcdGlkOiBtb2R1bGVJZCxcbiBcdFx0XHRsb2FkZWQ6IGZhbHNlXG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmxvYWRlZCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjay9ib290c3RyYXAgN2M2ODE0ZWJkYjAwMTNmOTZjZTEiLCJ2YXIgX193ZWV4X3RlbXBsYXRlX18gPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvd2VleC1sb2FkZXIvbGliL2pzb24uanMhLi4vbm9kZV9tb2R1bGVzL3dlZXgtbG9hZGVyL2xpYi90ZW1wbGF0ZS5qcyEuLi9ub2RlX21vZHVsZXMvd2VleC1sb2FkZXIvbGliL2V4dHJhY3QuanM/dHlwZT10ZW1wbGF0ZSEuL2RlbW8ud2VcIilcbnZhciBfX3dlZXhfc2NyaXB0X18gPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvd2VleC1sb2FkZXIvbGliL3NjcmlwdC5qcyFiYWJlbC1sb2FkZXI/cHJlc2V0c1tdPS9Vc2Vycy9qZXJyeS93b3Jrc3BhY2UvcG0vZ2l0bGFiL3Nob3djYXNlL2NoYXRkZW1vL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtZXMyMDE1JnByZXNldHM9L1VzZXJzL2plcnJ5L3dvcmtzcGFjZS9wbS9naXRsYWIvc2hvd2Nhc2UvY2hhdGRlbW8vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1lczIwMTUmcGx1Z2luc1tdPS9Vc2Vycy9qZXJyeS93b3Jrc3BhY2UvcG0vZ2l0bGFiL3Nob3djYXNlL2NoYXRkZW1vL25vZGVfbW9kdWxlcy9iYWJlbC1wbHVnaW4tdHJhbnNmb3JtLXJ1bnRpbWUmcGx1Z2lucz0vVXNlcnMvamVycnkvd29ya3NwYWNlL3BtL2dpdGxhYi9zaG93Y2FzZS9jaGF0ZGVtby9ub2RlX21vZHVsZXMvYmFiZWwtcGx1Z2luLXRyYW5zZm9ybS1ydW50aW1lJmNvbW1lbnRzPWZhbHNlIS4uL25vZGVfbW9kdWxlcy93ZWV4LWxvYWRlci9saWIvZXh0cmFjdC5qcz9pbmRleD0wJnR5cGU9c2NyaXB0cyEuL2RlbW8ud2VcIilcblxuX193ZWV4X2RlZmluZV9fKCdAd2VleC1jb21wb25lbnQvNjZiNWQwZDdhOTdjNTUwODNhMTU5ODAxMzA1OTE2OTYnLCBbXSwgZnVuY3Rpb24oX193ZWV4X3JlcXVpcmVfXywgX193ZWV4X2V4cG9ydHNfXywgX193ZWV4X21vZHVsZV9fKSB7XG5cbiAgICBfX3dlZXhfc2NyaXB0X18oX193ZWV4X21vZHVsZV9fLCBfX3dlZXhfZXhwb3J0c19fLCBfX3dlZXhfcmVxdWlyZV9fKVxuICAgIGlmIChfX3dlZXhfZXhwb3J0c19fLl9fZXNNb2R1bGUgJiYgX193ZWV4X2V4cG9ydHNfXy5kZWZhdWx0KSB7XG4gICAgICBfX3dlZXhfbW9kdWxlX18uZXhwb3J0cyA9IF9fd2VleF9leHBvcnRzX18uZGVmYXVsdFxuICAgIH1cblxuICAgIF9fd2VleF9tb2R1bGVfXy5leHBvcnRzLnRlbXBsYXRlID0gX193ZWV4X3RlbXBsYXRlX19cblxufSlcblxuX193ZWV4X2Jvb3RzdHJhcF9fKCdAd2VleC1jb21wb25lbnQvNjZiNWQwZDdhOTdjNTUwODNhMTU5ODAxMzA1OTE2OTYnLHVuZGVmaW5lZCx1bmRlZmluZWQpXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvZGVtby53ZT9lbnRyeT10cnVlXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0ge1xuICBcInR5cGVcIjogXCJkaXZcIixcbiAgXCJjaGlsZHJlblwiOiBbXG4gICAge1xuICAgICAgXCJ0eXBlXCI6IFwidGV4dFwiLFxuICAgICAgXCJpZFwiOiBcImNhbnZhc19kZW1vMVwiLFxuICAgICAgXCJzdHlsZVwiOiB7XG4gICAgICAgIFwid2lkdGhcIjogNzUwLFxuICAgICAgICBcImhlaWdodFwiOiAxMDAsXG4gICAgICAgIFwiYmFja2dyb3VuZENvbG9yXCI6IFwiI2UwZTBlMFwiXG4gICAgICB9LFxuICAgICAgXCJhdHRyXCI6IHtcbiAgICAgICAgXCJ2YWx1ZVwiOiBcImNhbnZhc19kZW1vIOS4iui+ueeVjFwiXG4gICAgICB9XG4gICAgfSxcbiAgICB7XG4gICAgICBcInR5cGVcIjogXCJjaGFydFwiLFxuICAgICAgXCJpZFwiOiBcInh4XCIsXG4gICAgICBcImF0dHJcIjoge1xuICAgICAgICBcIndpZHRoXCI6IFwiNzUwXCIsXG4gICAgICAgIFwiaGVpZ2h0XCI6IFwiNDAwXCJcbiAgICAgIH1cbiAgICB9LFxuICAgIHtcbiAgICAgIFwidHlwZVwiOiBcInRleHRcIixcbiAgICAgIFwiaWRcIjogXCJjYW52YXNfZGVtbzJcIixcbiAgICAgIFwic3R5bGVcIjoge1xuICAgICAgICBcIndpZHRoXCI6IDc1MCxcbiAgICAgICAgXCJoZWlnaHRcIjogMTAwLFxuICAgICAgICBcImJhY2tncm91bmRDb2xvclwiOiBcIiNlMGUwZTBcIlxuICAgICAgfSxcbiAgICAgIFwiYXR0clwiOiB7XG4gICAgICAgIFwidmFsdWVcIjogXCJjYW52YXNfZGVtbyDkuIvovrnnlYxcIlxuICAgICAgfVxuICAgIH1cbiAgXVxufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93ZWV4LWxvYWRlci9saWIvanNvbi5qcyEuL34vd2VleC1sb2FkZXIvbGliL3RlbXBsYXRlLmpzIS4vfi93ZWV4LWxvYWRlci9saWIvZXh0cmFjdC5qcz90eXBlPXRlbXBsYXRlIS4vc3JjL2RlbW8ud2Vcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiPHRlbXBsYXRlPlxuICAgIDxkaXY+XG4gICAgICAgIDx0ZXh0IGlkPVwiY2FudmFzX2RlbW8xXCIgc3R5bGU9XCJ3aWR0aDo3NTA7aGVpZ2h0OjEwMDtiYWNrZ3JvdW5kQ29sb3I6I2UwZTBlMFwiPmNhbnZhc19kZW1vIOS4iui+ueeVjDwvdGV4dD5cbiAgICAgICAgPGNoYXJ0IGlkPVwieHhcIiB3aWR0aD1cIjc1MFwiIGhlaWdodD1cIjQwMFwiPjwvY2hhcnQ+XG4gICAgICAgIDx0ZXh0IGlkPVwiY2FudmFzX2RlbW8yXCIgIHN0eWxlPVwid2lkdGg6NzUwO2hlaWdodDoxMDA7YmFja2dyb3VuZENvbG9yOiNlMGUwZTBcIj5jYW52YXNfZGVtbyDkuIvovrnnlYw8L3RleHQ+XG4gICAgPC9kaXY+XG5cbjwvdGVtcGxhdGU+XG48c2NyaXB0PlxuICAgIHZhciBHTT1yZXF1aXJlKCd3ZWV4LWNoYXJ0JykoJ2cyJyk7XG4gICAgdmFyIGNhc2VzPXJlcXVpcmUoJy4vY2FzZScpO1xuICAgIG1vZHVsZS5leHBvcnRzPXtcbiAgICAgICAgcmVhZHk6ZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHZhciB1cmw9dGhpcy4kZ2V0Q29uZmlnKCkuYnVuZGxlVXJsO1xuICAgICAgICAgICAgdmFyIGNhc2VJZD11cmwubWF0Y2goL1xcP2Nhc2U9KFxcZCspLylbMV07XG4gICAgICAgICAgICBjYXNlc1snY2FzZScrY2FzZUlkXShHTSk7XG4gICAgICAgIH1cblxuXG4gICAgfVxuPC9zY3JpcHQ+XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2RlbW8ud2U/MjM4YmRmMTAiLCIvKipcbiAqIENyZWF0ZWQgYnkgZ29kc29uZyBvbiAxNi8xMi8xMi5cbiAqL1xucmVxdWlyZSgnLi9jaGFydC53ZScpO1xubW9kdWxlLmV4cG9ydHM9cmVxdWlyZSgnLi9jaGFydCcpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93ZWV4LWNoYXJ0L2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsInZhciBfX3dlZXhfdGVtcGxhdGVfXyA9IHJlcXVpcmUoXCIhIS4uL3dlZXgtbG9hZGVyL2xpYi9qc29uLmpzIS4uL3dlZXgtbG9hZGVyL2xpYi90ZW1wbGF0ZS5qcyEuLi93ZWV4LWxvYWRlci9saWIvZXh0cmFjdC5qcz90eXBlPXRlbXBsYXRlIS4vY2hhcnQud2VcIilcbnZhciBfX3dlZXhfc2NyaXB0X18gPSByZXF1aXJlKFwiISEuLi93ZWV4LWxvYWRlci9saWIvc2NyaXB0LmpzIWJhYmVsLWxvYWRlcj9wcmVzZXRzW109L1VzZXJzL2plcnJ5L3dvcmtzcGFjZS9wbS9naXRsYWIvc2hvd2Nhc2UvY2hhdGRlbW8vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1lczIwMTUmcHJlc2V0cz0vVXNlcnMvamVycnkvd29ya3NwYWNlL3BtL2dpdGxhYi9zaG93Y2FzZS9jaGF0ZGVtby9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LWVzMjAxNSZwbHVnaW5zW109L1VzZXJzL2plcnJ5L3dvcmtzcGFjZS9wbS9naXRsYWIvc2hvd2Nhc2UvY2hhdGRlbW8vbm9kZV9tb2R1bGVzL2JhYmVsLXBsdWdpbi10cmFuc2Zvcm0tcnVudGltZSZwbHVnaW5zPS9Vc2Vycy9qZXJyeS93b3Jrc3BhY2UvcG0vZ2l0bGFiL3Nob3djYXNlL2NoYXRkZW1vL25vZGVfbW9kdWxlcy9iYWJlbC1wbHVnaW4tdHJhbnNmb3JtLXJ1bnRpbWUmY29tbWVudHM9ZmFsc2UhLi4vd2VleC1sb2FkZXIvbGliL2V4dHJhY3QuanM/aW5kZXg9MCZ0eXBlPXNjcmlwdHMhLi9jaGFydC53ZVwiKVxuXG5fX3dlZXhfZGVmaW5lX18oJ0B3ZWV4LWNvbXBvbmVudC9jaGFydCcsIFtdLCBmdW5jdGlvbihfX3dlZXhfcmVxdWlyZV9fLCBfX3dlZXhfZXhwb3J0c19fLCBfX3dlZXhfbW9kdWxlX18pIHtcblxuICAgIF9fd2VleF9zY3JpcHRfXyhfX3dlZXhfbW9kdWxlX18sIF9fd2VleF9leHBvcnRzX18sIF9fd2VleF9yZXF1aXJlX18pXG4gICAgaWYgKF9fd2VleF9leHBvcnRzX18uX19lc01vZHVsZSAmJiBfX3dlZXhfZXhwb3J0c19fLmRlZmF1bHQpIHtcbiAgICAgIF9fd2VleF9tb2R1bGVfXy5leHBvcnRzID0gX193ZWV4X2V4cG9ydHNfXy5kZWZhdWx0XG4gICAgfVxuXG4gICAgX193ZWV4X21vZHVsZV9fLmV4cG9ydHMudGVtcGxhdGUgPSBfX3dlZXhfdGVtcGxhdGVfX1xuXG59KVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dlZXgtY2hhcnQvY2hhcnQud2Vcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSB7XG4gIFwidHlwZVwiOiBcImdjYW52YXNcIixcbiAgXCJpZFwiOiBcInd4Y19nY2FudmFzXCIsXG4gIFwic3R5bGVcIjoge1xuICAgIFwid2lkdGhcIjogZnVuY3Rpb24gKCkge3JldHVybiB0aGlzLndpZHRofSxcbiAgICBcImhlaWdodFwiOiBmdW5jdGlvbiAoKSB7cmV0dXJuIHRoaXMuaGVpZ2h0fSxcbiAgICBcImJhY2tncm91bmRDb2xvclwiOiBcIiNmZmZmZmZcIlxuICB9XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dlZXgtbG9hZGVyL2xpYi9qc29uLmpzIS4vfi93ZWV4LWxvYWRlci9saWIvdGVtcGxhdGUuanMhLi9+L3dlZXgtbG9hZGVyL2xpYi9leHRyYWN0LmpzP3R5cGU9dGVtcGxhdGUhLi9+L3dlZXgtY2hhcnQvY2hhcnQud2Vcbi8vIG1vZHVsZSBpZCA9IDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLyoqXG4qIENyZWF0ZWQgYnkgZ29kc29uZyBvbiAxNi8xMS8zLlxuKi9cbjx0ZW1wbGF0ZT5cbiAgICA8Z2NhbnZhcyBpZD1cInd4Y19nY2FudmFzXCIgc3R5bGU9XCJ3aWR0aDp7e3dpZHRofX07aGVpZ2h0Ont7aGVpZ2h0fX07YmFja2dyb3VuZENvbG9yOiNmZmZmZmZcIj48L2djYW52YXM+XG48L3RlbXBsYXRlPlxuPHNjcmlwdD5cbiAgICB2YXIgQ2FudmFzRWxlbWVudCA9IHJlcXVpcmUoJy4vQ2FudmFzRWxlbWVudCcpO1xuICAgIHZhciBDaGFydCA9IHJlcXVpcmUoJy4vY2hhcnQnKTtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgd2lkdGg6IDc1MCxcbiAgICAgICAgICAgIGhlaWdodDogMzc1XG4gICAgICAgIH0sXG4gICAgICAgIGNyZWF0ZWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgXG4gICAgICAgICAgICBDYW52YXNFbGVtZW50LnJlc2V0KCk7XG4gICAgICAgIH0sXG4gICAgICAgIHJlYWR5OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBDYW52YXNFbGVtZW50LmluaXQodGhpcy4kZWwoJ3d4Y19nY2FudmFzJykgKS50aGVuKGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAgICAgICAgICAgQ2hhcnQucmVhZHkoY29udGV4dCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbjwvc2NyaXB0PlxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vfi93ZWV4LWNoYXJ0L2NoYXJ0LndlPzA3MTJlNjM4IiwiLyoqXG4gKiBDcmVhdGVkIGJ5IGdvZHNvbmcgb24gMTYvOS8xMi5cbiAqL1xudmFyIENhbnZhcyA9IHJlcXVpcmUoJ3dlZXgtZ2NhbnZhcycpO1xudmFyIF9pbnN0YW5jZU1hcCA9IHt9O1xuZnVuY3Rpb24gQ2FudmFzRWxlbWVudCh3ZWV4RWxlbWVudCwgY2FudmFzSWQpIHtcbiAgICAvL2cy56uf54S25a+5Y2FudmFz5YGa5rex5ou36LSd77yM55Soc3RyaW5nIOe7lei/h+S7luS7rOexu+Wei+ajgOafpeeahOWdke+8jOaXoOWliOiEuFxuICAgIHZhciBpbnN0YW5jZSA9IG5ldyBTdHJpbmcoKTtcbiAgICBpbnN0YW5jZS53ZWV4RWxlbWVudCA9IHdlZXhFbGVtZW50O1xuICAgIGlmIChfaW5zdGFuY2VNYXBbY2FudmFzSWRdKSB7XG4gICAgICAgIGluc3RhbmNlLndlZXhFbGVtZW50ID0gX2luc3RhbmNlTWFwW2NhbnZhc0lkXTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIF9pbnN0YW5jZU1hcFtjYW52YXNJZF0gPSBpbnN0YW5jZTtcbiAgICB9XG5cblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGluc3RhbmNlLCB7XG4gICAgICAgICdjdXJyZW50U3R5bGUnOiB7XG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgaW5zdGFuY2Uud2VleEVsZW1lbnQuY2xhc3NTdHlsZSwgaW5zdGFuY2Uud2VleEVsZW1lbnQuc3R5bGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAnb2Zmc2V0V2lkdGgnOiB7XG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgY2FudmFzV2lkdGggPSBwYXJzZUZsb2F0KGluc3RhbmNlLndlZXhFbGVtZW50LmNsYXNzU3R5bGVbJ3dpZHRoJ10gfHwgaW5zdGFuY2Uud2VleEVsZW1lbnQuc3R5bGVbJ3dpZHRoJ10pO1xuICAgICAgICAgICAgICAgIHJldHVybiBjYW52YXNXaWR0aDtcbiAgICAgICAgICAgICAgICAvL3JldHVybiBwYXJzZUZsb2F0KHdlZXhFbGVtZW50LmNsYXNzU3R5bGVbJ3dpZHRoJ118fHdlZXhFbGVtZW50LnN0eWxlWyd3aWR0aCddKVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAnb2Zmc2V0SGVpZ2h0Jzoge1xuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ29mZnNldEhlaWdodDonLCBwYXJzZUZsb2F0KGluc3RhbmNlLndlZXhFbGVtZW50LmNsYXNzU3R5bGVbJ2hlaWdodCddIHx8IGluc3RhbmNlLndlZXhFbGVtZW50LnN0eWxlWydoZWlnaHQnXSkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQoaW5zdGFuY2Uud2VleEVsZW1lbnQuY2xhc3NTdHlsZVsnaGVpZ2h0J10gfHwgaW5zdGFuY2Uud2VleEVsZW1lbnQuc3R5bGVbJ2hlaWdodCddKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgaW5zdGFuY2UuZ2V0Q29udGV4dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIENhbnZhcy5nZXRDb250ZXh0KCcyZCcpXG4gICAgfTtcbiAgICByZXR1cm4gaW5zdGFuY2U7XG59XG5DYW52YXNFbGVtZW50LmluaXQgPSBmdW5jdGlvbiAoZWxlbWVudCwgY2FudmFzSWQpIHtcbiAgICAvL+WIneWni+WMlmNhbnZhcyBkb20g5bm25Lyq6YCgZ2V0RWxlbWVudEJ5SWTlkozmoIflh4bnmoRnZXRDb250ZXh0XG4gICAgaWYgKF9pbnN0YW5jZU1hcFtjYW52YXNJZF0pIHtcbiAgICAgICAgX2luc3RhbmNlTWFwW2NhbnZhc0lkXS53ZWV4RWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBfaW5zdGFuY2VNYXBbY2FudmFzSWRdID0gZWxlbWVudDtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICAgICAgQ2FudmFzLnN0YXJ0KGVsZW1lbnQucmVmLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXNvbHZlKENhbnZhcy5nZXRDb250ZXh0KCcyZCcpKTtcblxuICAgICAgICB9KTtcbiAgICB9KVxufTtcblxuQ2FudmFzRWxlbWVudC5yZXNldCA9IGZ1bmN0aW9uICgpIHtcbiAgICBDYW52YXMuZGlzYWJsZSgpO1xufTtcbm1vZHVsZS5leHBvcnRzID0gQ2FudmFzRWxlbWVudDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93ZWV4LWNoYXJ0L0NhbnZhc0VsZW1lbnQuanNcbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLyoqXG5cbmdjYW52YXMuanPkvb/nlKjor7TmmI46XG4x44CB5byV5YWlZ2NhbnZhc+W6k1xuMuOAgeiwg+eUqGdjYW52YXPlupPnmoRjcmVhdGVFbGVtZW50KGNvbXBvbmVudCnmjqXlj6PvvIzliJvlu7rkuIDkuKpjYW52YXPlr7nosaHjgIJcbjPjgIHosIPnlKhjYW52YXPlr7nosaHnmoRnZXRDb250ZXh0KHBhcmFtKe+8jOiOt+WPlueUqOS6jua4suafk+eahGNvbnRleHTjgIJcblxu5omp5bGV55So5rOV77yaXG4x44CB5a+55LqOQW5kcm9pZOeOr+Wig++8jOmDqOWIhuacuuWei+WPr+iDveaXoOazlei/kOihjOOAguW7uuiuruWcqOmhtemdouWFpeWPo+WkhOiwg+eUqGdjYW52YXPlupPnmoRzdGFydChzdWNjZXNzQ2FsbGJhY2ssIGVycm9yQ2FsbGJhY2sp5Ye95pWw77yM6L+b6KGM6buR55m95ZCN5Y2V5Yik5pat44CCXG4y44CB6buY6K6k5q+PMTZtc++8jOS8muiHquWKqOS4i+WPkeS4gOasoea4suafk+aMh+S7pOOAguafkOS6m+eJueauiuWcuuaZr+S4i++8jOW4jOacm+iHquihjOaOp+WItuS4i+WPkemikeeOh+eahO+8jOWPr+ebtOaOpeiwg+eUqGNvbnRleHQucmVuZGVyKCnmjqXlj6PjgILosIPnlKjlkI7kvJrlhbPpl63oh6rliqjkuIvlj5HnmoTmk43kvZzvvIzliIfmjaLmiJDmr4/mrKHkuLvliqjosIPnlKhyZW5kZXLml7bmiY3kuIvlj5HjgIJcblxu5a6M5pW056S65L6L5aaC5LiL77yaXG52YXIgbGliR0NhbnZhcyA9IHJlcXVpcmUoJy4uLy4uL2NvcmUvZ2NhbnZhcycpO1xubGliR0NhbnZhcy5zdGFydChmdW5jdGlvbigpe1xuICAgIG5hdGl2ZUxvZygnZ2NhbnZhcy5zdGFydCBzdWNjZXNzJyk7XG4gICAgdmFyIGNhbnZhc09iaiA9IGxpYkdDYW52YXMuY3JlYXRlRWxlbWVudChnY2FudmFzQ29tcG9uZW50KTtcbiAgICB2YXIgY29udGV4dCA9IGNhbnZhc09iai5nZXRDb250ZXh0KCcyZCcpO1xuICAgIC8vZG8gYW55IGFjdGlvbiBoZXJlXG59LGZ1bmN0aW9uKCl7XG4gICAgbmF0aXZlTG9nKCdnY2FudmFzLnN0YXJ0IGZhaWxlZCcpO1xufSk7IFxuXG4qL1xuXG52YXIgR0JyaWRnZSA9IHJlcXVpcmUoXCIuL2d1dGlsXCIpLkdCcmlkZ2U7XG52YXIgR0xvZyA9IHJlcXVpcmUoXCIuL2d1dGlsXCIpLkdMb2c7XG4vL3ZhciBHQ29udGV4dFdlYkdMID0gcmVxdWlyZSgnLi9nd2ViZ2wnKTtcbnZhciBHQ29udGV4dDJEID0gcmVxdWlyZSgnLi9nY29udGV4dDJkJyk7XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbnZhciBHU3VwcG9ydCA9IHt9O1xudmFyIG1vZGVsX2NoZWNrO1xudmFyIHZlcnNpb25fY2hlY2s7XG5HU3VwcG9ydC5yZW5kZXJNb2RlID0gMDsvLyAwLS1SRU5ERVJNT0RFX1dIRU5fRElSVFksIDEtLVJFTkRFUk1PREVfQ09OVElOVU9VU0xZXG5HU3VwcG9ydC5oeWJyaWRMYXllclR5cGUgPSAtMTsvLyAwLS1MQVlFUl9UWVBFX05PTkUgMS0tTEFZRVJfVFlQRV9TT0ZUV0FSRSAyLS1MQVlFUl9UWVBFX0hBUkRXQVJFLiBjaGFuZ2UgaHlicmlkIGxheWVyIHR5cGUgZnJvbSBMQVlFUl9UWVBFX1NPRlRXQVJFIHRvIHVuc2V0LCBhdm9pZCBibG9jayB3aGVuIHVzZSBodG1sNSBhdWRpby5cbkdTdXBwb3J0LmNoZWNrVHlwZSA9IDA7Ly8gMC0tYWxsIHN1cHBvcnQsIDEtLXdoaXRlIGxpc3QgY2hlY2tcbkdTdXBwb3J0Lm5hdGl2ZVZlciA9IDA7XG5HU3VwcG9ydC5kZWZhdWx0SGlRdWFsaXR5TW9kZSA9IHRydWU7IC8vIGZhbHNlLS0gbm9ybWFsIHRydWUtLWhpUXVhbGl0eVxuR1N1cHBvcnQuc3VwcG9ydFNjcm9sbCA9IGZhbHNlO1xuR1N1cHBvcnQubmV3Q2FudmFzTW9kZSA9IGZhbHNlOyAgICAgICAgICAgICAvL3RydWU6IEdDYW52YXNWaWV3IGluIFdlYnZpZXdcbkdTdXBwb3J0LnNhbWVMZXZlbCA9IGZhbHNlOyAvL25ld0NhbnZhc01vZGUgPSB0cnVlICYmIHRydWU6IEdDYW52YXNWaWV3IGFuZCBXZWJ2aWV3IGlzIHNhbWUgbGV2ZWw7XG5HU3VwcG9ydC5jbGVhckNvbG9yID0gXCJ3aGl0ZVwiO1xuR1N1cHBvcnQuV0hJVEVfTElTVCA9IFtcblxuICAgIG1vZGVsX2NoZWNrID0gW1xuICAgICAgICBmdW5jdGlvbihpbmZvKSB7cmV0dXJuIGluZm8uTU9ERUwgPT0gJ0dULUk5MzAwJzt9LFxuICAgICAgICBmdW5jdGlvbihpbmZvKSB7cmV0dXJuIGluZm8uTU9ERUwgPT0gJ0dULUk5NTAwJzt9LFxuICAgICAgICBmdW5jdGlvbihpbmZvKSB7cmV0dXJuIGluZm8uTU9ERUwgPT0gJ0dULU43MTA4Jzt9LFxuICAgICAgICBmdW5jdGlvbihpbmZvKSB7cmV0dXJuIGluZm8uTU9ERUwgPT0gJ0hJS2UgODQ4QSc7fSxcbiAgICAgICAgZnVuY3Rpb24oaW5mbykge3JldHVybiBpbmZvLk1PREVMID09ICdIVEMgNjAxZSc7fSxcbiAgICAgICAgZnVuY3Rpb24oaW5mbykge3JldHVybiBpbmZvLk1PREVMID09ICdIVUFXRUkgQzg4MTMnO30sXG4gICAgICAgIGZ1bmN0aW9uKGluZm8pIHtyZXR1cm4gaW5mby5NT0RFTCA9PSAnTGVub3ZvIEs5MDAnO30sXG4gICAgICAgIGZ1bmN0aW9uKGluZm8pIHtyZXR1cm4gaW5mby5NT0RFTCA9PSAnTTM1MSc7fSxcbiAgICAgICAgZnVuY3Rpb24oaW5mbykge3JldHVybiBpbmZvLk1PREVMID09ICdNNTF3Jzt9LFxuICAgICAgICBmdW5jdGlvbihpbmZvKSB7cmV0dXJuIGluZm8uTU9ERUwgPT0gJ01JIDMnO30sXG4gICAgICAgIGZ1bmN0aW9uKGluZm8pIHtyZXR1cm4gaW5mby5NT0RFTCA9PSAnTUkgM1cnO30sXG4gICAgICAgIGZ1bmN0aW9uKGluZm8pIHtyZXR1cm4gaW5mby5NT0RFTCA9PSAnU00tRzkwMDZWJzt9LFxuICAgICAgICBmdW5jdGlvbihpbmZvKSB7cmV0dXJuIGluZm8uTU9ERUwgPT0gJ1NNLU45MDA2Jzt9XG4gICAgXSxcbiAgICB2ZXJzaW9uX2NoZWNrID0gW1xuICAgICAgICBmdW5jdGlvbihpbmZvKSB7R0xvZy5kKFwiaW5mby5PU19SRUxFQVNFPVwiICsgaW5mby5PU19SRUxFQVNFKTsgcmV0dXJuIGZhbHNlO30sXG4gICAgICAgIGZ1bmN0aW9uKGluZm8pIHtyZXR1cm4gKGluZm8uT1NfUkVMRUFTRSA+PSAnNC4xLjAnKSYmKCBpbmZvLk9TX1JFTEVBU0UgPD0gJzQuNC4yJyk7fVxuICAgIF1cbl07XG5cblxuR1N1cHBvcnQuY2hlY2tMaXN0ID0gZnVuY3Rpb24oc3VjY2Vzc0Z1bmMsIGZhaWx1cmVGdW5jKXtcbiAgICB2YXIgY2hlY2tUeXBlID0gR1N1cHBvcnQuY2hlY2tUeXBlO1xuICAgIEdMb2cuZChcIltjaGVja0xpc3RdIGNoZWNrVHlwZTpcIiArIGNoZWNrVHlwZSk7XG4gICAgaWYgKDEgPT0gY2hlY2tUeXBlKSB7Ly93aGl0ZSBsaXN0IGNoZWNrXG4gICAgICAgIHZhciB3aGl0ZWxpc3QgPSBHU3VwcG9ydC5XSElURV9MSVNUO1xuICAgICAgICB2YXIgbGVuZ3RoID0gd2hpdGVsaXN0Lmxlbmd0aDtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGxlblN1YiA9IHdoaXRlbGlzdFtpXS5sZW5ndGg7XG4gICAgICAgICAgICB2YXIgZm91bmQgPSBmYWxzZTtcbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbGVuU3ViOyBqKyspe1xuICAgICAgICAgICAgICAgIGlmICh3aGl0ZWxpc3RbaV1bal0oR0RldmljZUluZm8pKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvdW5kID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFmb3VuZCl7IC8vIHVuZm91bmQgaW4gd2hpdGUgbGlzdFxuICAgICAgICAgICAgICAgIEdMb2cuZChcInRoZSBkZXZpY2UgaXMgbm90IHN1cHBvcnRlZCwgXCIgKyBHRGV2aWNlSW5mby5NT0RFTCk7XG4gICAgICAgICAgICAgICAgZmFpbHVyZUZ1bmMmJmZhaWx1cmVGdW5jKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHN1Y2Nlc3NGdW5jJiZzdWNjZXNzRnVuYygpO1xufTtcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxudmFyIEdEZXZpY2VJbmZvID0ge307XG52YXIgX2NvbnRleHQgPSBudWxsO1xudmFyIF9jb250ZXh0X3R5cGUgPSAwOy8vMC0tMmQ7MS0td2ViZ2xcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxudmFyIEdDYW52YXNQbGF0Zm9ybSA9IDI7Ly8wLS1INTsxLS1pT1M7Mi0tQW5kcm9pZFxuXG52YXIgR0NhbnZhcyA9IHtcbiAgICBzdGFydDogZnVuY3Rpb24gKHJlZiwgc3VjYywgZmFpbCkge1xuICAgICAgICBHTG9nLmQoJ2djYW52YXMjc3RhcnQ9PT09PT4+PicpO1xuXG4gICAgICAgIC8vYmluZCBjYW52YXNcbiAgICAgICAgdmFyIGNvbmZpZyA9IFtdO1xuICAgICAgICBjb25maWcucHVzaChHU3VwcG9ydC5yZW5kZXJNb2RlKTtcbiAgICAgICAgY29uZmlnLnB1c2goR1N1cHBvcnQuaHlicmlkTGF5ZXJUeXBlKTtcbiAgICAgICAgY29uZmlnLnB1c2goR1N1cHBvcnQuc3VwcG9ydFNjcm9sbCk7XG4gICAgICAgIGNvbmZpZy5wdXNoKEdTdXBwb3J0Lm5ld0NhbnZhc01vZGUpO1xuICAgICAgICBjb25maWcucHVzaCgxKTsvL2NvbXBhdGlibGUuIDEgd2lsbCBjYWxsIEdDYW52YXNKTkkuZ2V0QWxsUGFyYW1ldGVyKFwiZ2NhbnZhc1wiKTtcbiAgICAgICAgY29uZmlnLnB1c2goR1N1cHBvcnQuY2xlYXJDb2xvcik7XG4gICAgICAgIGNvbmZpZy5wdXNoKEdTdXBwb3J0LnNhbWVMZXZlbCk7XG4gICAgICAgIEdCcmlkZ2UuY2FsbEVuYWJsZShyZWYsY29uZmlnLGZ1bmN0aW9uKGUpe30pO1xuXG4gICAgICAgIFxuXG4gICAgICAgIC8vZ2V0IGRldmljZVxuICAgICAgICBHQnJpZGdlLmdldERldmljZUluZm8oZnVuY3Rpb24oZSl7Ly/ov5nph4zmmK/lvILmraXmk43kvZxcblxuXG5cbiAgICAgICAgICBpZiAoZS5kYXRhICYmIGUuZGF0YS5wbGF0Zm9ybSA9PSBcImlPU1wiKXtcbiAgICAgICAgICAgICAgR0NhbnZhc1BsYXRmb3JtID0gMTtcblxuICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgR0NhbnZhc1BsYXRmb3JtID0gMjtcblxuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zb2xlLmxvZygnR0NhbnZhc1BsYXRmb3JtID0gJyArIEdDYW52YXNQbGF0Zm9ybSk7XG4gICAgICAgICAgc3VjYygpO1xuICAgICAgICAgIC8qXG4gICAgICAgICAgICBpZihlICYmIGUucmVzdWx0ID09PSAnc3VjY2Vzcycpe1xuICAgICAgICAgICAgICAgIGlmIChlLmRhdGEgJiYgZS5kYXRhLnBsYXRmb3JtID09IFwiaU9TXCIpe1xuICAgICAgICAgICAgICAgICAgICBHQ2FudmFzUGxhdGZvcm0gPSAxO1xuICAgICAgICAgICAgICAgICAgICBzdWNjKCk7XG4gICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbmZvID0gSlNPTi5wYXJzZShlLmRhdGEpO1xuICAgICAgICAgICAgICAgICAgICBpZihpbmZvLkdDQU5WQVNMSUJFTkFCTEUgJiYgaW5mby5JU19BVkFJTEFCTEUpe1xuICAgICAgICAgICAgICAgICAgICAgICAgR0RldmljZUluZm8gPSBpbmZvO1xuICAgICAgICAgICAgICAgICAgICAgICAgR1N1cHBvcnQuY2hlY2tMaXN0KHN1Y2MsZmFpbCk7XG4gICAgICAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgICAgICAgICAgZmFpbCYmZmFpbCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgZmFpbCYmZmFpbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKi9cbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIGdldENvbnRleHQ6IGZ1bmN0aW9uIChjb250ZXh0SUQpIHtcbiAgICAgICAgR0xvZy5kKCdnY2FudmFzI2dldENvbnRleHQ9PT09PT4+PicpO1xuICAgICAgICBpZiAoX2NvbnRleHQpe1xuICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Oy8vdW5zdXBwb3J0IGNoYW5nZSB0eXBlIGFmdGVyIGNyZWF0ZVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbnRleHRJRC5tYXRjaCgvd2ViZ2wvaSkpe1xuICAgICAgICAgICAgX2NvbnRleHQgPSBuZXcgR0NvbnRleHRXZWJHTCgpO1xuICAgICAgICAgICAgX2NvbnRleHRfdHlwZSA9IDE7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgX2NvbnRleHQgPSBuZXcgR0NvbnRleHQyRCgpO1xuICAgICAgICAgICAgX2NvbnRleHRfdHlwZSA9IDA7XG4gICAgICAgIH1cblxuICAgICAgICBHQnJpZGdlLnNldENvbnRleHRUeXBlKF9jb250ZXh0X3R5cGUpO1xuXG4gICAgICAgIGlmICghX2NvbnRleHQudGltZXIpIHtcbiAgICAgICAgICAgIF9jb250ZXh0LnRpbWVyID0gc2V0SW50ZXJ2YWwodGhpcy5yZW5kZXIuYmluZCh0aGlzKSwgMTYpOyAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gX2NvbnRleHQ7XG4gICAgfSxcbiAgICByZW5kZXI6IGZ1bmN0aW9uKCl7XG4gICAgICAgIC8vIEdMb2cuZCgnW0dDYW52YXM6OnJlbmRlcl0gc3RhcnQuLi4nKTtcbiAgICAgICAgX2NvbnRleHQucmVuZGVyKFwiYXV0b1wiKTtcbiAgICB9LFxuXG4gICAgZGlzYWJsZTogZnVuY3Rpb24oKXtcbiAgICAgICAgR0xvZy5kKCdnY2FudmFzI2Rpc2FibGU9PT09PT4+PicpO1xuICAgICAgICBHQnJpZGdlLmNhbGxEaXNhYmxlKCk7XG4gICAgfSxcblxuICAgIHNldEhpUXVhbGl0eTogZnVuY3Rpb24ocXVhbGl0eSl7XG4gICAgICAgIEdMb2cuZCgnZ2NhbnZhcyNzZXRIaVF1YWxpdHk9PT09PT4+PicgKyBxdWFsaXR5KTtcbiAgICAgICAgR0JyaWRnZS5zZXRIaVF1YWxpdHkocXVhbGl0eSk7XG5cbiAgICB9LFxuXG4gICAgc2V0TG9nTGV2ZWw6ZnVuY3Rpb24obGV2ZWwpe1xuICAgICAgICBHTG9nLmQoJ2djYW52YXMjc2V0TG9nTGV2ZWw9PT09PT4+PiAnICsgbGV2ZWwpO1xuICAgICAgICBHQnJpZGdlLnNldExvZ0xldmVsKGxldmVsKTtcbiAgICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEdDYW52YXM7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2VleC1nY2FudmFzL2djYW52YXMuanNcbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vR0JyaWRnZVxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbnZhciBHTG9nID0gcmVxdWlyZSgnLi9nbG9nJykuR0xvZztcblxudmFyIGluV2VleCA9IHR5cGVvZiBjYWxsTmF0aXZlICE9PSAndW5kZWZpbmVkJztcbnZhciBkZWJ1ZyA9IHRydWU7XG52YXIgY2FudmFzTW9kdWxlO1xuXG4vKlxuX193ZWV4X2RlZmluZV9fKCdAd2VleC10ZW1wL3gnLCBmdW5jdGlvbiAoX193ZWV4X3JlcXVpcmVfXykge1xuICAgIGNhbnZhc01vZHVsZSA9IF9fd2VleF9yZXF1aXJlX18oJ0B3ZWV4LW1vZHVsZS9nY2FudmFzJyk7XG59KTtcbiovXG5cbi8vY2FudmFzTW9kdWxlPXR5cGVvZiB3ZWV4IT09J3VuZGVmaW5lZCc/d2VleC5yZXF1aXJlTW9kdWxlKCdnY2FudmFzJyk6X193ZWV4X3JlcXVpcmVfXygnQHdlZXgtbW9kdWxlL2djYW52YXMnKTtcbmNhbnZhc01vZHVsZSA9ICh0eXBlb2Ygd2VleCE9PSd1bmRlZmluZWQnJiZ3ZWV4LnJlcXVpcmVNb2R1bGUpID8gKCB3ZWV4LnJlcXVpcmVNb2R1bGUoJ2djYW52YXMnKSApIDogKF9fd2VleF9yZXF1aXJlX18oJ0B3ZWV4LW1vZHVsZS9nY2FudmFzJykgKTtcblxudmFyIEdCcmlkZ2UgPSB7XG4gICAgLyoq5omn6KGMcmVuZGVy5oyH5LukKi9cbiAgICBjYWxsUmVuZGVyOiBmdW5jdGlvbiAoY29tbWFuZHMpIHtcbiAgICAgICAgaWYgKCFpbldlZXgpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBHTG9nLmQoJ2JyaWRnZSNjYWxsUmVuZGVyKCkgY29tbWFuZHMgaXMgJyArIGNvbW1hbmRzKTtcbiAgICAgICAgY2FudmFzTW9kdWxlLnJlbmRlcihbY29tbWFuZHNdKTtcbiAgICB9LFxuXG4gICAgLyoq6aKE5Yqg6L295Zu+54mHKi9cbiAgICBwcmVMb2FkSW1hZ2U6IGZ1bmN0aW9uIChzcmMsIGNiKSB7XG4gICAgICAgIGlmICghaW5XZWV4KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgR0xvZy5kKCdicmlkZ2UjcHJlTG9hZEltYWdlKCkgaW1hZ2UgdXJsIGlzICcgKyBzcmMpO1xuICAgICAgICBjYW52YXNNb2R1bGUucHJlTG9hZEltYWdlKHNyYywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGNiICYmIGNiKGUpO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICog6I635Y+WY2FudmFz5byV55SoXG4gICAgICogQHBhcmFtIHJlZiB3eC1jYW52YXMg5byV55SoXG4gICAgICogQHBhcmFtIGNvbmZpZ0FycmF5IOmFjee9ruWPguaVsFxuICAgICAqKi9cbiAgICBjYWxsRW5hYmxlOiBmdW5jdGlvbiAocmVmLCBjb25maWdBcnJheSwgY2FsbGJhY2spIHtcbiAgICAgICAgaWYgKCFpbldlZXgpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcGFyYW1zID0ge1xuICAgICAgICAgICAgY29tcG9uZW50SWQ6IHJlZixcbiAgICAgICAgICAgIGNvbmZpZzpjb25maWdBcnJheVxuICAgICAgICB9O1xuICAgICAgICBjYW52YXNNb2R1bGUuZW5hYmxlKHBhcmFtcywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIEdMb2cuZCgnYnJpZGdlI2NhbGxFbmFibGUoKSByZXR1cm4gdmFsOicgKyBKU09OLnN0cmluZ2lmeShlKSk7XG4gICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhlKTtcbiAgICAgICAgfSk7XG4gICAgfSxcblxuXG4gICAgLyoqXG4gICAgICog6YeK5pS+Z2NhbnZhc+W8leaTjlxuICAgICAqIEBwYXJhbSByZWYgd3gtY2FudmFzIOW8leeUqFxuICAgICAqIEBwYXJhbSBjb25maWdBcnJheSDphY3nva7lj4LmlbBcbiAgICAgKiovXG4gICAgY2FsbERpc2FibGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCFpbldlZXgpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcGFyYW1zID0ge1xuICAgICAgICAgICAgXG4gICAgICAgIH07XG4gICAgICAgIGNhbnZhc01vZHVsZS5kaXNhYmxlKHBhcmFtcywgZnVuY3Rpb24oZSl7XG4gICAgICAgICAgICBHTG9nLmQoJ2JyaWRnZSNjYWxsRGlzYWJsZSgpIHJldHVybiB2YWw6JyArIEpTT04uc3RyaW5naWZ5KGUpKTtcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIOiOt+WPluiuvuWkh+S/oeaBryhhbmRyb2lkKVxuICAgICAqIEBwYXJhbSBjYWxsYmFjayDorr7lpIfkv6Hmga9cbiAgICAgKiovXG4gICAgZ2V0RGV2aWNlSW5mbzogZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIGlmICghaW5XZWV4KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY2FudmFzTW9kdWxlLmdldERldmljZUluZm8oe30sIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBHTG9nLmQoJ2JyaWRnZSNnZXREZXZpY2VJbmZvKCkgcmV0dXJuIHZhbDonICsgSlNPTi5zdHJpbmdpZnkoZSkpO1xuICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soZSk7XG4gICAgICAgIH0pO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIOiuvue9rmNvbnRleHTnsbvlnossMmTmiJbogIV3ZWJnbFxuICAgICAqXG4gICAgICogQHBhcmFtIGNvbnRleHRfdHlwZSAw5Luj6KGoMmQsMeS7o+ihqDNkXG4gICAgICogKi9cbiAgICBzZXRDb250ZXh0VHlwZTogZnVuY3Rpb24gKGNvbnRleHRfdHlwZSl7XG4gICAgICAgIGlmKGNvbnRleHRfdHlwZSAhPSAwICYmIGNvbnRleHRfdHlwZSAhPSAxKXtcbiAgICAgICAgICAgIEdMb2cuZCgnYnJpZGdlI3NldENvbnRleHRUeXBlKCk6IGludmFsaWQgY29udGV4dCB0eXBlPT09PicgKyBjb250ZXh0X3R5cGUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIEdMb2cuZCgnYnJpZGdlI3NldENvbnRleHRUeXBlKCk6IGNvbnRleHQgdHlwZSBpcyAnICsgY29udGV4dF90eXBlKTtcbiAgICAgICAgY2FudmFzTW9kdWxlLnNldENvbnRleHRUeXBlKGNvbnRleHRfdHlwZSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqXG4gICAgICog6K6+572u5pel5b+X57qn5YirXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY29udGV4dF90eXBlIDDku6PooagyZCwx5Luj6KGoM2RcbiAgICAgKiAqL1xuICAgIHNldExvZ0xldmVsOiBmdW5jdGlvbiAobGV2ZWwpe1xuICAgICAgICBHTG9nLmQoJ2JyaWRnZSNzZXRMb2dMZXZlbCgpOiBuYXRpdmUgbG9nTGV2ZWwgJyArIGxldmVsKTtcbiAgICAgICAgY2FudmFzTW9kdWxlLnNldExvZ0xldmVsKGxldmVsKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiDorr7nva5vcGVuZ2zmuLLmn5PotKjph49cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjb250ZXh0X3R5cGUgMOS7o+ihqDJkLDHku6PooagzZFxuICAgICAqICovXG4gICAgc2V0SGlRdWFsaXR5OiBmdW5jdGlvbiAocXVhbGl0eSl7XG4gICAgICAgIEdMb2cuZCgnYnJpZGdlI3NldEhpUXVhbGl0eSgpOiBxdWFsaXR5OiAnICsgcXVhbGl0eSk7XG4gICAgICAgIGNhbnZhc01vZHVsZS5zZXRIaVF1YWxpdHkocXVhbGl0eSk7XG4gICAgfVxufTtcblxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBHQnJpZGdlOiBHQnJpZGdlLFxuICAgIEdMb2c6IEdMb2dcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2VleC1nY2FudmFzL2d1dGlsLmpzXG4vLyBtb2R1bGUgaWQgPSA5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vL0dMb2dcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG52YXIgR0xPR19ERUJVR1x0PSAwO1xudmFyIEdMT0dfSU5GTyAgID0gMTtcbnZhciBHTE9HX1dBUk4gICA9IDI7XG52YXIgR0xPR19FUlJPUlx0PSAzO1xudmFyIEdMT0dfTlVMTCAgID0gLTE7XG5cbnZhciBHTG9nID0ge307XG5HTG9nLl9udWxsRnVuYyA9IGZ1bmN0aW9uKCl7fTtcbkdMb2cuZCA9IEdMb2cuX251bGxGdW5jO1xuR0xvZy5pID0gR0xvZy5fbnVsbEZ1bmNcbkdMb2cudyA9IEdMb2cuX251bGxGdW5jO1xuR0xvZy5lID0gR0xvZy5fbnVsbEZ1bmM7XG5HTG9nLl9uYXRpdmVFbmFibGUgPSBmYWxzZTtcbkdMb2cuX3NldE5hdGl2ZUxldmVsID0gZnVuY3Rpb24obGV2ZWwpe1xuXHQvKlxuXHRpZiAoIXRoaXMuX25hdGl2ZUVuYWJsZSlcblx0XHRyZXR1cm47XG5cdGlmIChsZXZlbCA9PSBHTE9HX0RFQlVHKVxuXHRcdEdDYW52YXMuX3RvTmF0aXZlKG51bGwsIG51bGwsICdHQ2FudmFzJywgJ3NldExvZ0xldmVsJywgWyBcImRlYnVnXCIgXSk7XG5cdGVsc2UgaWYgKGxldmVsID09IEdMT0dfSU5GTylcblx0XHRHQ2FudmFzLl90b05hdGl2ZShudWxsLCBudWxsLCAnR0NhbnZhcycsICdzZXRMb2dMZXZlbCcsIFsgXCJpbmZvXCIgXSk7XG5cdGVsc2UgaWYgKGxldmVsID09IEdMT0dfV0FSTilcblx0XHRHQ2FudmFzLl90b05hdGl2ZShudWxsLCBudWxsLCAnR0NhbnZhcycsICdzZXRMb2dMZXZlbCcsIFsgXCJ3YXJuXCIgXSk7XG5cdGVsc2UgaWYgKGxldmVsID09IEdMT0dfRVJST1IpXG5cdFx0R0NhbnZhcy5fdG9OYXRpdmUobnVsbCwgbnVsbCwgJ0dDYW52YXMnLCAnc2V0TG9nTGV2ZWwnLCBbIFwiZXJyb3JcIiBdKTtcblx0ZWxzZSBcblx0XHRHQ2FudmFzLl90b05hdGl2ZShudWxsLCBudWxsLCAnR0NhbnZhcycsICdzZXRMb2dMZXZlbCcsIFsgXCJmYXRhbFwiIF0pO1x0XG4gICAgICovXG59XG5HTG9nLl9yZWZyZXNoID0gZnVuY3Rpb24oKXtcblxuXHRcblx0aWYgKHRoaXMuZW5hYmxlID09IGZhbHNlKXtcblx0XHR0aGlzLl9zZXROYXRpdmVMZXZlbChHTE9HX05VTEwpO1xuXHRcdHRoaXMuZCA9IHRoaXMuX251bGxGdW5jO1xuXHRcdHRoaXMuaSA9IHRoaXMuX251bGxGdW5jXG5cdFx0dGhpcy53ID0gdGhpcy5fbnVsbEZ1bmM7XG5cdFx0dGhpcy5lID0gdGhpcy5fbnVsbEZ1bmM7XG5cdH1cblx0ZWxzZVxuXHR7XG5cdFx0aWYgKHRoaXMubGV2ZWwgPD0gR0xPR19FUlJPUilcblx0XHRcdHRoaXMuZSA9IGZ1bmN0aW9uKG1zZyl7IGNvbnNvbGUuZXJyb3IobXNnKTt9O1xuXHRcdGVsc2Vcblx0XHRcdHRoaXMuZSA9IHRoaXMuX251bGxGdW5jO1xuXHRcdFx0XG5cdFx0aWYgKHRoaXMubGV2ZWwgPD0gR0xPR19XQVJOKVxuXHRcdFx0dGhpcy53ID0gZnVuY3Rpb24obXNnKXsgY29uc29sZS53YXJuKG1zZyk7fTtcblx0XHRlbHNlXG5cdFx0XHR0aGlzLncgPSB0aGlzLl9udWxsRnVuYztcblx0XHRcblx0XHRpZiAodGhpcy5sZXZlbCA8PSBHTE9HX0lORk8pXG5cdFx0XHR0aGlzLmkgPSBmdW5jdGlvbihtc2cpeyBjb25zb2xlLmluZm8obXNnKTtcblx0XHRcdFx0dmFyIGFyZ3MgPSB7XG5cdFx0XHRcdFx0bXNnOm1zZ1xuXHRcdFx0XHR9XG5cdFx0XHQvL1dpbmRWYW5lLmNhbGwoXCJHTG9nXCIsIFwid3JpdGVMb2dcIiwgYXJncyB8fCB7fSwgbnVsbCwgbnVsbCk7XG5cdFx0fTtcblx0XHRlbHNlXG5cdFx0XHR0aGlzLmkgPSB0aGlzLl9udWxsRnVuYztcblx0XHRcblx0XHRpZiAodGhpcy5sZXZlbCA8PSBHTE9HX0RFQlVHKVxuXHRcdFx0dGhpcy5kID0gZnVuY3Rpb24obXNnKXsgY29uc29sZS5pbmZvKG1zZyk7XG5cdFx0XHRcdHZhciBhcmdzID0ge1xuXHRcdFx0XHRcdG1zZzptc2dcblx0XHRcdFx0fVxuXHRcdFx0Ly9XaW5kVmFuZS5jYWxsKFwiR0xvZ1wiLCBcIndyaXRlTG9nXCIsIGFyZ3MgfHwge30sIG51bGwsIG51bGwpO1xuXHRcdH07XG5cdFx0ZWxzZVxuXHRcdFx0dGhpcy5kID0gdGhpcy5fbnVsbEZ1bmM7XG5cdFx0XG5cdFx0dGhpcy5fc2V0TmF0aXZlTGV2ZWwodGhpcy5sZXZlbCk7XHRcblx0fVxufVxuR0xvZy5lbmFibGUgPSBmdW5jdGlvbigpe1xuXHR0aGlzLmVuYWJsZSA9IHRydWU7XG5cdHRoaXMuX3JlZnJlc2goKTtcbn1cbkdMb2cuZGlzYWJsZSA9IGZ1bmN0aW9uKCl7XG5cdHRoaXMuZW5hYmxlID0gZmFsc2U7XG5cdHRoaXMuX3JlZnJlc2goKTtcbn1cbkdMb2cuc2V0TGV2ZWwgPSBmdW5jdGlvbihsZXZlbCl7XG5cdGNvbnNvbGUuaW5mbyhcIltzZXRMZXZlbF0gXCIrIHRoaXMubGV2ZWwgKyBcIj0+XCIgKyBsZXZlbCk7XG5cdHRoaXMubGV2ZWwgPSBsZXZlbDtcblx0dGhpcy5lbmFibGUgPSB0cnVlO1xuXHR0aGlzLl9yZWZyZXNoKCk7XG59XG5cbi8vR0xvZy5zZXRMZXZlbChHTE9HX1dBUk4pO1xuR0xvZy5zZXRMZXZlbChHTE9HX0RFQlVHKTtcblxubW9kdWxlLmV4cG9ydHMuR0xvZyA9IEdMb2dcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2VleC1nY2FudmFzL2dsb2cuanNcbi8vIG1vZHVsZSBpZCA9IDEwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsInZhciBHQnJpZGdlID0gcmVxdWlyZShcIi4vZ3V0aWxcIikuR0JyaWRnZTtcbnZhciBHTG9nID0gcmVxdWlyZShcIi4vZ3V0aWxcIikuR0xvZztcblxuZnVuY3Rpb24gR0NvbnRleHQyRCgpIHtcbiAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSBcIlwiO1xuICAgIHRoaXMuX2dsb2JhbEFscGhhID0gMS4wO1xuICAgIHRoaXMuX2ZpbGxTdHlsZSA9IFwicmdiKDAsMCwwKVwiO1xuICAgIHRoaXMuX3N0cm9rZVN0eWxlID0gXCJyZ2IoMCwwLDApXCI7XG4gICAgdGhpcy5fbGluZVdpZHRoID0gMTtcbiAgICB0aGlzLl9saW5lQ2FwID0gXCJidXR0XCI7XG4gICAgdGhpcy5fbGluZUpvaW49IFwibWl0ZXJcIjtcbiAgICB0aGlzLl9taXRlckxpbWl0ID0gMTA7XG4gICAgdGhpcy5fZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uID0gXCJzb3VyY2Utb3ZlclwiO1xuICAgIHRoaXMuX3RleHRBbGlnbiA9IFwic3RhcnRcIjtcbiAgICB0aGlzLl90ZXh0QmFzZWxpbmUgPSBcImFscGhhYmV0aWNcIjtcbiAgICB0aGlzLl9mb250ID0gXCIxMHB4IHNhbnMtc2VyaWZcIjtcbiAgICB0aGlzLl9pbWFnZXMgPSB7fTtcbiAgICB0aGlzLl9jYW52YXNlczEgPSB7fTtcbiAgICB0aGlzLl9jYW52YXNlczIgPSB7fTtcbiAgICB0aGlzLl9nZXRJbWFnZURhdGEgPSBuZXcgQXJyYXkoKTtcblxuLy8gICAgR0NhbnZhcy5fZm9yYmlkZGVuQXV0b1JlcGxhY2VDYW52YXMgPXRydWU7XG4vLyAgICB0aGlzLl9hcGlDYW52YXMgID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4vLyAgICBHQ2FudmFzLl9mb3JiaWRkZW5BdXRvUmVwbGFjZUNhbnZhcyA9ZmFsc2U7XG4vLyAgICBjb25zb2xlLmVycm9yKFwiYXBpY2FudmFzPVwiK3RoaXMuX2FwaUNhbnZhcyk7XG4vLyAgICB0aGlzLl9hcGlDb250ZXh0ID0gdGhpcy5fYXBpQ2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcbi8vICAgIHRoaXMuX2FwaUNvbnRleHQuZm9udCA9IHRoaXMuX2ZvbnQ7XG5cbiAgICB0aGlzLl9zYXZlZEdsb2JhbEFscGhhID1bXTtcbiAgICB0aGlzLnRpbWVyID1udWxsO1xufVxuXG5cblxuZnVuY3Rpb24gRmlsbFN0eWxlUGF0dGVybihpbWcsIHBhdHRlcm4pIHtcbiAgICB0aGlzLl9zdHlsZSA9IHBhdHRlcm47XG4gICAgdGhpcy5faW1nID0gaW1nO1xufVxuXG5mdW5jdGlvbiBGaWxsU3R5bGVMaW5lYXJHcmFkaWVudCh4MCwgeTAsIHgxLCB5MSkge1xuICAgIHRoaXMuX3N0YXJ0X3BvcyA9IHsgX3ggOiB4MCwgX3kgOiB5MCB9O1xuICAgIHRoaXMuX2VuZF9wb3MgPSB7IF94IDogeDEsIF95IDogeTEgfTtcbiAgICB0aGlzLl9zdG9wX2NvdW50ID0gMDtcbiAgICB0aGlzLl9zdG9wcyA9IFswLCAwLCAwLCAwLCAwXTtcbn1cblxuRmlsbFN0eWxlTGluZWFyR3JhZGllbnQucHJvdG90eXBlLmFkZENvbG9yU3RvcCA9IGZ1bmN0aW9uKHBvcywgY29sb3IpIHtcbiAgICBpZiAodGhpcy5fc3RvcF9jb3VudCA8IDUgJiYgMC4wIDw9IHBvcyAmJiBwb3MgPD0gMS4wKSB7XG4gICAgICAgIHRoaXMuX3N0b3BzW3RoaXMuX3N0b3BfY291bnRdID0geyBfcG9zIDogcG9zLCBfY29sb3IgOiBjb2xvciB9O1xuICAgICAgICB0aGlzLl9zdG9wX2NvdW50Kys7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBGaWxsU3R5bGVSYWRpYWxHcmFkaWVudCh4MCwgeTAsIHIwLCB4MSwgeTEsIHIxKSB7XG4gICAgdGhpcy5fc3RhcnRfcG9zID0geyBfeCA6IHgwLCBfeSA6IHkwLCBfciA6IHIwIH07XG4gICAgdGhpcy5fZW5kX3BvcyA9IHsgX3ggOiB4MSwgX3kgOiB5MSwgX3IgOiByMSB9O1xuICAgIHRoaXMuX3N0b3BfY291bnQgPSAwO1xuICAgIHRoaXMuX3N0b3BzID0gWzAsIDAsIDAsIDAsIDBdO1xufVxuXG5GaWxsU3R5bGVSYWRpYWxHcmFkaWVudC5wcm90b3R5cGUuYWRkQ29sb3JTdG9wID0gZnVuY3Rpb24ocG9zLCBjb2xvcikge1xuICAgIGlmICh0aGlzLl9zdG9wX2NvdW50IDwgNSAmJiAwLjAgPD0gcG9zICYmIHBvcyA8PSAxLjApIHtcbiAgICAgICAgdGhpcy5fc3RvcHNbdGhpcy5fc3RvcF9jb3VudF0gPSB7IF9wb3MgOiBwb3MsIF9jb2xvciA6IGNvbG9yIH07XG4gICAgICAgIHRoaXMuX3N0b3BfY291bnQrKztcbiAgICB9XG59XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgYWxwaGEgdmFsdWUgdG8gYmUgdXNlZCB3aXRoIGRyYXdpbmcgY29tbWFuZHMgd2hlcmUgMSBpc1xuICogY29tcGxldGVseSB2aXNpYmxlIGFuZCAwIGlzIGZ1bGx5IHRyYW5zcGFyZW50LlxuICpcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAbmFtZSBHQ29udGV4dDJEI2dsb2JhbEFscGhhXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShHQ29udGV4dDJELnByb3RvdHlwZSwgXCJnbG9iYWxBbHBoYVwiLCB7XG4gICAgZ2V0IDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9nbG9iYWxBbHBoYTtcbiAgICB9LFxuICAgIHNldCA6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgIC8vIGlmICh0aGlzLl9nbG9iYWxBbHBoYSAhPSB2YWx1ZSkge1xuICAgICAgICB0aGlzLl9nbG9iYWxBbHBoYSA9IHZhbHVlO1xuICAgICAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwiYVwiICsgdmFsdWUudG9GaXhlZCg2KVxuICAgICAgICAgICAgICAgICsgXCI7XCIpO1xuICAgICAgICAvLyB9XG4gICAgfVxufSk7XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgY29sb3Igb3Igc3R5bGUgdG8gdXNlIGluc2lkZSBzaGFwZXMuIEl0IGNhbiBvbmx5IGJlIGFcbiAqIHN0cmluZyB3aGljaCBtdXN0IGJlIHBhcnNlZCBhcyBDU1MgPGNvbG9yPiB2YWx1ZSBmb3Igbm93LlxuICpcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKiBAbmFtZSBHQ29udGV4dDJEI2ZpbGxTdHlsZVxuICogQGV4YW1wbGUgLy8gc2V0IGNvbnRleHQgZmlsbFN0eWxlIGNvbnRleHQuZmlsbFN0eWxlID0gJ3JnYigxMjEsMTk0LDI0NSknO1xuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoR0NvbnRleHQyRC5wcm90b3R5cGUsIFwiZmlsbFN0eWxlXCIsIHtcbiAgICBnZXQgOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZpbGxTdHlsZTtcbiAgICB9LFxuICAgIHNldCA6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX2ZpbGxTdHlsZSA9IHZhbHVlO1xuXG4gICAgICAgIGlmICh0eXBlb2YodmFsdWUpID09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwiRlwiICsgdmFsdWUgKyBcIjtcIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBGaWxsU3R5bGVQYXR0ZXJuKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUuX2ltZyBpbnN0YW5jZW9mIEltYWdlKSB7XG4gICAgICAgICAgICAgICAgaWYgKCEodmFsdWUuX2ltZy5zcmMgaW4gdGhpcy5faW1hZ2VzKSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3X2ltYWdlID0gR0NhbnZhcy5jcmVhdGVJbWFnZSgpO1xuICAgICAgICAgICAgICAgICAgICBuZXdfaW1hZ2Uud2lkdGggPSB2YWx1ZS5faW1nLndpZHRoO1xuICAgICAgICAgICAgICAgICAgICBuZXdfaW1hZ2UuaGVpZ2h0ID0gdmFsdWUuX2ltZy5oZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIG5ld19pbWFnZS5zcmMgPSB2YWx1ZS5faW1nLnNyYztcbiAgICAgICAgICAgICAgICAgICAgbmV3X2ltYWdlLmNvbXBsZXRlID0gdmFsdWUuX2ltZy5jb21wbGV0ZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faW1hZ2VzW3ZhbHVlLl9pbWcuc3JjXSA9IG5ld19pbWFnZTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwiR1wiICsgdGhpcy5faW1hZ2VzW3ZhbHVlLl9pbWcuc3JjXS5faWQgKyBcIixcIiArIHZhbHVlLl9zdHlsZSArIFwiO1wiKTtcbiAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodmFsdWUuX2ltZyBpbnN0YW5jZW9mIEdDYW52YXNJbWFnZSl7XG4gICAgICAgICAgICAgICAgdGhpcy5fZHJhd0NvbW1hbmRzID0gdGhpcy5fZHJhd0NvbW1hbmRzLmNvbmNhdChcIkdcIiArIHZhbHVlLl9pbWcuX2lkICsgXCIsXCIgKyB2YWx1ZS5fc3R5bGUgKyBcIjtcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBGaWxsU3R5bGVMaW5lYXJHcmFkaWVudCkge1xuICAgICAgICAgICAgdmFyIGNvbW1hbmQgPSBcIkRcIiArIHZhbHVlLl9zdGFydF9wb3MuX3ggKyBcIixcIiArIHZhbHVlLl9zdGFydF9wb3MuX3kgKyBcIixcIlxuICAgICAgICAgICAgICAgICsgdmFsdWUuX2VuZF9wb3MuX3ggKyBcIixcIiArIHZhbHVlLl9lbmRfcG9zLl95ICsgXCIsXCIgKyB2YWx1ZS5fc3RvcF9jb3VudDtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWx1ZS5fc3RvcF9jb3VudDsgKytpKSB7XG4gICAgICAgICAgICAgICAgY29tbWFuZCArPSAoXCIsXCIgKyB2YWx1ZS5fc3RvcHNbaV0uX3BvcyArIFwiLFwiICsgdmFsdWUuX3N0b3BzW2ldLl9jb2xvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KGNvbW1hbmQgKyBcIjtcIik7XG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdjcmVhdGVMaW5lYXJHcmFkaWVudCBjb21tYW5kIC0+ICcgKyBjb21tYW5kKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEZpbGxTdHlsZVJhZGlhbEdyYWRpZW50KSB7XG4gICAgICAgICAgICB2YXIgY29tbWFuZCA9IFwiSFwiICsgdmFsdWUuX3N0YXJ0X3Bvcy5feCArIFwiLFwiICsgdmFsdWUuX3N0YXJ0X3Bvcy5feSArIFwiLFwiICsgdmFsdWUuX3N0YXJ0X3Bvcy5fciArIFwiLFwiXG4gICAgICAgICAgICAgICAgKyB2YWx1ZS5fZW5kX3Bvcy5feCArIFwiLFwiICsgdmFsdWUuX2VuZF9wb3MuX3kgKyBcIixcIiArIHZhbHVlLl9lbmRfcG9zLl9yICsgXCIsXCIgKyB2YWx1ZS5fc3RvcF9jb3VudDtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWx1ZS5fc3RvcF9jb3VudDsgKytpKSB7XG4gICAgICAgICAgICAgICAgY29tbWFuZCArPSAoXCIsXCIgKyB2YWx1ZS5fc3RvcHNbaV0uX3BvcyArIFwiLFwiICsgdmFsdWUuX3N0b3BzW2ldLl9jb2xvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KGNvbW1hbmQgKyBcIjtcIik7XG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdGaWxsU3R5bGVSYWRpYWxHcmFkaWVudCBjb21tYW5kIC0+ICcgKyBjb21tYW5kKTtcbiAgICAgICAgfVxuICAgIH1cbn0pO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGNvbG9yIG9yIHN0eWxlIGZvciB0aGUgbGluZXMuIEl0IGNhbiBvbmx5IGJlIGEgc3RyaW5nXG4gKiB3aGljaCBtdXN0IGJlIHBhcnNlZCBhcyBDU1MgPGNvbG9yPiB2YWx1ZSBmb3Igbm93LlxuICpcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKiBAbmFtZSBHQ29udGV4dDJEI3N0cm9rZVN0eWxlXG4gKiBAZXhhbXBsZSAvLyBzZXQgY29udGV4dCBzdHJva2VTdHlsZSBjb250ZXh0LnN0cm9rZVN0eWxlID0gJ3JnYigxMjEsMTk0LDI0NSknO1xuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoR0NvbnRleHQyRC5wcm90b3R5cGUsIFwic3Ryb2tlU3R5bGVcIiwge1xuICAgIGdldCA6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc3Ryb2tlU3R5bGU7XG4gICAgfSxcbiAgICBzZXQgOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICB0aGlzLl9zdHJva2VTdHlsZSA9IHZhbHVlO1xuXG4gICAgICAgIGlmICh0eXBlb2YodmFsdWUpID09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwiU1wiICsgdmFsdWUgKyBcIjtcIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBGaWxsU3R5bGVQYXR0ZXJuKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUuX2ltZyBpbnN0YW5jZW9mIEltYWdlKSB7XG4gICAgICAgICAgICAgICAgaWYgKCEodmFsdWUuX2ltZy5zcmMgaW4gdGhpcy5faW1hZ2VzKSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3X2ltYWdlID0gR0NhbnZhcy5jcmVhdGVJbWFnZSgpO1xuICAgICAgICAgICAgICAgICAgICBuZXdfaW1hZ2Uud2lkdGggPSB2YWx1ZS5faW1nLndpZHRoO1xuICAgICAgICAgICAgICAgICAgICBuZXdfaW1hZ2UuaGVpZ2h0ID0gdmFsdWUuX2ltZy5oZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIG5ld19pbWFnZS5zcmMgPSB2YWx1ZS5faW1nLnNyYztcbiAgICAgICAgICAgICAgICAgICAgbmV3X2ltYWdlLmNvbXBsZXRlID0gdmFsdWUuX2ltZy5jb21wbGV0ZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faW1hZ2VzW3ZhbHVlLl9pbWcuc3JjXSA9IG5ld19pbWFnZTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwiR1wiICsgdGhpcy5faW1hZ2VzW3ZhbHVlLl9pbWcuc3JjXS5faWQgKyBcIixcIiArIHZhbHVlLl9zdHlsZSArIFwiO1wiKTtcbiAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodmFsdWUuX2ltZyBpbnN0YW5jZW9mIEdDYW52YXNJbWFnZSl7XG4gICAgICAgICAgICAgICAgdGhpcy5fZHJhd0NvbW1hbmRzID0gdGhpcy5fZHJhd0NvbW1hbmRzLmNvbmNhdChcIkdcIiArIHZhbHVlLl9pbWcuX2lkICsgXCIsXCIgKyB2YWx1ZS5fc3R5bGUgKyBcIjtcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBGaWxsU3R5bGVMaW5lYXJHcmFkaWVudCkge1xuICAgICAgICAgICAgdmFyIGNvbW1hbmQgPSBcIkRcIiArIHZhbHVlLl9zdGFydF9wb3MuX3ggKyBcIixcIiArIHZhbHVlLl9zdGFydF9wb3MuX3kgKyBcIixcIlxuICAgICAgICAgICAgICAgICsgdmFsdWUuX2VuZF9wb3MuX3ggKyBcIixcIiArIHZhbHVlLl9lbmRfcG9zLl95ICsgXCIsXCIgKyB2YWx1ZS5fc3RvcF9jb3VudDtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWx1ZS5fc3RvcF9jb3VudDsgKytpKSB7XG4gICAgICAgICAgICAgICAgY29tbWFuZCArPSAoXCIsXCIgKyB2YWx1ZS5fc3RvcHNbaV0uX3BvcyArIFwiLFwiICsgdmFsdWUuX3N0b3BzW2ldLl9jb2xvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KGNvbW1hbmQgKyBcIjtcIik7XG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdjcmVhdGVMaW5lYXJHcmFkaWVudCBjb21tYW5kIC0+ICcgKyBjb21tYW5kKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEZpbGxTdHlsZVJhZGlhbEdyYWRpZW50KSB7XG4gICAgICAgICAgICB2YXIgY29tbWFuZCA9IFwiSFwiICsgdmFsdWUuX3N0YXJ0X3Bvcy5feCArIFwiLFwiICsgdmFsdWUuX3N0YXJ0X3Bvcy5feSArIFwiLFwiICsgdmFsdWUuX3N0YXJ0X3Bvcy5fciArIFwiLFwiXG4gICAgICAgICAgICAgICAgKyB2YWx1ZS5fZW5kX3Bvcy5feCArIFwiLFwiICsgdmFsdWUuX2VuZF9wb3MuX3kgKyBcIixcIiArIHZhbHVlLl9lbmRfcG9zLl9yICsgXCIsXCIgKyB2YWx1ZS5fc3RvcF9jb3VudDtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWx1ZS5fc3RvcF9jb3VudDsgKytpKSB7XG4gICAgICAgICAgICAgICAgY29tbWFuZCArPSAoXCIsXCIgKyB2YWx1ZS5fc3RvcHNbaV0uX3BvcyArIFwiLFwiICsgdmFsdWUuX3N0b3BzW2ldLl9jb2xvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KGNvbW1hbmQgKyBcIjtcIik7XG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdGaWxsU3R5bGVSYWRpYWxHcmFkaWVudCBjb21tYW5kIC0+ICcgKyBjb21tYW5kKTtcbiAgICAgICAgfVxuICAgIH1cbn0pO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIHdpZHRoIG9mIHRoZSBsaW5lcy5cbiAqXG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQG5hbWUgR0NvbnRleHQyRCNsaW5lV2lkdGhcbiAqIEBleGFtcGxlIC8vIHNldCBjb250ZXh0IGxpbmVXaWR0aCBjb250ZXh0LmxpbmVXaWR0aCA9IDI7XG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShHQ29udGV4dDJELnByb3RvdHlwZSwgXCJsaW5lV2lkdGhcIiwge1xuICAgIGdldCA6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbGluZVdpZHRoO1xuICAgIH0sXG4gICAgc2V0IDogZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgdGhpcy5fbGluZVdpZHRoID0gdmFsdWU7XG4gICAgICAgIHRoaXMuX2RyYXdDb21tYW5kcyA9IHRoaXMuX2RyYXdDb21tYW5kcy5jb25jYXQoXCJXXCIgKyB2YWx1ZVxuICAgICAgICAgICAgICAgICsgXCI7XCIpO1xuICAgIH1cbn0pO1xuLyoqXG4gKiBUaGUgbGluZUNhcCBwcm9wZXJ0eSBzZXRzIG9yIHJldHVybnMgdGhlIHN0eWxlIG9mIHRoZSBlbmQgY2FwcyBmb3IgYSBsaW5lLlxuICpcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAbmFtZSBHQ29udGV4dDJEI2xpbmVDYXBcbiAqIEBleGFtcGxlIC8vIHNldCBjb250ZXh0IGxpbmVDYXAgY29udGV4dC5saW5lQ2FwPVwicm91bmRcIjtcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KEdDb250ZXh0MkQucHJvdG90eXBlLCBcImxpbmVDYXBcIiwge1xuICAgIGdldCA6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbGluZUNhcDtcbiAgICB9LFxuICAgIHNldCA6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX2xpbmVDYXAgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5fZHJhd0NvbW1hbmRzID0gdGhpcy5fZHJhd0NvbW1hbmRzLmNvbmNhdChcIkNcIiArIHZhbHVlICsgXCI7XCIpO1xuICAgIH1cbn0pO1xuXG5cbi8qKlxuICogU2V0cyBvciByZXR1cm5zIHRoZSB0eXBlIG9mIGNvcm5lciBjcmVhdGVkLCB3aGVuIHR3byBsaW5lcyBtZWV0XG4gKlxuICogQHR5cGUge251bWJlcn1cbiAqIEBuYW1lIEdDb250ZXh0MkQjbGluZUpvaW5cbiAqIEBleGFtcGxlIC8vIHNldCBjb250ZXh0IGxpbmVKb2luIGNvbnRleHQubGluZUpvaW49XCJyb3VuZFwiO1xuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoR0NvbnRleHQyRC5wcm90b3R5cGUsIFwibGluZUpvaW5cIiwge1xuICAgIGdldCA6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbGluZUpvaW47XG4gICAgfSxcbiAgICBzZXQgOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICB0aGlzLl9saW5lSm9pbiA9IHZhbHVlO1xuICAgICAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwiSlwiICsgdmFsdWUgKyBcIjtcIik7XG4gICAgfVxufSk7XG5cblxuLyoqXG4gKiBTZXRzIG9yIHJldHVybnMgdGhlIG1heGltdW0gbWl0ZXIgbGVuZ3RoXG4gKlxuICogQHR5cGUge251bWJlcn1cbiAqIEBuYW1lIEdDb250ZXh0MkQjbWl0ZXJMaW1pdFxuICogQGV4YW1wbGUgLy8gc2V0IGNvbnRleHQgbWl0ZXJMaW1pdCBjb250ZXh0Lm1pdGVyTGltaXQ9MTA7XG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShHQ29udGV4dDJELnByb3RvdHlwZSwgXCJtaXRlckxpbWl0XCIsIHtcbiAgICBnZXQgOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX21pdGVyTGltaXQ7XG4gICAgfSxcbiAgICBzZXQgOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICB0aGlzLl9taXRlckxpbWl0ID0gdmFsdWU7XG4gICAgICAgIHRoaXMuX2RyYXdDb21tYW5kcyA9IHRoaXMuX2RyYXdDb21tYW5kcy5jb25jYXQoXCJNXCIgKyB2YWx1ZSArIFwiO1wiKTtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBnbG9iYWxDb21wb3NpdGVPcGVyYXRpb24gdmFsdWUgdG8gYmUgdXNlZCB3aXRoIGRyYXdpbmdcbiAqIGNvbW1hbmRzIHdoZXJlIDEgaXMgY29tcGxldGVseSB2aXNpYmxlIGFuZCAwIGlzIGZ1bGx5IHRyYW5zcGFyZW50LlxuICpcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAbmFtZSBHQ29udGV4dDJEI2dsb2JhbENvbXBvc2l0ZU9wZXJhdGlvblxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoR0NvbnRleHQyRC5wcm90b3R5cGUsIFwiZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uXCIsIHtcbiAgICBnZXQgOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbjtcbiAgICB9LFxuXG4gICAgc2V0IDogZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgLy8gaWYgKHRoaXMuX2dsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiAhPSB2YWx1ZSkge1xuXG4gICAgICAgIHRoaXMuX2dsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiA9IHZhbHVlO1xuICAgICAgICB2YXIgbW9kZSA9IDA7XG4gICAgICAgIHN3aXRjaCAodmFsdWUpIHtcbiAgICAgICAgY2FzZSBcInNvdXJjZS1vdmVyXCI6XG4gICAgICAgICAgICBtb2RlID0gMDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwic291cmNlLWF0b3BcIjpcbiAgICAgICAgICAgIG1vZGUgPSA1O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJzb3VyY2UtaW5cIjpcbiAgICAgICAgICAgIG1vZGUgPSAwO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJzb3VyY2Utb3V0XCI6XG4gICAgICAgICAgICBtb2RlID0gMjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiZGVzdGluYXRpb24tb3ZlclwiOlxuICAgICAgICAgICAgbW9kZSA9IDQ7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImRlc3RpbmF0aW9uLWF0b3BcIjpcbiAgICAgICAgICAgIG1vZGUgPSA0O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJkZXN0aW5hdGlvbi1pblwiOlxuICAgICAgICAgICAgbW9kZSA9IDQ7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImRlc3RpbmF0aW9uLW91dFwiOlxuICAgICAgICAgICAgbW9kZSA9IDM7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImxpZ2h0ZXJcIjpcbiAgICAgICAgICAgIG1vZGUgPSAxO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJjb3B5XCI6XG4gICAgICAgICAgICBtb2RlID0gMjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwieG9yXCI6XG4gICAgICAgICAgICBtb2RlID0gNjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgbW9kZSA9IDA7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwiQlwiICsgbW9kZSArIFwiO1wiKTtcbiAgICAgICAgLy8gfVxuICAgIH1cbn0pO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIHRleHRBbGlnbiB2YWx1ZSB0byBiZSB1c2VkIHdpdGggZHJhd2luZyBjb21tYW5kc1xuICpcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAbmFtZSBHQ29udGV4dDJEI3RleHRBbGlnblxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoR0NvbnRleHQyRC5wcm90b3R5cGUsIFwidGV4dEFsaWduXCIsIHtcbiAgICBnZXQgOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RleHRBbGlnbjtcbiAgICB9LFxuXG4gICAgc2V0IDogZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgLy8gaWYgKHRoaXMuX3RleHRBbGlnbiAhPSB2YWx1ZSkge1xuICAgICAgICB0aGlzLl90ZXh0QWxpZ24gPSB2YWx1ZTtcbiAgICAgICAgdmFyIEFsaWduID0gMDtcbiAgICAgICAgc3dpdGNoICh2YWx1ZSkge1xuICAgICAgICBjYXNlIFwic3RhcnRcIjpcbiAgICAgICAgICAgIEFsaWduID0gMDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgICBBbGlnbiA9IDE7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImxlZnRcIjpcbiAgICAgICAgICAgIEFsaWduID0gMjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiY2VudGVyXCI6XG4gICAgICAgICAgICBBbGlnbiA9IDM7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInJpZ2h0XCI6XG4gICAgICAgICAgICBBbGlnbiA9IDQ7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIEFsaWduID0gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2RyYXdDb21tYW5kcyA9IHRoaXMuX2RyYXdDb21tYW5kcy5jb25jYXQoXCJBXCIgKyBBbGlnbiArIFwiO1wiKTtcbiAgICAgICAgLy8gfVxuICAgIH1cblxufSk7XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgX3RleHRCYXNlbGluZSB2YWx1ZSB0byBiZSB1c2VkIHdpdGggZHJhd2luZyBjb21tYW5kc1xuICpcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAbmFtZSBHQ29udGV4dDJEI190ZXh0QmFzZWxpbmVcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KEdDb250ZXh0MkQucHJvdG90eXBlLCBcInRleHRCYXNlbGluZVwiLCB7XG4gICAgZ2V0IDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl90ZXh0QmFzZWxpbmU7XG4gICAgfSxcblxuICAgIHNldCA6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX3RleHRCYXNlbGluZSA9IHZhbHVlO1xuICAgICAgICB2YXIgYmFzZWxpbmUgPSAwO1xuICAgICAgICBzd2l0Y2ggKHZhbHVlKSB7XG4gICAgICAgIGNhc2UgXCJhbHBoYWJldGljXCI6XG4gICAgICAgICAgICBiYXNlbGluZSA9IDA7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcIm1pZGRsZVwiOlxuICAgICAgICAgICAgYmFzZWxpbmUgPSAxO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJ0b3BcIjpcbiAgICAgICAgICAgIGJhc2VsaW5lID0gMjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiaGFuZ2luZ1wiOlxuICAgICAgICAgICAgYmFzZWxpbmUgPSAzO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJib3R0b21cIjpcbiAgICAgICAgICAgIGJhc2VsaW5lID0gNDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiaWRlb2dyYXBoaWNcIjpcbiAgICAgICAgICAgIGJhc2VsaW5lID0gNTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgYmFzZWxpbmUgPSAwO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwiRVwiICsgYmFzZWxpbmUgKyBcIjtcIik7XG4gICAgfVxuXG59KTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSB0ZXh0QWxpZ24gdmFsdWUgdG8gYmUgdXNlZCB3aXRoIGRyYXdpbmcgY29tbWFuZHNcbiAqXG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQG5hbWUgR0NvbnRleHQyRCN0ZXh0QWxpZ25cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KEdDb250ZXh0MkQucHJvdG90eXBlLCBcImZvbnRcIiwge1xuICAgIGdldCA6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZm9udDtcbiAgICB9LFxuICAgIHNldCA6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgIC8vIGlmICh0aGlzLl9mb250ICE9IHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX2ZvbnQgPSB2YWx1ZTtcbiAgICAgICAgLy90aGlzLl9hcGlDb250ZXh0LmZvbnQgPSB0aGlzLl9mb250O1xuICAgICAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwialwiICsgdmFsdWUgKyBcIjtcIik7XG4gICAgICAgIC8vIH1cbiAgICB9XG5cbn0pO1xuXG4vKipcbiAqIExvYWRzIGFuIGltYWdlIGludG8gdGhlIHBsdWdpbiB0byBiZSB1c2VkIGFzIGEgdGV4dHVyZSBpbiB0aGUgR0NhbnZhcy5cbiAqIEdlbmVyYWxseSB0aGlzIG1ldGhvZCBpcyBuZXZlciBjYWxsZWQgZGlyZWN0bHkuIEluc3RlYWQsIGl0IGlzIGNhbGxlZFxuICogaW5kaXJlY3RseSB0aHJvdWdoIEdDYW52YXNJbWFnZSBpbnN0YW5jZXMgdXBvbiBzZXR0aW5nIHRoZWlyXG4gKiB7QGxpbmsgR0NhbnZhc0ltYWdlI3NyY3xHQ2FudmFzSW1hZ2Uuc3JjfSBwcm9wZXJ0eS5cbiAqXG4gKiBAcGFyYW0ge0dDYW52YXNJbWFnZX1cbiAqICAgICAgICAgICAgaW1hZ2UgVGhlIGltYWdlIHRvIGJlIGxvYWRlZCBpbnRvIHRoZSBHQ2FudmFzIHBsdWdpbi5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259XG4gKiAgICAgICAgICAgIFtzdWNjZXNzQ2FsbGJhY2tdIEEgY2FsbGJhY2sgdGhhdCBpcyBmaXJlZCB3aGVuIHRoZSBpbWFnZSBoYXNcbiAqICAgICAgICAgICAgYmVlbiBzdWNjZXNzZnVsbHkgbG9hZGVkLlxuICogQHBhcmFtIHtmdW5jdGlvbn1cbiAqICAgICAgICAgICAgW2Vycm9yQ2FsbGJhY2tdIEEgY2FsbGJhY2sgdGhhdCBpcyBmaXJlZCB3aGVuIHRoZXJlIHdhcyBhblxuICogICAgICAgICAgICBlcnJvciBpbiBsb2FkaW5nIHRoZSBpbWFnZS5cbiAqIEBleGFtcGxlIC8vIGNyZWF0ZSBhIG5ldyBpbWFnZSBhbmQgbG9hZCAvLyBpdCBmcm9tIGEgcmVsYXRpdmUgVVJMIHBhdGhcbiAqICAgICAgICAgIHZhciBteUltYWdlID0gR0NhbnZhcy5jcmVhdGVJbWFnZSgpOyBteUltYWdlLnNyYyA9XG4gKiAgICAgICAgICBcImltYWdlcy9zcHJpdGVzaGVldC5qcGdcIjsgLy8gY2FsbHMgbG9hZFRleHR1cmUgZm9yIHlvdVxuICogQHByaXZhdGVcbiAqL1xuR0NvbnRleHQyRC5wcm90b3R5cGUubG9hZFRleHR1cmUgPSBmdW5jdGlvbihpbWFnZSwgc3VjY2Vzc0NhbGxiYWNrLCBlcnJvckNhbGxiYWNrKSB7XG4gICAgLy8gaWYgKHN1Y2Nlc3NDYWxsYmFjayAmJiB0eXBlb2Ygc3VjY2Vzc0NhbGxiYWNrICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgLy8gICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAvLyAgICAgICAgICAgICAnR0NvbnRleHQyRC5sb2FkVGV4dHVyZSBmYWlsdXJlOiBzdWNjZXNzQ2FsbGJhY2sgcGFyYW1ldGVyIG5vdCBhIGZ1bmN0aW9uJyk7XG4gICAgLy8gfVxuICAgIC8vIGlmIChlcnJvckNhbGxiYWNrICYmIHR5cGVvZiBlcnJvckNhbGxiYWNrICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgLy8gICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAvLyAgICAgICAgICAgICAnR0NvbnRleHQyRC5sb2FkVGV4dHVyZSBmYWlsdXJlOiBlcnJvckNhbGxiYWNrIHBhcmFtZXRlciBub3QgYSBmdW5jdGlvbicpO1xuICAgIC8vIH1cblxuICAgIC8vIEdDYW52YXMuX3RvTmF0aXZlKHN1Y2Nlc3NDYWxsYmFjaywgZXJyb3JDYWxsYmFjaywgJ0dDYW52YXMnLFxuICAgIC8vICAgICAgICAgJ2xvYWRUZXh0dXJlJywgWyBpbWFnZS5zcmMsIGltYWdlLl9pZCBdKTtcbn07XG5cbi8qKlxuICogVW5sb2FkcyBhbiBpbWFnZSBmcm9tIHRoZSBHQ2FudmFzIHBsdWdpbi4gR2VuZXJhbGx5IHRoaXMgbWV0aG9kIGlzXG4gKiBuZXZlciBjYWxsZWQgZGlyZWN0bHkuIEluc3RlYWQsIGl0IGlzIGNhbGxlZCBpbmRpcmVjdGx5IHRocm91Z2hcbiAqIEdDYW52YXNJbWFnZSBpbnN0YW5jZXMgdXBvbiBzZXR0aW5nIHRoZWlyXG4gKiB7QGxpbmsgR0NhbnZhc0ltYWdlI3NyY3xHQ2FudmFzSW1hZ2Uuc3JjfSBwcm9wZXJ0eSB0byBhIGZhbHNlIHZhbHVlXG4gKiBzdWNoIGFzIDxjb2RlPm51bGw8L2NvZGU+IG9yIGFuIGVtcHR5IHN0cmluZyAoPGNvZGU+XCJcIjwvY29kZT4pLlxuICpcbiAqIEBwYXJhbSB7R0NhbnZhc0ltYWdlfVxuICogICAgICAgICAgICBpbWFnZSBUaGUgaW1hZ2UgdG8gYmUgdW5sb2FkZWQgZnJvbSB0aGUgR0NhbnZhcyBwbHVnaW4uXG4gKiBAZXhhbXBsZSAvLyB1bmxvYWQgYW4gaW1hZ2UgZnJvbSBtZW1vcnkgbXlJbWFnZS5zcmMgPSBudWxsOyAvLyBjYWxsc1xuICogICAgICAgICAgdW5sb2FkVGV4dHVyZSBmb3IgeW91XG4gKiBAcHJpdmF0ZVxuICovXG5HQ29udGV4dDJELnByb3RvdHlwZS51bmxvYWRUZXh0dXJlID0gZnVuY3Rpb24oaW1hZ2UpIHtcbiAgICAvLyBHQ2FudmFzLl90b05hdGl2ZShudWxsLCBudWxsLCAnR0NhbnZhcycsICd1bmxvYWRUZXh0dXJlJyxcbiAgICAvLyAgICAgICAgIFsgaW1hZ2UuX2lkIF0pO1xufTtcblxuLyoqXG4gKiBEZWZpbmVzIHRoZSAyRCBtYXRyaXggdHJhbnNmb3JtIGFwcGxpZWQgdG8gZHJhd2luZ3Mgd2l0aGluIHRoZSBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfVxuICogICAgICAgICAgICBhIFRoZSB2YWx1ZSB0aGF0IGFmZmVjdHMgdGhlIHBvc2l0aW9uaW5nIG9mIHBpeGVscyBhbG9uZyB0aGUgeFxuICogICAgICAgICAgICBheGlzIHdoZW4gc2NhbGluZyBvciByb3RhdGluZyB0aGUgY29udGV4dC5cbiAqIEBwYXJhbSB7bnVtYmVyfVxuICogICAgICAgICAgICBiIFRoZSB2YWx1ZSB0aGF0IGFmZmVjdHMgdGhlIHBvc2l0aW9uaW5nIG9mIHBpeGVscyBhbG9uZyB0aGUgeVxuICogICAgICAgICAgICBheGlzIHdoZW4gcm90YXRpbmcgb3Igc2tld2luZyB0aGUgY29udGV4dC5cbiAqIEBwYXJhbSB7bnVtYmVyfVxuICogICAgICAgICAgICBjIFRoZSB2YWx1ZSB0aGF0IGFmZmVjdHMgdGhlIHBvc2l0aW9uaW5nIG9mIHBpeGVscyBhbG9uZyB0aGUgeFxuICogICAgICAgICAgICBheGlzIHdoZW4gcm90YXRpbmcgb3Igc2tld2luZyB0aGUgY29udGV4dC5cbiAqIEBwYXJhbSB7bnVtYmVyfVxuICogICAgICAgICAgICBkIFRoZSB2YWx1ZSB0aGF0IGFmZmVjdHMgdGhlIHBvc2l0aW9uaW5nIG9mIHBpeGVscyBhbG9uZyB0aGUgeVxuICogICAgICAgICAgICBheGlzIHdoZW4gc2NhbGluZyBvciByb3RhdGluZyB0aGUgY29udGV4dC5cbiAqIEBwYXJhbSB7bnVtYmVyfVxuICogICAgICAgICAgICB0eCBUaGUgZGlzdGFuY2UgYnkgd2hpY2ggdG8gdHJhbnNsYXRlIHRoZSBjb250ZXh0IGFsb25nIHRoZSB4XG4gKiAgICAgICAgICAgIGF4aXMuXG4gKiBAcGFyYW0ge251bWJlcn1cbiAqICAgICAgICAgICAgdHkgVGhlIGRpc3RhbmNlIGJ5IHdoaWNoIHRvIHRyYW5zbGF0ZSB0aGUgY29udGV4dCBhbG9uZyB0aGUgeVxuICogICAgICAgICAgICBheGlzLlxuICovXG5HQ29udGV4dDJELnByb3RvdHlwZS5zZXRUcmFuc2Zvcm0gPSBmdW5jdGlvbihhLCBiLCBjLCBkLCB0eCwgdHkpIHtcbiAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwidFwiXG4gICAgICAgICAgICArIChhID09PSAxID8gXCIxXCIgOiBhLnRvRml4ZWQoNikpICsgXCIsXCJcbiAgICAgICAgICAgICsgKGIgPT09IDAgPyBcIjBcIiA6IGIudG9GaXhlZCg2KSkgKyBcIixcIlxuICAgICAgICAgICAgKyAoYyA9PT0gMCA/IFwiMFwiIDogYy50b0ZpeGVkKDYpKSArIFwiLFwiXG4gICAgICAgICAgICArIChkID09PSAxID8gXCIxXCIgOiBkLnRvRml4ZWQoNikpICsgXCIsXCIgKyB0eCArIFwiLFwiICsgdHkgKyBcIjtcIik7XG59O1xuXG4vKipcbiAqIERlZmluZXMgYW4gYWRkZWQgMkQgbWF0cml4IHRyYW5zZm9ybSBhcHBsaWVkIHRvIGRyYXdpbmdzIHdpdGhpbiB0aGVcbiAqIGNvbnRleHQuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9XG4gKiAgICAgICAgICAgIGEgVGhlIHZhbHVlIGFkZGVkIHRvIHRoZSB2YWx1ZSB0aGF0IGFmZmVjdHMgdGhlIHBvc2l0aW9uaW5nIG9mXG4gKiAgICAgICAgICAgIHBpeGVscyBhbG9uZyB0aGUgeCBheGlzIHdoZW4gc2NhbGluZyBvciByb3RhdGluZyB0aGUgY29udGV4dC5cbiAqIEBwYXJhbSB7bnVtYmVyfVxuICogICAgICAgICAgICBiIFRoZSB2YWx1ZSBhZGRlZCB0byB0aGUgdmFsdWUgdGhhdCBhZmZlY3RzIHRoZSBwb3NpdGlvbmluZyBvZlxuICogICAgICAgICAgICBwaXhlbHMgYWxvbmcgdGhlIHkgYXhpcyB3aGVuIHJvdGF0aW5nIG9yIHNrZXdpbmcgdGhlIGNvbnRleHQuXG4gKiBAcGFyYW0ge251bWJlcn1cbiAqICAgICAgICAgICAgYyBUaGUgdmFsdWUgYWRkZWQgdG8gdGhlIHZhbHVlIHRoYXQgYWZmZWN0cyB0aGUgcG9zaXRpb25pbmcgb2ZcbiAqICAgICAgICAgICAgcGl4ZWxzIGFsb25nIHRoZSB4IGF4aXMgd2hlbiByb3RhdGluZyBvciBza2V3aW5nIHRoZSBjb250ZXh0LlxuICogQHBhcmFtIHtudW1iZXJ9XG4gKiAgICAgICAgICAgIGQgVGhlIHZhbHVlIGFkZGVkIHRvIHRoZSB2YWx1ZSB0aGF0IGFmZmVjdHMgdGhlIHBvc2l0aW9uaW5nIG9mXG4gKiAgICAgICAgICAgIHBpeGVscyBhbG9uZyB0aGUgeSBheGlzIHdoZW4gc2NhbGluZyBvciByb3RhdGluZyB0aGUgY29udGV4dC5cbiAqIEBwYXJhbSB7bnVtYmVyfVxuICogICAgICAgICAgICB0eCBUaGUgdmFsdWUgYWRkZWQgdG8gdGhlIGRpc3RhbmNlIGJ5IHdoaWNoIHRvIHRyYW5zbGF0ZSB0aGVcbiAqICAgICAgICAgICAgY29udGV4dCBhbG9uZyB0aGUgeCBheGlzLlxuICogQHBhcmFtIHtudW1iZXJ9XG4gKiAgICAgICAgICAgIHR5IFRoZSB2YWx1ZSBhZGRlZCB0byB0aGUgZGlzdGFuY2UgYnkgd2hpY2ggdG8gdHJhbnNsYXRlIHRoZVxuICogICAgICAgICAgICBjb250ZXh0IGFsb25nIHRoZSB5IGF4aXMuXG4gKi9cbkdDb250ZXh0MkQucHJvdG90eXBlLnRyYW5zZm9ybSA9IGZ1bmN0aW9uKGEsIGIsIGMsIGQsIHR4LCB0eSkge1xuICAgIHRoaXMuX2RyYXdDb21tYW5kcyA9IHRoaXMuX2RyYXdDb21tYW5kcy5jb25jYXQoXCJmXCJcbiAgICAgICAgICAgICsgKGEgPT09IDEgPyBcIjFcIiA6IGEudG9GaXhlZCg2KSkgKyBcIixcIlxuICAgICAgICAgICAgKyAoYiA9PT0gMCA/IFwiMFwiIDogYi50b0ZpeGVkKDYpKSArIFwiLFwiXG4gICAgICAgICAgICArIChjID09PSAwID8gXCIwXCIgOiBjLnRvRml4ZWQoNikpICsgXCIsXCJcbiAgICAgICAgICAgICsgKGQgPT09IDEgPyBcIjFcIiA6IGQudG9GaXhlZCg2KSkgKyBcIixcIiArIHR4ICsgXCIsXCIgKyB0eSArIFwiO1wiKTtcbn07XG5cbi8qKlxuICogUmVzdG9yZXMgdGhlIDJEIG1hdHJpeCB0cmFuc2Zvcm0gdG8gdGhlIGlkZW50aXR5IG1hdHJpeC4gVGhpcyBpc1xuICogZXF1aXZhbGVudCB0byBjYWxsaW5nIDxjb2RlPmNvbnRleHQuc2V0VHJhbnNmb3JtKDEsMCwwLDEsMCwwKTwvY29kZT4uXG4gKi9cbkdDb250ZXh0MkQucHJvdG90eXBlLnJlc2V0VHJhbnNmb3JtID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fZHJhd0NvbW1hbmRzID0gdGhpcy5fZHJhd0NvbW1hbmRzLmNvbmNhdChcIm07XCIpO1xufTtcblxuLyoqXG4gKiBTY2FsZXMgdGhlIDJEIG1hdHJpeCB0cmFuc2Zvcm0gYWxvbmcgdGhlIHggYW5kIHkgYXhlcy5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn1cbiAqICAgICAgICAgICAgYSBUaGUgdmFsdWUgYWRkZWQgdG8gdGhlIHZhbHVlIHRoYXQgYWZmZWN0cyB0aGUgcG9zaXRpb25pbmcgb2ZcbiAqICAgICAgICAgICAgcGl4ZWxzIGFsb25nIHRoZSB4IGF4aXMgd2hlbiBzY2FsaW5nIG9yIHJvdGF0aW5nIHRoZSBjb250ZXh0LlxuICogQHBhcmFtIHtudW1iZXJ9XG4gKiAgICAgICAgICAgIGQgVGhlIHZhbHVlIGFkZGVkIHRvIHRoZSB2YWx1ZSB0aGF0IGFmZmVjdHMgdGhlIHBvc2l0aW9uaW5nIG9mXG4gKiAgICAgICAgICAgIHBpeGVscyBhbG9uZyB0aGUgeSBheGlzIHdoZW4gc2NhbGluZyBvciByb3RhdGluZyB0aGUgY29udGV4dC5cbiAqL1xuR0NvbnRleHQyRC5wcm90b3R5cGUuc2NhbGUgPSBmdW5jdGlvbihhLCBkKSB7XG4gICAgdGhpcy5fZHJhd0NvbW1hbmRzID0gdGhpcy5fZHJhd0NvbW1hbmRzLmNvbmNhdChcImtcIiArIGEudG9GaXhlZCg2KSArIFwiLFwiXG4gICAgICAgICAgICArIGQudG9GaXhlZCg2KSArIFwiO1wiKTtcbn07XG5cbi8qKlxuICogUm90YXRlcyB0aGUgMkQgbWF0cml4IHRyYW5zZm9ybSBieSBhIHNwZWNpZmllZCBudW1iZXIgb2YgcmFkaWFucy5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn1cbiAqICAgICAgICAgICAgYW5nbGUgVGhlIHZhbHVlIGluIHJhZGlhbnMgdG8gcm90YXRlIHRoZSBjb250ZXh0LlxuICovXG5HQ29udGV4dDJELnByb3RvdHlwZS5yb3RhdGUgPSBmdW5jdGlvbihhbmdsZSkge1xuICAgIHRoaXMuX2RyYXdDb21tYW5kcyA9IHRoaXMuX2RyYXdDb21tYW5kc1xuICAgICAgICAgICAgLmNvbmNhdChcInJcIiArIGFuZ2xlLnRvRml4ZWQoNikgKyBcIjtcIik7XG59O1xuXG4vKipcbiAqIE1vdmVzIHRoZSAyRCBtYXRyaXggdHJhbnNmb3JtIGFsb25nIHRoZSB4IGFuZCB5IGF4ZXMuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9XG4gKiAgICAgICAgICAgIHR4IFRoZSB2YWx1ZSBhZGRlZCB0byB0aGUgZGlzdGFuY2UgYnkgd2hpY2ggdG8gdHJhbnNsYXRlIHRoZVxuICogICAgICAgICAgICBjb250ZXh0IGFsb25nIHRoZSB4IGF4aXMuXG4gKiBAcGFyYW0ge251bWJlcn1cbiAqICAgICAgICAgICAgdHkgVGhlIHZhbHVlIGFkZGVkIHRvIHRoZSBkaXN0YW5jZSBieSB3aGljaCB0byB0cmFuc2xhdGUgdGhlXG4gKiAgICAgICAgICAgIGNvbnRleHQgYWxvbmcgdGhlIHkgYXhpcy5cbiAqL1xuR0NvbnRleHQyRC5wcm90b3R5cGUudHJhbnNsYXRlID0gZnVuY3Rpb24odHgsIHR5KSB7XG4gICAgdGhpcy5fZHJhd0NvbW1hbmRzID0gdGhpcy5fZHJhd0NvbW1hbmRzLmNvbmNhdChcImxcIiArIHR4ICsgXCIsXCIgKyB0eSArIFwiO1wiKTtcbn07XG5cbi8qKlxuICogU2V0cyBhIHNhdmUgcG9pbnQgZm9yIHRoZSBjdXJyZW50IGNvbnRleHQgdHJhbnNmb3JtLiBUaGlzIGFsbG93cyB5b3UgdG9cbiAqIGFyYml0cmFyaWx5IG1vZGlmeSB0aGUgdHJhbnNmb3JtIGFuZCByZXN0b3JlIGl0IGJhY2sgdG8gaXRzIHRvIGl0c1xuICogb3JpZ2luYWwgc3RhdGUgYXQgdGhlIHRpbWUgc2F2ZSgpIHdhcyBjYWxsZWQgYnkgdXNpbmcgcmVzdG9yZSgpLlxuICpcbiAqIEBzZWUgR0NvbnRleHQyRCNyZXN0b3JlXG4gKi9cbkdDb250ZXh0MkQucHJvdG90eXBlLnNhdmUgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9zYXZlZEdsb2JhbEFscGhhLnB1c2godGhpcy5fZ2xvYmFsQWxwaGEpO1xuICAgIHRoaXMuX2RyYXdDb21tYW5kcyA9IHRoaXMuX2RyYXdDb21tYW5kcy5jb25jYXQoXCJ2O1wiKTtcbn07XG5cbi8qKlxuICogUmVzdG9yZXMgdGhlIHN0YXRlIG9mIHRoZSBjb250ZXh0IHRyYW5zZm9ybSB0byB0aGUgc3RhdGUgYXQgdGhlIHBvaW50IGluXG4gKiB0aW1lIHdoZW4gc2F2ZSgpIHdhcyBsYXN0IGNhbGxlZC5cbiAqXG4gKiBAc2VlIEdDb250ZXh0MkQjc2F2ZVxuICovXG5HQ29udGV4dDJELnByb3RvdHlwZS5yZXN0b3JlID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fZHJhd0NvbW1hbmRzID0gdGhpcy5fZHJhd0NvbW1hbmRzLmNvbmNhdChcImU7XCIpO1xuICAgIHRoaXMuX2dsb2JhbEFscGhhID0gdGhpcy5fc2F2ZWRHbG9iYWxBbHBoYS5wb3AoKTtcbn07XG5cblxuR0NvbnRleHQyRC5wcm90b3R5cGUuZHJhd0ltYWdlID0gZnVuY3Rpb24oaW1hZ2UsIC8vIGltYWdlXG5zeCwgc3ksIHN3LCBzaCwgLy8gc291cmNlIChvciBkZXN0aW5hdGlvbiBpZiBmZXdlciBhcmdzKVxuZHgsIGR5LCBkdywgZGgpIHsgLy8gZGVzdGluYXRpb25cblxuICAgIEdMb2cuZChcIltHQ29udGV4dDJELmRyYXdJbWFnZV0gc3RhcnQuLi5cIik7XG5cbiAgICBpZiAodHlwZW9mIGltYWdlICE9PSAnc3RyaW5nJykge1xuICAgICAgICBpbWFnZSA9IGltYWdlLnNyYztcbiAgICB9XG4gICAgXG4gICAgR0JyaWRnZS5wcmVMb2FkSW1hZ2UoaW1hZ2UpO1xuXG4gICAgdmFyIG51bUFyZ3MgPSBhcmd1bWVudHMubGVuZ3RoO1xuXG4gICAgdGhpcy5fZHJhd0NvbW1hbmRzICs9IChcImRcIiArIG51bUFyZ3MgKyBcIixcIiArIGltYWdlICsgXCIsXCIgXG4gICAgICAgICAgICArIHN4ICsgXCIsXCIgKyBzeSArIFwiLFwiICsgc3cgKyBcIixcIiArIHNoICsgXCIsXCIgXG4gICAgICAgICAgICArIGR4ICsgXCIsXCIgKyBkeSArIFwiLFwiICsgZHcgKyBcIixcIiArIGRoICsgXCI7XCIpO1xufTtcblxuLyoqXG4gKiBJbmZvcm1zIHRoZSBkcmF3aW5nIGNvbnRleHQgdGhhdCBkcmF3aW5nIGNvbW1hbmRzIGhhdmUgY29tcGxldGVkIGZvciB0aGVcbiAqIGN1cnJlbnQgZnJhbWUgYW5kIHRoZSBzaG91bGQgYmUgc2VudCB0byB0aGUgR0NhbnZhcyBwbHVnaW4gZm9yIGRyYXdpbmdcbiAqIHRvIHRoZSBzY3JlZW4uXG4gKiA8cD5cbiAqIFRoaXMgbWV0aG9kIGlzIHVuaXF1ZSB0byBHQ29udGV4dDJEIGFuZCBkb2VzIG5vdCBleGlzdCB3aXRoaW4gdGhlIEhUTUxcbiAqIDJEIGNvbnRleHQsIHNvIHRoZSB1dGlsaXR5IG1ldGhvZCB7QGxpbmsgR0NhbnZhcy5yZW5kZXJ9IHNob3VsZCBiZVxuICogdXNlZCB0byBtYWtlIGl0IGVhc3kgdG8gY2FsbCBvciBub3QgY2FsbCB0aGlzIG1ldGhvZCBkZXBlbmRpbmcgb24gdGhlXG4gKiBjb250ZXh0IHlvdSBhcmUgY3VycmVudGx5IHdvcmtpbmcgd2l0aC5cbiAqIDwvcD5cbiAqXG4gKiBAZXhhbXBsZSAvLyBtYWtlcyBuZWNlc3NhcnkgR0NhbnZhcyByZW5kZXIgY2FsbCAvLyBpZiBjYW52YXMgYmVpbmdcbiAqICAgICAgICAgIHVzZWQgaXMgR0NhbnZhcyB2YXIgbXlDYW52YXMgPSBHQ2FudmFzLmNyZWF0ZSgpOyB2YXJcbiAqICAgICAgICAgIG15Q29udGV4dCA9IG15Q2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcbiAqICAvLyAuLi4gbXlDb250ZXh0LnRyYW5zbGF0ZSgxMCwxMCk7IG15Q29udGV4dC5yb3RhdGUoTWF0aC5QSSk7IC8vXG4gKiAuLi5cbiAqICAvLyBhZnRlciBhbGwgY29udGV4dCBjYWxscyBhcmUgY29tcGxldGUgLy8gZm9yIHRoZSBjdXJyZW50IGZyYW1lOlxuICogR0NhbnZhcy5yZW5kZXIoKTsgLy8gY2FsbHMgR0NvbnRleHQyRC5yZW5kZXIoKVxuICovXG5cbkdDb250ZXh0MkQucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uKGZsYWcpIHtcbiAgICBpZiAodHlwZW9mIGZsYWcgPT09IFwidW5kZWZpbmVkXCIpe1xuICAgICAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpO1xuICAgICAgICB0aGlzLnRpbWVyID0gbnVsbDtcbiAgICB9XG4gICAgdmFyIGNvbW1hbmRzID0gdGhpcy5fZHJhd0NvbW1hbmRzO1xuICAgIHRoaXMuX2RyYXdDb21tYW5kcyA9IFwiXCI7XG4gICAgaWYgKGNvbW1hbmRzICE9IG51bGwgJiYgY29tbWFuZHMgIT0gXCJcIikge1xuICAgICAgICBHTG9nLmQoXCJHQ29udGV4dDJEI3JlbmRlcigpIGNhbGxlZCwgY29tbWFuZHMgaXMgXCIrIGNvbW1hbmRzKTtcbiAgICAgICAgR0JyaWRnZS5jYWxsUmVuZGVyKGNvbW1hbmRzKVxuICAgIH1cbn07XG5cbi8qKlxuICogSW1wbGVtZW50YXRpb24gb2YgR0NhbnZhcy5jYXB0dXJlLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbkdDb250ZXh0MkQucHJvdG90eXBlLmNhcHR1cmUgPSBmdW5jdGlvbih4LCB5LCB3LCBoLCBmaWxlTmFtZSwgc3VjY2Vzc0NhbGxiYWNrLCBlcnJvckNhbGxiYWNrKSB7XG4gICAgLy8gaWYgKHN1Y2Nlc3NDYWxsYmFjayAmJiB0eXBlb2Ygc3VjY2Vzc0NhbGxiYWNrICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgLy8gICAgIHRocm93IG5ldyBFcnJvcignc3VjY2Vzc0NhbGxiYWNrIHBhcmFtZXRlciBub3QgYSBmdW5jdGlvbicpO1xuICAgIC8vIH1cbiAgICAvLyBpZiAoZXJyb3JDYWxsYmFjayAmJiB0eXBlb2YgZXJyb3JDYWxsYmFjayAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIC8vICAgICB0aHJvdyBuZXcgRXJyb3IoJ2Vycm9yQ2FsbGJhY2sgcGFyYW1ldGVyIG5vdCBhIGZ1bmN0aW9uJyk7XG4gICAgLy8gfVxuXG4gICAgLy8gR0NhbnZhcy5fdG9OYXRpdmUoc3VjY2Vzc0NhbGxiYWNrLCBlcnJvckNhbGxiYWNrLCAnR0NhbnZhcycsXG4gICAgLy8gICAgICAgICAnY2FwdHVyZScsIFsgeCwgeSwgdywgaCwgZmlsZU5hbWUgXSk7XG59O1xuXG5cbkdDb250ZXh0MkQucHJvdG90eXBlLmNyZWF0ZVBhdHRlcm4gPSBmdW5jdGlvbihpbWcsIHBhdHRlcm4pIHtcbiAgICByZXR1cm4gbmV3IEZpbGxTdHlsZVBhdHRlcm4oaW1nLCBwYXR0ZXJuKTtcbn07XG5cbi8qKlxuICogSW1wbGVtZW50YXRpb24gb2YgR0NhbnZhcy5jcmVhdGVMaW5lYXJHcmFkaWVudCh4MCwgeTAsIHgxLCB5MSkuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuIEdDb250ZXh0MkQucHJvdG90eXBlLmNyZWF0ZUxpbmVhckdyYWRpZW50ID0gZnVuY3Rpb24oeDAsIHkwLCB4MSwgeTEpIHtcbiAgICByZXR1cm4gbmV3IEZpbGxTdHlsZUxpbmVhckdyYWRpZW50KHgwLCB5MCwgeDEsIHkxKTtcbn07XG5cbi8qKlxuICogSW1wbGVtZW50YXRpb24gb2YgR0NhbnZhcy5jcmVhdGVSYWRpYWxHcmFkaWVudCh4MCwgeTAsIHgxLCB5MSkuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuIEdDb250ZXh0MkQucHJvdG90eXBlLmNyZWF0ZVJhZGlhbEdyYWRpZW50ID0gZnVuY3Rpb24oeDAsIHkwLCByMCwgeDEsIHkxLCByMSkge1xuICAgIHJldHVybiBuZXcgRmlsbFN0eWxlUmFkaWFsR3JhZGllbnQoeDAsIHkwLCByMCwgeDEsIHkxLCByMSk7XG59O1xuXG5HQ29udGV4dDJELnByb3RvdHlwZS5zdHJva2VSZWN0ID0gZnVuY3Rpb24oeCwgeSwgdywgaCwgc3VjY2Vzc0NhbGxiYWNrLFxuICAgICAgICBlcnJvckNhbGxiYWNrKSB7XG4gICAgdGhpcy5fZHJhd0NvbW1hbmRzID0gdGhpcy5fZHJhd0NvbW1hbmRzLmNvbmNhdChcInNcIiArIHggKyBcIixcIiArIHkgKyBcIixcIiArIHdcbiAgICAgICAgICAgICsgXCIsXCIgKyBoICsgXCI7XCIpO1xufTtcblxuR0NvbnRleHQyRC5wcm90b3R5cGUuY2xlYXJSZWN0ID0gZnVuY3Rpb24oeCwgeSwgdywgaCwgc3VjY2Vzc0NhbGxiYWNrLFxuICAgICAgICBlcnJvckNhbGxiYWNrKSB7XG4gICAgLy8gVE9ETzogZW5hYmxlIGl0IGxhdGVyLlxuICAgIHRoaXMuX2RyYXdDb21tYW5kcyA9IHRoaXMuX2RyYXdDb21tYW5kcy5jb25jYXQoXCJjXCIgKyB4ICsgXCIsXCIgKyB5ICsgXCIsXCIgKyB3XG4gICAgICAgICsgXCIsXCIgKyBoICsgXCI7XCIpO1xufVxuXG5HQ29udGV4dDJELnByb3RvdHlwZS5jbGlwID0gZnVuY3Rpb24oc3VjY2Vzc0NhbGxiYWNrLCBlcnJvckNhbGxiYWNrKSB7XG4gICAgdGhpcy5fZHJhd0NvbW1hbmRzID0gdGhpcy5fZHJhd0NvbW1hbmRzLmNvbmNhdChcInA7XCIpO1xufVxuXG5HQ29udGV4dDJELnByb3RvdHlwZS5yZXNldENsaXAgPSBmdW5jdGlvbihzdWNjZXNzQ2FsbGJhY2ssIGVycm9yQ2FsbGJhY2spIHtcbiAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwicTtcIik7XG59XG5cbkdDb250ZXh0MkQucHJvdG90eXBlLmNsb3NlUGF0aCA9IGZ1bmN0aW9uKHN1Y2Nlc3NDYWxsYmFjaywgZXJyb3JDYWxsYmFjaykge1xuICAgIHRoaXMuX2RyYXdDb21tYW5kcyA9IHRoaXMuX2RyYXdDb21tYW5kcy5jb25jYXQoXCJvO1wiKTtcbn1cblxuR0NvbnRleHQyRC5wcm90b3R5cGUubW92ZVRvID0gZnVuY3Rpb24oeCwgeSwgc3VjY2Vzc0NhbGxiYWNrLCBlcnJvckNhbGxiYWNrKSB7XG4gICAgdGhpcy5fZHJhd0NvbW1hbmRzID0gdGhpcy5fZHJhd0NvbW1hbmRzLmNvbmNhdChcImdcIiArIHgudG9GaXhlZCg2KSArIFwiLFwiXG4gICAgICAgICAgICArIHkudG9GaXhlZCg2KSArIFwiO1wiKTtcbn1cblxuR0NvbnRleHQyRC5wcm90b3R5cGUubGluZVRvID0gZnVuY3Rpb24oeCwgeSwgc3VjY2Vzc0NhbGxiYWNrLCBlcnJvckNhbGxiYWNrKSB7XG4gICAgdGhpcy5fZHJhd0NvbW1hbmRzID0gdGhpcy5fZHJhd0NvbW1hbmRzLmNvbmNhdChcImlcIiArIHgudG9GaXhlZCg2KSArIFwiLFwiXG4gICAgICAgICAgICArIHkudG9GaXhlZCg2KSArIFwiO1wiKTtcbn1cblxuR0NvbnRleHQyRC5wcm90b3R5cGUucXVhZHJhdGljQ3VydmVUbyA9IGZ1bmN0aW9uKGNweCwgY3B5LCB4LCB5LFxuICAgICAgICBzdWNjZXNzQ2FsbGJhY2ssIGVycm9yQ2FsbGJhY2spIHtcbiAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwidVwiICsgY3B4ICsgXCIsXCIgKyBjcHkgKyBcIixcIlxuICAgICAgICAgICAgKyB4ICsgXCIsXCIgKyB5ICsgXCI7XCIpO1xufVxuXG5HQ29udGV4dDJELnByb3RvdHlwZS5iZXppZXJDdXJ2ZVRvID0gZnVuY3Rpb24oY3AxeCwgY3AxeSwgY3AyeCwgY3AyeSwgeCwgeSxcbiAgICAgICAgc3VjY2Vzc0NhbGxiYWNrLCBlcnJvckNhbGxiYWNrKSB7XG4gICAgdGhpcy5fZHJhd0NvbW1hbmRzID0gdGhpcy5fZHJhd0NvbW1hbmRzLmNvbmNhdChcInpcIiArIGNwMXggKyBcIixcIiArIGNwMXlcbiAgICAgICAgICAgICsgXCIsXCIgKyBjcDJ4ICsgXCIsXCIgKyBjcDJ5ICsgXCIsXCIgKyB4ICsgXCIsXCIgKyB5ICsgXCI7XCIpO1xufVxuXG5HQ29udGV4dDJELnByb3RvdHlwZS5hcmNUbyA9IGZ1bmN0aW9uKHgxLCB5MSwgeDIsIHkyLCByYWRpdXMsXG4gICAgICAgIHN1Y2Nlc3NDYWxsYmFjaywgZXJyb3JDYWxsYmFjaykge1xuICAgIHRoaXMuX2RyYXdDb21tYW5kcyA9IHRoaXMuX2RyYXdDb21tYW5kcy5jb25jYXQoXCJoXCIgKyB4MSArIFwiLFwiICsgeTEgKyBcIixcIlxuICAgICAgICAgICAgKyB4MiArIFwiLFwiICsgeTIgKyBcIixcIiArIHJhZGl1cyArIFwiO1wiKTtcbn1cblxuLyoqXG4gKiBSZXNldHMgdGhlIGN1cnJlbnQgZGVmYXVsdCBwYXRoLlxuICpcbiAqIEBwYXJhbSBudWxsXG4gKi9cbkdDb250ZXh0MkQucHJvdG90eXBlLmJlZ2luUGF0aCA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2RyYXdDb21tYW5kcyA9IHRoaXMuX2RyYXdDb21tYW5kcy5jb25jYXQoXCJiO1wiKTtcbn07XG5cbi8qKlxuICogUGFpbnQgdGhlIHNwZWNpZmllZCByZWN0YW5ndWxhciBhcmVhIHVzaW5nIHRoZSBmaWxsU3R5bGUuIElmIGVpdGhlclxuICogaGVpZ2h0IG9yIHdpZHRoIGFyZSB6ZXJvLCB0aGlzIG1ldGhvZCBoYXMgbm8gZWZmZWN0LlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfVxuICogICAgICAgICAgICB4IFRoZSB4IGxvY2F0aW9uIG9mIHRoZSBzb3VyY2UgY2xpcHBpbmcgcmVjdGFuZ2xlXG4gKiBAcGFyYW0ge251bWJlcn1cbiAqICAgICAgICAgICAgeSBUaGUgeSBsb2NhdGlvbiBvZiB0aGUgc291cmNlIGNsaXBwaW5nIHJlY3RhbmdsZVxuICogQHBhcmFtIHtudW1iZXJ9XG4gKiAgICAgICAgICAgIHcgVGhlIHdpZHRoIG9mIHRoZSByZWN0YW5nbGVcbiAqIEBwYXJhbSB7bnVtYmVyfVxuICogICAgICAgICAgICBoIFRoZSBoZWlnaHQgb2YgdGhlIHJlY3RhbmdsZVxuICovXG5HQ29udGV4dDJELnByb3RvdHlwZS5maWxsUmVjdCA9IGZ1bmN0aW9uKHgsIHksIHcsIGgpIHtcbiAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwiblwiICsgeCArIFwiLFwiICsgeSArIFwiLFwiICsgd1xuICAgICAgICAgICAgKyBcIixcIiArIGggKyBcIjtcIik7XG59O1xuXG4vKipcbiAqIEFkZHMgYSBuZXcgY2xvc2VkIHN1YnBhdGggdG8gdGhlIHBhdGgsIHJlcHJlc2VudGluZyB0aGUgZ2l2ZW4gcmVjdGFuZ2xlLlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfVxuICogICAgICAgICAgICB4IFRoZSB4IGxvY2F0aW9uIG9mIHRoZSByZWN0YW5nbGVcbiAqIEBwYXJhbSB7bnVtYmVyfVxuICogICAgICAgICAgICB5IFRoZSB5IGxvY2F0aW9uIG9mIHRoZSByZWN0YW5nbGVcbiAqIEBwYXJhbSB7bnVtYmVyfVxuICogICAgICAgICAgICB3IFRoZSB3aWR0aCBvZiB0aGUgcmVjdGFuZ2xlXG4gKiBAcGFyYW0ge251bWJlcn1cbiAqICAgICAgICAgICAgaCBUaGUgaGVpZ2h0IG9mIHRoZSByZWN0YW5nbGVcbiAqL1xuR0NvbnRleHQyRC5wcm90b3R5cGUucmVjdCA9IGZ1bmN0aW9uKHgsIHksIHcsIGgpIHtcbiAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwid1wiICsgeCArIFwiLFwiICsgeSArIFwiLFwiICsgd1xuICAgICAgICAgICAgKyBcIixcIiArIGggKyBcIjtcIik7XG59O1xuXG4vKipcbiAqIEZpbGxzIHRoZSBzdWJwYXRocyBvZiB0aGUgY3VycmVudCBkZWZhdWx0IHBhdGggb3IgdGhlIGdpdmVuIHBhdGggd2l0aCB0aGVcbiAqIGN1cnJlbnQgZmlsbCBzdHlsZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ31cbiAqICAgICAgICAgICAgcGF0aCBUaGUgZ2l2ZW4gcGF0aCB0byBmaWxsLlxuICovXG5HQ29udGV4dDJELnByb3RvdHlwZS5maWxsID0gZnVuY3Rpb24ocGF0aCkge1xuICAgIHRoaXMuX2RyYXdDb21tYW5kcyA9IHRoaXMuX2RyYXdDb21tYW5kcy5jb25jYXQoXCJMO1wiKTtcbn07XG5cbi8qKlxuICogU3Ryb2tlcyB0aGUgc3VicGF0aHMgb2YgdGhlIGN1cnJlbnQgZGVmYXVsdCBwYXRoIG9yIHRoZSBnaXZlbiBwYXRoIHdpdGhcbiAqIHRoZSBjdXJyZW50IHN0cm9rZSBzdHlsZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ31cbiAqICAgICAgICAgICAgcGF0aCBUaGUgZ2l2ZW4gcGF0aCB0byBzdHJva2UuXG4gKi9cbkdDb250ZXh0MkQucHJvdG90eXBlLnN0cm9rZSA9IGZ1bmN0aW9uKHBhdGgpIHtcbiAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwieDtcIik7XG59O1xuXG4vKipcbiAqIEFkZHMgcG9pbnRzIHRvIHRoZSBzdWJwYXRoIHN1Y2ggdGhhdCB0aGUgYXJjIGRlc2NyaWJlZCBieSB0aGVcbiAqIGNpcmN1bWZlcmVuY2Ugb2YgdGhlIGNpcmNsZSBkZXNjcmliZWQgYnkgdGhlIGFyZ3VtZW50cywgc3RhcnRpbmcgYXQgdGhlXG4gKiBnaXZlbiBzdGFydCBhbmdsZSBhbmQgZW5kaW5nIGF0IHRoZSBnaXZlbiBlbmQgYW5nbGUsIGdvaW5nIGluIHRoZSBnaXZlblxuICogZGlyZWN0aW9uIChkZWZhdWx0aW5nIHRvIGNsb2Nrd2lzZSksIGlzIGFkZGVkIHRvIHRoZSBwYXRoLCBjb25uZWN0ZWQgdG9cbiAqIHRoZSBwcmV2aW91cyBwb2ludCBieSBhIHN0cmFpZ2h0IGxpbmUuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9XG4gKiAgICAgICAgICAgIHhcbiAqIEBwYXJhbSB7bnVtYmVyfVxuICogICAgICAgICAgICB5XG4gKiBAcGFyYW0ge251bWJlcn1cbiAqICAgICAgICAgICAgcmFkaXVzXG4gKiBAcGFyYW0ge251bWJlcn1cbiAqICAgICAgICAgICAgc3RhcnRBbmdsZVxuICogQHBhcmFtIHtudW1iZXJ9XG4gKiAgICAgICAgICAgIGVuZEFuZ2xlXG4gKiBAcGFyYW0ge3N0cmluZ31cbiAqICAgICAgICAgICAgYW50aWNsb2Nrd2lzZVxuICovXG5HQ29udGV4dDJELnByb3RvdHlwZS5hcmMgPSBmdW5jdGlvbih4LCB5LCByYWRpdXMsIHN0YXJ0QW5nbGUsIGVuZEFuZ2xlLFxuICAgICAgICBhbnRpY2xvY2t3aXNlKSB7XG5cbiAgICB2YXIgaWFudGljbG9ja3dpc2UgPSAwO1xuICAgIGlmIChhbnRpY2xvY2t3aXNlKVxuICAgICAgICBpYW50aWNsb2Nrd2lzZSA9IDE7XG5cbiAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwieVwiICsgeCArIFwiLFwiICsgeSArIFwiLFwiXG4gICAgICAgICAgICArIHJhZGl1cyArIFwiLFwiICsgc3RhcnRBbmdsZSArIFwiLFwiICsgZW5kQW5nbGUgKyBcIixcIiArIGlhbnRpY2xvY2t3aXNlXG4gICAgICAgICAgICArIFwiO1wiKTtcbn07XG5cblxuXG5HQ29udGV4dDJELnByb3RvdHlwZS5maWxsVGV4dCA9IGZ1bmN0aW9uKHRleHQsIHgsIHkpIHtcbiAgICB2YXIgdG1wdGV4dCA9dGV4dC5yZXBsYWNlKC8hL2csXCIhIVwiKTtcbiAgICAgICAgdG1wdGV4dCA9dG1wdGV4dC5yZXBsYWNlKC8sL2csXCIhLFwiKTtcbiAgICAgICAgdG1wdGV4dCA9dG1wdGV4dC5yZXBsYWNlKC87L2csXCIhO1wiKTtcbiAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwiVFwiICsgdG1wdGV4dCArIFwiLFwiICsgeCArIFwiLFwiXG4gICAgICAgICAgICArIHkgKyBcIiwwLjA7XCIpO1xufTtcblxuR0NvbnRleHQyRC5wcm90b3R5cGUuc3Ryb2tlVGV4dCA9IGZ1bmN0aW9uKHRleHQsIHgsIHkpIHtcbiAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwiVVwiICsgdGV4dCArIFwiLFwiICsgeCArIFwiLFwiXG4gICAgICAgICAgICArIHkgKyBcIiwwLjA7XCIpO1xufTtcblxuXG4vL1RPRE866L+Z5LiqYXBp5pyJ55So6ZyA6KaB5Y6f55Sf55qEY2FudmFz5a+56LGh77yM5omA5Lul5LiN5pSv5oyBXG5HQ29udGV4dDJELnByb3RvdHlwZS5tZWFzdXJlVGV4dCA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgICByZXR1cm4gLTE7XG4gICAgLy9yZXR1cm4gdGhpcy5fYXBpQ29udGV4dC5tZWFzdXJlVGV4dCh0ZXh0KTtcbn07XG5cbkdDb250ZXh0MkQucHJvdG90eXBlLmlzUG9pbnRJblBhdGggPSBmdW5jdGlvbih4LHkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vYmFzZTY0XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5mdW5jdGlvbiBHYXJyVG9CYXNlNjQoYnVmZmVyKSB7XG4gICAgdmFyIGJpbmFyeSA9ICcnXG4gICAgdmFyIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoIGJ1ZmZlciApXG4gICAgdmFyIGxlbiA9IGJ5dGVzLmJ5dGVMZW5ndGg7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgICBiaW5hcnkgKz0gU3RyaW5nLmZyb21DaGFyQ29kZSggYnl0ZXNbIGkgXSApXG4gICAgfVxuICAgIHJldHVybiB3aW5kb3cuYnRvYSggYmluYXJ5ICk7XG59XG5cbmZ1bmN0aW9uIF9HY2hhckRlY29kZSAobkNocikge1xuICByZXR1cm4gbkNociA+IDY0ICYmIG5DaHIgPCA5MSA/XG4gICAgICBuQ2hyIC0gNjVcbiAgICA6IG5DaHIgPiA5NiAmJiBuQ2hyIDwgMTIzID9cbiAgICAgIG5DaHIgLSA3MVxuICAgIDogbkNociA+IDQ3ICYmIG5DaHIgPCA1OCA/XG4gICAgICBuQ2hyICsgNFxuICAgIDogbkNociA9PT0gNDMgP1xuICAgICAgNjJcbiAgICA6IG5DaHIgPT09IDQ3ID9cbiAgICAgIDYzXG4gICAgOlxuICAgICAgMDtcbn1cblxuZnVuY3Rpb24gR2Jhc2U2NFRvQXJyIChzQmFzZTY0LCBuQmxvY2tzU2l6ZSkge1xuICB2YXJcbiAgICBzQjY0RW5jID0gc0Jhc2U2NC5yZXBsYWNlKC9bXkEtWmEtejAtOVxcK1xcL10vZywgXCJcIiksIG5JbkxlbiA9IHNCNjRFbmMubGVuZ3RoLFxuICAgIG5PdXRMZW4gPSBuQmxvY2tzU2l6ZSA/IE1hdGguY2VpbCgobkluTGVuICogMyArIDEgPj4gMikgLyBuQmxvY2tzU2l6ZSkgKiBuQmxvY2tzU2l6ZSA6IG5JbkxlbiAqIDMgKyAxID4+IDIsIHRhQnl0ZXMgPSBuZXcgVWludDhBcnJheShuT3V0TGVuKTtcblxuICBmb3IgKHZhciBuTW9kMywgbk1vZDQsIG5VaW50MjQgPSAwLCBuT3V0SWR4ID0gMCwgbkluSWR4ID0gMDsgbkluSWR4IDwgbkluTGVuOyBuSW5JZHgrKykge1xuICAgIG5Nb2Q0ID0gbkluSWR4ICYgMztcbiAgICBuVWludDI0IHw9IF9HY2hhckRlY29kZShzQjY0RW5jLmNoYXJDb2RlQXQobkluSWR4KSkgPDwgMTggLSA2ICogbk1vZDQ7XG4gICAgaWYgKG5Nb2Q0ID09PSAzIHx8IG5JbkxlbiAtIG5JbklkeCA9PT0gMSkge1xuICAgICAgZm9yIChuTW9kMyA9IDA7IG5Nb2QzIDwgMyAmJiBuT3V0SWR4IDwgbk91dExlbjsgbk1vZDMrKywgbk91dElkeCsrKSB7XG4gICAgICAgIHRhQnl0ZXNbbk91dElkeF0gPSBuVWludDI0ID4+PiAoMTYgPj4+IG5Nb2QzICYgMjQpICYgMjU1O1xuICAgICAgfVxuICAgICAgblVpbnQyNCA9IDA7XG5cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFCeXRlcztcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vL0dDYW52YXNJbWFnZVxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbmZ1bmN0aW9uIEdJbWFnZURhdGEodywgaCkge1xuICAgIEdMb2cuZChcIkdJbWFnZURhdGEgd2g9XCIgKyB3ICsgXCIsXCIgKyBoKTtcbiAgICB0aGlzLndpZHRoID0gdztcbiAgICB0aGlzLmhlaWdodCA9IGg7XG4gICAgdGhpcy5kYXRhID0gbmV3IFVpbnQ4QXJyYXkodypoKjQpO1xufVxuXG5HQ29udGV4dDJELnByb3RvdHlwZS5jcmVhdGVJbWFnZURhdGEgPSBmdW5jdGlvbih3LCBoKSB7XG4gICAgR0xvZy5kKFwiR0NvbnRleHQyRDo6Y3JlYXRlSW1hZ2VEYXRhIHdoPVwiICsgdyArIFwiLFwiICsgaCk7XG4gICAgcmV0dXJuIG5ldyBHSW1hZ2VEYXRhKHcsaCk7XG59O1xuXG5cbkdDb250ZXh0MkQucHJvdG90eXBlLl9wdXRJbWFnZURhdGEgPSBmdW5jdGlvbihkYXRhLGR4LCBkeSwgc3csIHNoLCAgZHcsIGRoKXtcbiAgICB0aGlzLl9kcmF3Q29tbWFuZHMgPSB0aGlzLl9kcmF3Q29tbWFuZHMuY29uY2F0KFwiUFwiXG4gICAgICAgICsgZHggKyBcIixcIlxuICAgICAgICArIGR5ICsgXCIsXCJcbiAgICAgICAgKyBzdyArIFwiLFwiXG4gICAgICAgICsgc2ggKyBcIixcIlxuICAgICAgICArIGR3ICsgXCIsXCJcbiAgICAgICAgKyBkaCArIFwiLFwiXG4gICAgICAgICsgR2FyclRvQmFzZTY0KGRhdGEpICsgXCI7XCIpO1xufVxuR0NvbnRleHQyRC5wcm90b3R5cGUucHV0SW1hZ2VEYXRhID0gZnVuY3Rpb24oaW1nRGF0YSwgeCwgeSwgZGlydHlYLCBkaXJ0eVksIGRpcnR5V2lkdGgsIGRpcnR5SGVpZ2h0KSB7XG4gICAgR0xvZy5kKFwiR0NvbnRleHQyRDo6cHV0SW1hZ2VEYXRhIFtcIiArIGFyZ3VtZW50cy5sZW5ndGggKyBcIl0gXCJcbiAgICAgICAgKyBcImRlc3RfeHk9KFwiICsgeCArIFwiLFwiICsgeSArIFwiKSBcIlxuICAgICAgICArIFwiZGlydHlfeHk9KFwiICsgZGlydHlYICsgXCIsXCIgKyBkaXJ0eVkgKyBcIikgXCJcbiAgICAgICAgKyBcImRpcnR5X3doPShcIiArIGRpcnR5V2lkdGggKyBcIixcIiArIGRpcnR5SGVpZ2h0ICsgXCIpIFwiKTtcblxuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDw9IDMpe1xuICAgICAgICB0aGlzLl9wdXRJbWFnZURhdGEoaW1nRGF0YS5kYXRhLCB4LCB5LCBpbWdEYXRhLndpZHRoLCBpbWdEYXRhLmhlaWdodCwgaW1nRGF0YS53aWR0aCwgaW1nRGF0YS5oZWlnaHQpO1xuICAgIH1cbiAgICBlbHNle1xuICAgICAgICB2YXIgZGVzdERhdGEgPSBuZXcgVWludDhBcnJheShkaXJ0eVdpZHRoKmRpcnR5SGVpZ2h0KjQpO1xuICAgICAgICB2YXIgaW1nUG9zO1xuICAgICAgICB2YXIgZGVzdFBvcyA9IDBcbiAgICAgICAgZm9yKHZhciBpID0wOyBpIDwgZGlydHlIZWlnaHQ7IGkrKyl7XG4gICAgICAgICAgICBpbWdQb3MgPSAoaW1nRGF0YS53aWR0aCooZGlydHlZICsgaSkgKyBkaXJ0eVgpKjQ7XG4gICAgICAgICAgICBmb3IodmFyIGo9MDsgajwgZGlydHlXaWR0aDsgKytqKXtcbiAgICAgICAgICAgICAgICBkZXN0RGF0YVtkZXN0UG9zKytdPWltZ0RhdGEuZGF0YVtpbWdQb3MrK107XG4gICAgICAgICAgICAgICAgZGVzdERhdGFbZGVzdFBvcysrXT1pbWdEYXRhLmRhdGFbaW1nUG9zKytdO1xuICAgICAgICAgICAgICAgIGRlc3REYXRhW2Rlc3RQb3MrK109aW1nRGF0YS5kYXRhW2ltZ1BvcysrXTtcbiAgICAgICAgICAgICAgICBkZXN0RGF0YVtkZXN0UG9zKytdPWltZ0RhdGEuZGF0YVtpbWdQb3MrK107XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9wdXRJbWFnZURhdGEoZGVzdERhdGEsIHgrZGlydHlYLCB5K2RpcnR5WSwgZGlydHlXaWR0aCwgZGlydHlIZWlnaHQsIGRpcnR5V2lkdGgsIGRpcnR5SGVpZ2h0KTtcbiAgICB9XG59O1xuXG5cbkdDb250ZXh0MkQucHJvdG90eXBlLmdldEltYWdlRGF0YUFzeW4gPSBmdW5jdGlvbih4LCB5LCB3LCBoKSB7XG4gICAgcmV0dXJuICcnO1xuICAgIC8vIEdMb2cuZChcIkdDb250ZXh0MkQ6OmdldEltYWdlRGF0YUFzeW4geHk9KFwiICsgeCArIFwiLFwiICsgeSArIFwiKSwgd2g9KFwiICsgdyArIFwiLFwiKyBoICtcIilcIik7XG4gICAgLy8gR0NhbnZhcy5faW5zdGFuY2UuZ2V0Q29udGV4dCgpLnJlbmRlcihcImF1dG9cIik7XG4gICAgLy8gdmFyIGxlbiA9IHcqaDtcbiAgICAvLyB2YXIgaW1nRGF0YSA9IG5ldyBHSW1hZ2VEYXRhKHcsaCk7XG4gICAgLy8gaW1nRGF0YS5feCA9IHg7XG4gICAgLy8gaW1nRGF0YS5feSA9IHk7XG4gICAgLy8gaW1nRGF0YS5fZGF0YUdldCA9IDA7XG4gICAgLy8gaW1nRGF0YS5fc3BsaXQgPSAwO1xuICAgIC8vIHZhciBtZSA9IHRoaXM7XG4gICAgLy8gbWUuX2dldEltYWdlRGF0YS5wdXNoKGltZ0RhdGEpO1xuXG4gICAgLy8gdmFyIGgyID0gTWF0aC5mbG9vcigyNjIxNDQvdyk7Ly8gMl4xOFxuICAgIC8vIGlmIChoMiA8IGgpXG4gICAgLy8gICAgIGltZ0RhdGEuX3NwbGl0ID0gMTtcblxuICAgIC8vIGZ1bmN0aW9uIGdldEltYWdlRGF0YUFzeW5TdWNjZXNzKGdldERhdGEpIHtcbiAgICAvLyAgICAgdmFyIGRlc3REYXRhID0gbWUuX2dldEltYWdlRGF0YVswXTtcbiAgICAvLyAgICAgR0xvZy5kKFwiR0NvbnRleHQyRDo6Z2V0SW1hZ2VEYXRhQXN5bjogZGF0YUdldD1cIiArIGRlc3REYXRhLl9kYXRhR2V0KTtcbiAgICAvLyAgICAgaWYgKDAgPT0gZGVzdERhdGEuX3NwbGl0KXsvLyBvbmUgcGFydFxuICAgIC8vICAgICAgICAgZGVzdERhdGEuZGF0YSA9IEdiYXNlNjRUb0FycihnZXREYXRhKTtcbiAgICAvLyAgICAgICAgIGRlc3REYXRhLl9kYXRhR2V0ICs9IGRlc3REYXRhLmRhdGEubGVuZ3RoO1xuICAgIC8vICAgICB9ZWxzZXsvLyBtdWx0aSBwYXJ0c1xuICAgIC8vICAgICAgICAgdmFyIHRhQnl0ZXMgID0gR2Jhc2U2NFRvQXJyKGdldERhdGEpO1xuICAgIC8vICAgICAgICAgZGVzdERhdGEuX2RhdGFHZXQgKz0gdGFCeXRlcy5sZW5ndGg7XG4gICAgLy8gICAgICAgICBmb3IgKHZhciBpPTA7aTx0YUJ5dGVzLmxlbmd0aDtpKyspe1xuICAgIC8vICAgICAgICAgICAgIGRlc3REYXRhLmRhdGFbZGVzdERhdGEuX2RhdGFHZXQraV0gPSB0YUJ5dGVzW2ldO1xuICAgIC8vICAgICAgICAgfVxuICAgIC8vICAgICB9XG5cbiAgICAvLyAgICAgaWYgKGRlc3REYXRhLl9kYXRhR2V0ID49IChkZXN0RGF0YS5feCpkZXN0RGF0YS5feSkpe1xuICAgIC8vICAgICAgICAgaWYgKHR5cGVvZiBkZXN0RGF0YS5vbmxvYWQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyAgICAgICAgICAgICBHTG9nLmQoXCJHQ29udGV4dDJEOjpnZXRJbWFnZURhdGFBc3luOiBjYWxsYmFjayBleGVjLlwiKTtcbiAgICAvLyAgICAgICAgICAgICBkZXN0RGF0YS5vbmxvYWQoKTtcbiAgICAvLyAgICAgICAgIH1cbiAgICAvLyAgICAgICAgIG1lLl9nZXRJbWFnZURhdGEuc3BsaWNlKDAsMSk7Ly9kZWxldGUgZmlyc3QgZGF0YVxuICAgIC8vICAgICB9XG4gICAgLy8gfVxuXG4gICAgLy8gZm9yKHZhciBpPTA7IGk8aDsgaSs9IGgyKXtcbiAgICAvLyAgICAgR0NhbnZhcy5fdG9OYXRpdmUoZ2V0SW1hZ2VEYXRhQXN5blN1Y2Nlc3MsIGdldEltYWdlRGF0YUFzeW5TdWNjZXNzLCAnR0NhbnZhcycsXG4gICAgLy8gICAgICAgICAgICAgJ2dldEltYWdlRGF0YScsIFsgeCwgeStpLCB3LCAoaStoMj5oKT8oaC1pKTpoMiBdKTtcbiAgICAvLyB9XG5cblxuICAgIC8vIHJldHVybiBpbWdEYXRhO1xufTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gR0NvbnRleHQyRDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93ZWV4LWdjYW52YXMvZ2NvbnRleHQyZC5qc1xuLy8gbW9kdWxlIGlkID0gMTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLyoqXG4gKiBDcmVhdGVkIGJ5IGdvZHNvbmcgb24gMTYvMTIvMTIuXG4gKi9cbnZhciBHTSA9IHJlcXVpcmUoJ2cyLW1vYmlsZScpO1xudmFyIENhbnZhc0VsZW1lbnQ9cmVxdWlyZSgnLi9DYW52YXNFbGVtZW50JylcbnZhciBfcmVhZHkgPSBmYWxzZTtcbnZhciBfY29udGV4dDtcbnZhciBfcmVuZGVyUXVldWUgPSBbXTtcbnZhciBfY2hhcnRSZW5kZXIgPSBHTS5DaGFydC5wcm90b3R5cGUucmVuZGVyO1xuR00uQ2hhcnQucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoX3JlYWR5KSB7XG4gICAgICAgIF9jaGFydFJlbmRlci5jYWxsKHRoaXMpO1xuICAgICAgICBfY29udGV4dC5yZW5kZXIoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIF9yZW5kZXJRdWV1ZS5wdXNoKHRoaXMpO1xuICAgIH1cbn07XG52YXIgRzJDaGFydD1HTS5DaGFydDtcbkdNLkNoYXJ0PWZ1bmN0aW9uKGNvbmZpZyl7XG4gICAgdmFyIGNhbnZhc0VsZW1lbnQ9bmV3IENhbnZhc0VsZW1lbnQoKTtcbiAgICBjb25maWcuZWw9Y2FudmFzRWxlbWVudDtcbiAgICByZXR1cm4gbmV3IEcyQ2hhcnQoY29uZmlnKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICBzd2l0Y2ggKG5hbWUudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICBjYXNlICdnMic6XG4gICAgICAgICAgICByZXR1cm4gR007XG4gICAgICAgIGNhc2UgJ2dtJzpcbiAgICAgICAgICAgIHJldHVybiBHTTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBHTTtcbiAgICB9XG59O1xubW9kdWxlLmV4cG9ydHMucmVhZHkgPSBmdW5jdGlvbiAoY29udGV4dCxpZCx3ZWV4RWxlbWVudCkge1xuICAgIF9yZWFkeSA9IHRydWU7XG4gICAgX2NvbnRleHQgPSBjb250ZXh0O1xuICAgIHZhciBjaGFydDtcbiAgICBpZiAoX3JlbmRlclF1ZXVlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgd2hpbGUgKGNoYXJ0ID0gX3JlbmRlclF1ZXVlLnNoaWZ0KCkpIHtcbiAgICAgICAgICAgIF9jaGFydFJlbmRlci5jYWxsKGNoYXJ0KTtcbiAgICAgICAgfVxuICAgICAgICBjb250ZXh0LnJlbmRlcigpO1xuICAgIH1cbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dlZXgtY2hhcnQvY2hhcnQuanNcbi8vIG1vZHVsZSBpZCA9IDEyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIiFmdW5jdGlvbih0LGUpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwiR01cIixbXSxlKTpcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9leHBvcnRzLkdNPWUoKTp0LkdNPWUoKX0odGhpcyxmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbih0KXtmdW5jdGlvbiBlKHIpe2lmKG5bcl0pcmV0dXJuIG5bcl0uZXhwb3J0czt2YXIgaT1uW3JdPXtleHBvcnRzOnt9LGlkOnIsbG9hZGVkOiExfTtyZXR1cm4gdFtyXS5jYWxsKGkuZXhwb3J0cyxpLGkuZXhwb3J0cyxlKSxpLmxvYWRlZD0hMCxpLmV4cG9ydHN9dmFyIG49e307cmV0dXJuIGUubT10LGUuYz1uLGUucD1cIlwiLGUoMCl9KFtmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigyKTtuKDg4KSxuKDU1KSxuKDkxKSxuKDY4KSxuKDQwKSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oNzYpO3QuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9e0NoYXJ0Om4oOTcpLFV0aWw6bigxKSxHZW9tOm4oMTYpLFNoYXBlOm4oMzUpLEc6big3KSxHbG9iYWw6bigzKSxWZWN0b3IyOm4oOCksVGhlbWU6bigzOSksU2NhbGU6bigyNCksQ29vcmQ6bigzMCksUGxvdDpuKDM4KSxHdWlkZUFzc2lzdDpuKDM3KSxGcmFtZTpuKDUpLEFuaW1hdGVBc3Npc3Q6bigyNyl9O3QuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigzOSksaT1uKDEpLGE9e3NpemVzOnttaW46MSxtYXg6MTB9LHNjYWxlczp7bmljZTohMH0sd2lkdGhSYXRpbzp7Y29sdW1uOi41LHJvc2U6Ljk5OTk5OSxtdWx0aXBsZVBpZTouNzV9LGFuaW1hdGVSZWR1Y2VNdWx0aXBsZToxLGxpbmVEYXNoOls1LDE1XX07YS5zZXRUaGVtZT1mdW5jdGlvbih0KXtpLm1peCh0aGlzLHQpfSxhLnNldFRoZW1lKHIpLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oNiksYT1uKDUpLHM9bigxNyksbz1uKDUxKSxjPVwiX29yaWdpblwiLHU9ZnVuY3Rpb24odCl7dS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07dS5BVFRSUz17aWQ6XCJcIix0eXBlOm51bGwsY29udGFpbmVyOm51bGwsYXR0cnM6bnVsbCxzaGFwZU9iajpudWxsLGNyZWF0ZVRpbWU6bnVsbCxzdHlsZUNmZzp7fSxzaGFwZURhdGFzOltdfSxyLmV4dGVuZCh1LGkpLHIubWl4aW4odSxbb10pLHIuYXVnbWVudCh1LHtfbWFwcGluZzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49dC50b0pTT04oKSxpPWUuZ2V0KFwiYXR0cnNcIikscz1bXTtyZXR1cm4gci5lYWNoKG4sZnVuY3Rpb24odCl7dmFyIG49e307bltjXT10W2NdLG4ucG9pbnRzPXQucG9pbnRzLG4ubmV4dFBvaW50cz10Lm5leHRQb2ludHMsci5lYWNoKGksZnVuY3Rpb24oaSl7dmFyIGE9aS5uYW1lcyxzPWUuX2dldEF0dHJWYWx1ZXMoaSx0KTtyLmVhY2gocyxmdW5jdGlvbih0LGUpe3ZhciBpPWFbZV07bltpXT1yLmlzQXJyYXkodCkmJjE9PT10Lmxlbmd0aD90WzBdOnR9KX0pLHMucHVzaChuKX0pLG5ldyBhKHMpfSxfcHJvY2Vzc1NoYXBlUG9pbnRzOmZ1bmN0aW9uKHQpe3ZhciBlLG4saT10aGlzLG89aS5nZXQoXCJzaGFwZVR5cGVcIil8fGkuZ2V0KFwidHlwZVwiKSxjPXMuZ2V0U2hhcGUobyksdT1bXTtyZXR1cm4gYy5fY29vcmQ9aS5nZXRDb29yZCgpLHIuZWFjaCh0LGZ1bmN0aW9uKHQpe3ZhciBlPVtdO3QuZWFjaChmdW5jdGlvbih0KXt2YXIgbj1pLmdldEF0dHJWYWx1ZShcInNoYXBlXCIsdCkscj1pLmdldFNoYXBlUG9pbnRJbmZvKHQpLGE9Yy5nZXRTaGFwZVBvaW50cyhuLHIpO3QucG9pbnRzPWEsZS5wdXNoKHQpfSksZT1uZXcgYShlKSx1LnB1c2goZSl9KSxyLmVhY2godSxmdW5jdGlvbih0LHIpe2U9dVtyKzFdLG49ZT9lLmNvbEFycmF5KFwicG9pbnRzXCIpWzBdOm51bGwsdC5hZGRDb2woXCJuZXh0UG9pbnRzXCIsZnVuY3Rpb24oKXtyZXR1cm4gbn0pfSksaS5zZXQoXCJzaGFwZU9ialwiLGMpLHV9LF9nZXRBdHRyVmFsdWVzOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5zY2FsZXMsaT1bXTtyLmVhY2gobixmdW5jdGlvbih0KXt2YXIgbj10LmRpbTtcImlkZW50aXR5XCI9PT10LnR5cGU/aS5wdXNoKHQudmFsdWUpOmkucHVzaChlW25dKX0pO3ZhciBhPXQubWFwcGluZ1ZhbHVlcy5hcHBseSh0LGkpO3JldHVybiBhfSxkcmF3OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1bXTtyZXR1cm4gdD1lLnNvcnRGcmFtZXModCksdD1lLnByb2Nlc3NGcmFtZXModCksdD1lLl9wcm9jZXNzU2hhcGVQb2ludHModCksci5lYWNoKHQsZnVuY3Rpb24odCxyKXt0PWUuYmVmb3JlTWFwcGluZyh0KSx0PWUuX21hcHBpbmcodCksdC5yb3dDb3VudCgpJiZlLmRyYXdGcmFtZSh0LHIpLG4ucHVzaCh0KX0pLG59LHNvcnRGcmFtZXM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRYU2NhbGUoKTtyZXR1cm4gci5pbmRleE9mKFtcInRpbWVcIixcInRpbWVDYXRcIl0sZS50eXBlKT4tMT90aGlzLnNvcnQodCk6dH0scHJvY2Vzc0ZyYW1lczpmdW5jdGlvbih0KXtyZXR1cm4gdH0sYmVmb3JlTWFwcGluZzpmdW5jdGlvbih0KXtyZXR1cm4gdH0saXNJbkNpcmNsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldENvb3JkKCkuaXNQb2xhcn0sZ2V0U2hhcGVQb2ludEluZm86ZnVuY3Rpb24odCl7dmFyIGUsbixyPXRoaXMuZ2V0WFNjYWxlKCksaT10aGlzLmdldFlTY2FsZSgpO3JldHVybiBlPXI/dGhpcy5fbm9ybWFsaXplVmFsdWVzKHRbci5kaW1dLHIpOnQueD90Lng6LjEsbj1pP3RoaXMuX25vcm1hbGl6ZVZhbHVlcyh0W2kuZGltXSxpKTp0Lnk/dC55Oi4xLHt4OmUseTpuLHkwOmk/aS5zY2FsZSh0aGlzLmdldFlNaW5WYWx1ZSgpKTp2b2lkIDAsc2l6ZTp0aGlzLmdldFNpemUodCl9fSxfbm9ybWFsaXplVmFsdWVzOmZ1bmN0aW9uKHQsZSl7dmFyIG49W107cmV0dXJuIHIuaXNBcnJheSh0KT9yLmVhY2godCxmdW5jdGlvbih0KXtuLnB1c2goZS5zY2FsZSh0KSl9KTpuPWUuc2NhbGUodCksbn0sZ2V0RGVmYWx1dFNpemU6ZnVuY3Rpb24oKXtyZXR1cm4uMX0sX2dldFNpemU6ZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzLmdldENvb3JkKCk7cmV0dXJuIGU9dGhpcy5pc0luQ2lyY2xlKCkmJiFuLmlzVHJhbnNwb3NlZD8obi5nZXQoXCJlbmRBbmdsZVwiKS1uLmdldChcInN0YXJ0QW5nbGVcIikpKm4uZ2V0KFwicmFkaXVzXCIpOnRoaXMuZ2V0RGltV2lkdGgoXCJ4XCIpLHQvZX0sZ2V0RGltV2lkdGg6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0Q29vcmQoKSxyPW4uY29udmVydFBvaW50KHt4OjAseTowfSksaT1uLmNvbnZlcnRQb2ludCh7eDpcInhcIj09PXQ/MTowLHk6XCJ4XCI9PT10PzA6MX0pLGE9MDtyZXR1cm4gciYmaSYmKGE9TWF0aC5zcXJ0KE1hdGgucG93KGkueC1yLngsMikrTWF0aC5wb3coaS55LXIueSwyKSkpLGF9LGdldFNpemU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRBdHRyVmFsdWUoXCJzaXplXCIsdCk7cmV0dXJuIGU9ci5pc051bGwoZSk/dGhpcy5nZXREZWZhbHV0U2l6ZSgpOnRoaXMuX2dldFNpemUoZSl9LGRyYXdGcmFtZTpmdW5jdGlvbih0KXt2YXIgZSxuLGksYT10aGlzLHM9dC50b0pTT04oKSxvPWEuZ2V0KFwiY29udGFpbmVyXCIpLGM9YS5nZXQoXCJzaGFwZU9ialwiKTtyLmVhY2gocyxmdW5jdGlvbih0LHIpe2EuZ2V0KFwic2hhcGVEYXRhc1wiKS5wdXNoKHQpLHQuaW5kZXg9cixlPWEuZ2V0RHJhd0NmZyh0KSxuPWEuZ2V0RHJhd1NoYXBlKHQuc2hhcGUpLGk9Yy5kcmF3U2hhcGUobixlLG8pLGEuYWZ0ZXJEcmF3KGksdCl9KX0sYWZ0ZXJEcmF3OmZ1bmN0aW9uKCl7fSxnZXREcmF3U2hhcGU6ZnVuY3Rpb24odCl7cmV0dXJuIHIuaXNBcnJheSh0KT90WzBdOnR9LGdldERyYXdDZmc6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXQoXCJzdHlsZUNmZ1wiKSxuPXRoaXMuaXNJbkNpcmNsZSgpLHI9dC5fb3JpZ2luLGk9e3BvaW50czp0LnBvaW50cyxuZXh0UG9pbnRzOnQubmV4dFBvaW50cyxjb2xvcjp0LmNvbG9yLGlzSW5DaXJjbGU6bixzdHlsZTplLHNpemU6dC5zaXplLHNoYXBlOnQuc2hhcGUsb3BhY2l0eTp0Lm9wYWNpdHkseDp0LngseTp0Lnksb3JpZ2luOnQsaWQ6dGhpcy5fZ2V0SWQociksZ2VvbVR5cGU6dGhpcy5nZXQoXCJ0eXBlXCIpfTtyZXR1cm4gbiYmKGkuY2VudGVyPXRoaXMuZ2V0Q29vcmQoKS5nZXQoXCJjZW50ZXJcIikpLGl9LF9nZXRJZDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldChcImlkRGltc1wiKSxuPXRoaXMuZ2V0KFwiaWRcIikscj1uO2lmKGUmJmUubGVuZ3RoPjApZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3IrPVwiIFwiK3RbZV19KTtlbHNle3ZhciBpPXRoaXMuZ2V0KFwiZ3JvdXBTY2FsZXNcIik7aSYmaS5sZW5ndGg+MCYmaS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPWUuZGltO1wiaWRlbnRpdHlcIiE9PWUudHlwZSYmXCIuLlwiIT09bi5zbGljZSgwLDIpJiYocis9XCIgXCIrdFtuXSl9KTt2YXIgYT10aGlzLmdldEF0dHIoXCJwb3NpdGlvblwiKSxzPWEuZ2V0RGltcygpLG89c1swXSxjPXNbMV0sdT10aGlzLmdldChcInR5cGVcIik7cis9XCJpbnRlcnZhbFwiPT09dXx8XCJpbnRlcnZhbFN0YWNrXCI9PT11fHxcInNjaGVtYWxcIj09PXU/XCIgXCIrdFtvXTpcImxpbmVcIj09PXV8fFwiYXJlYVwiPT09dT9cIiBcIit1OlwiIFwiK3Rbb10rXCIgXCIrdFtjXStcIiBcIit1fXJldHVybiByfSxnZXRZTWluVmFsdWU6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMuZ2V0WVNjYWxlKCksbj1lLm1pbjtyZXR1cm4gdD1uPj0wP246MH0sZ2V0QXR0clZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5nZXRBdHRyKHQpLHI9bnVsbDtyZXR1cm4gbiYmKHI9dGhpcy5fZ2V0QXR0clZhbHVlcyhuLGUpWzBdKSxyfSxnZXRBdHRyOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0KFwiYXR0cnNcIiksbj1udWxsO3JldHVybiByLmVhY2goZSxmdW5jdGlvbihlKXtlLnR5cGU9PT10JiYobj1lKX0pLG59LGdldENvb3JkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0QXR0cihcInBvc2l0aW9uXCIpLmNvb3JkfSxnZXRYRGltOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRYU2NhbGUoKTtyZXR1cm4gdC5kaW19LGdldFlEaW06ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldFlTY2FsZSgpO3JldHVybiB0LmRpbX0sZ2V0WFNjYWxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0QXR0cihcInBvc2l0aW9uXCIpLnNjYWxlc1swXX0sZ2V0WVNjYWxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0QXR0cihcInBvc2l0aW9uXCIpLnNjYWxlc1sxXX19KSx0LmV4cG9ydHM9dX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMjIpO24oNjUpLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9big2Nyk7dC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQsZSl7dmFyIG49dC5nZXRDb250ZXh0KFwiMmRcIik7aWYobi5iZWdpblBhdGgoKSxuLnNhdmUoKSxuLmdsb2JhbEFscGhhPWUub3BhY2l0eXx8MSxlLmxpbmVEYXNoJiZuLnNldExpbmVEYXNoJiZuLnNldExpbmVEYXNoKGUubGluZURhc2gpLGUuZmlsbCYmKGUuZmlsbFN0eWxlPWUuZmlsbCksZGVsZXRlIGUuZmlsbCxlLnN0cm9rZSYmKGUuc3Ryb2tlU3R5bGU9ZS5zdHJva2UpLGRlbGV0ZSBlLnN0cm9rZSxlLmZvbnRTdHlsZXx8ZS5mb250VmFyaWFudHx8ZS5mb250V2VpZ2h0fHxlLmZvbnRTaXplfHxlLmZvbnRGYW1pbHkpe3ZhciByPXt9O2EubWl4KHIsYy5kZWZhdWx0Rm9udCxlKSxlLmZvbnQ9W3IuZm9udFN0eWxlLHIuZm9udFZhcmlhbnQsci5mb250V2VpZ2h0LHIuZm9udFNpemUrXCJweFwiLHIuZm9udEZhbWlseV0uam9pbihcIiBcIil9cmV0dXJuIGEubWl4KG4sZSksbn1mdW5jdGlvbiBpKHQsZSl7dmFyIG49dC5nbG9iYWxBbHBoYTtlLnN0cm9rZVN0eWxlJiYoZS5zdHJva2VPcGFjaXR5JiYodC5nbG9iYWxBbHBoYT1lLnN0cm9rZU9wYWNpdHkpLHQuc3Ryb2tlKCksdC5nbG9iYWxBbHBoYT1uKSxlLmZpbGxTdHlsZSYmKHQuZ2xvYmFsQWxwaGE9ZS5maWxsT3BhY2l0eXx8dC5nbG9iYWxBbHBoYSx0LmZpbGwoKSwoZS5maWxsT3BhY2l0eXx8ZS5zdHJva2VPcGFjaXR5KSYmKHQuc3Ryb2tlU3R5bGU9ZS5zdHJva2VTdHlsZT9lLnN0cm9rZVN0eWxlOmUuZmlsbFN0eWxlLHQuZ2xvYmFsQWxwaGE9ZS5zdHJva2VPcGFjaXR5fHwxLHQuc3Ryb2tlKCkpKSx0LnJlc3RvcmUoKX12YXIgYT1uKDEpLHM9big4KSxvPW4oMTA2KSxjPW4oMyk7dC5leHBvcnRzPXtkcmF3TGluZTpmdW5jdGlvbih0LGUsbixhKXt2YXIgcz1yKG4sYSk7cy5tb3ZlVG8odC54LHQueSkscy5saW5lVG8oZS54LGUueSksaShzLGEpfSxkcmF3VGV4dDpmdW5jdGlvbih0LGUsbixpKXt2YXIgYTtpLnJvdGF0ZSYmKGE9aS5yb3RhdGUqTWF0aC5QSS8xODAsZGVsZXRlIGkucm90YXRlKTt2YXIgcz1yKG4saSk7YT8ocy50cmFuc2xhdGUoZS54LGUueSkscy5yb3RhdGUoYSkscy5maWxsVGV4dChcIlwiK3QsMCwwKSk6cy5maWxsVGV4dChcIlwiK3QsZS54LGUueSkscy5yZXN0b3JlKCl9LGRyYXdDaXJjbGU6ZnVuY3Rpb24odCxlLG4sYSl7dmFyIHM9cihuLGEpO3MuYXJjKHQueCx0LnksZSwwLDIqTWF0aC5QSSkscy5jbG9zZVBhdGgoKSxpKHMsYSl9LGRyYXdBcmM6ZnVuY3Rpb24odCxlLG4sYSxzLG8pe3ZhciBjPXIocyxvKTtjLmFyYyh0LngsdC55LGUsbixhKSxvLnohPT0hMSYmYy5jbG9zZVBhdGgoKSxpKGMsbyl9LHJhZGl1c1JlY3Q6ZnVuY3Rpb24odCxlLG4scixpLGEpe2EubW92ZVRvKHQraSxlKSxhLmFyY1RvKHQrbixlLHQrbixlK3IsaSksYS5hcmNUbyh0K24sZStyLHQsZStyLGkpLGEuYXJjVG8odCxlK3IsdCxlLGkpLGEuYXJjVG8odCxlLHQrbixlLGkpfSxkcmF3UmVjdDpmdW5jdGlvbih0LGUsbil7dmFyIGE9cihlLG4pLHM9dFswXS54LG89dFswXS55LGM9dFsyXS54LHU9dFsxXS55O3QuZm9yRWFjaChmdW5jdGlvbih0KXt0Lng+YyYmKGM9dC54KSx0Lng8cyYmKHM9dC54KSx0Lnk+dSYmKHU9dC55KSx0Lnk8byYmKG89dC55KX0pO3ZhciBsPXMsZj1vLGg9Yy1zLGc9dS1vO2lmKG4ucmFkaXVzKXt2YXIgcD1NYXRoLm1pbihuLnJhZGl1cyxoLzIsZy8yKTt0aGlzLnJhZGl1c1JlY3QobCxmLGgsZyxwLGEpfWVsc2UgYS5yZWN0KGwsZixoLGcpO24ueiE9PSExJiZhLmNsb3NlUGF0aCgpLGkoYSxuKX0sZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgYT1yKHQsZSk7bihhKSxlLnomJmEuY2xvc2VQYXRoKCksaShhLGUpfSxkcmF3TGluZXM6ZnVuY3Rpb24odCxlLG4pe3ZhciBhPXIoZSxuKTt0aGlzLmxpbmVzKHQsYSksbi56JiZhLmNsb3NlUGF0aCgpLGkoYSxuKX0sbGluZXM6ZnVuY3Rpb24odCxlLG4pe2lmKHQubGVuZ3RoKXtuIT09ITEmJmUubW92ZVRvKHRbMF0ueCx0WzBdLnkpO2Zvcih2YXIgcj0xLGk9dC5sZW5ndGg7cjxpO3IrKyl7dmFyIGE9dFtyXTtlLmxpbmVUbyhhLngsYS55KX19fSxkcmF3RmFuOmZ1bmN0aW9uKHQsZSxuLGEpe3ZhciBvPXIobixhKSxjPW5ldyBzKDEsMCksdT1uZXcgcyh0WzBdLngtZS54LHRbMF0ueS1lLnkpLGw9dS5sZW5ndGgoKSxmPW5ldyBzKHRbMV0ueC1lLngsdFsxXS55LWUueSksaD1mLmxlbmd0aCgpLGc9bmV3IHModFsyXS54LWUueCx0WzJdLnktZS55KSxwPWMuYW5nbGVUbyhmKSx2PWMuYW5nbGVUbyhnKTtwPnYmJnAtdjwxZS00PyhvLm1vdmVUbyhlLngraCxlLnkpLG8uYXJjKGUueCxlLnksaCwwLE1hdGguUEkpLG8uYXJjKGUueCxlLnksaCxNYXRoLlBJLDIqTWF0aC5QSSksby5tb3ZlVG8oZS54K2wsZS55KSxvLmFyYyhlLngsZS55LGwsMipNYXRoLlBJLE1hdGguUEksITApLG8uYXJjKGUueCxlLnksbCxNYXRoLlBJLDAsITApLG8uY2xvc2VQYXRoKCkpOihvLm1vdmVUbyh0WzBdLngsdFswXS55KSxvLmxpbmVUbyh0WzFdLngsdFsxXS55KSxvLmFyYyhlLngsZS55LGgscCx2KSxvLmxpbmVUbyh0WzNdLngsdFszXS55KSxvLmFyYyhlLngsZS55LGwsdixwLCEwKSxvLmNsb3NlUGF0aCgpKSxpKG8sYSl9LGRyYXdTbW9vdGg6ZnVuY3Rpb24odCxlLG4pe2lmKDAhPT10Lmxlbmd0aCl7dmFyIHI9dGhpcy5iZWZvcmUoZSxuKTt0aGlzLnNtb290aCh0LHIpLHRoaXMuYWZ0ZXIocixuKX19LGJlZm9yZTpmdW5jdGlvbih0LGUpe3JldHVybiByKHQsZSl9LGFmdGVyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGkodCxlKX0sc21vb3RoOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1vLnNtb290aCh0KTtuIT09ITEmJmUubW92ZVRvKHRbMF0ueCx0WzBdLnkpO2Zvcih2YXIgaT0wLGE9ci5sZW5ndGg7aTxhO2krKyl7dmFyIHM9cltpXTtlLmJlemllckN1cnZlVG8oc1sxXSxzWzJdLHNbM10sc1s0XSxzWzVdLHNbNl0pfX19fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUpe3RoaXMueD10LHRoaXMueT1lfXZhciBpPW4oMSk7ci5hZGQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHIodC54K2UueCx0LnkrZS55KX0sci5zdWI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHIodC54LWUueCx0LnktZS55KX0saS5hdWdtZW50KHIse2xlbmd0aDpmdW5jdGlvbigpe3JldHVybiBNYXRoLnNxcnQodGhpcy54KnRoaXMueCt0aGlzLnkqdGhpcy55KX0sbm9ybWFsaXplOmZ1bmN0aW9uKCl7dmFyIHQ9MS90aGlzLmxlbmd0aCgpO3JldHVybiBuZXcgcih0aGlzLngqdCx0aGlzLnkqdCl9LGFkZDpmdW5jdGlvbih0KXtyZXR1cm4gci5hZGQodGhpcyx0KX0sc3ViOmZ1bmN0aW9uKHQpe3JldHVybiByLnN1Yih0aGlzLHQpfSxtdWx0aXBseTpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IHIodGhpcy54KnQsdGhpcy55KnQpfSxkb3Q6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueCp0LngrdGhpcy55KnQueX0sYW5nbGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5kb3QodCkvKHRoaXMubGVuZ3RoKCkqdC5sZW5ndGgoKSk7cmV0dXJuIE1hdGguYWNvcyhlKX0sYW5nbGVUbzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmFuZ2xlKHQpLG49dGhpcy5kaXJlY3Rpb24odCk7cmV0dXJuIG4+PTA/ZToyKk1hdGguUEktZX0semVybzpmdW5jdGlvbigpe3JldHVybiAwPT09dGhpcy54JiYwPT09dGhpcy55fSxkaXJlY3Rpb246ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueCp0LnktdC54KnRoaXMueX0sZGlzdGFuY2VUbzpmdW5jdGlvbih0KXtyZXR1cm4gci5zdWIodGhpcyx0KS5sZW5ndGgoKX0sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcy54LHRoaXMueSl9LGdldFBvaW50OmZ1bmN0aW9uKCl7cmV0dXJue3g6dGhpcy54LHk6dGhpcy55fX19KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1bXCJtaW5cIixcIm1heFwiXSxhPWZ1bmN0aW9uKHQpe3IubWl4KHRoaXMsdCl9O3IuYXVnbWVudChhLHt4U2NhbGU6bnVsbCx5U2NhbGU6bnVsbCxjZmc6e30scGFyc2VQb2ludDpmdW5jdGlvbih0LGUpe3ZhciBuLGE9dGhpcyxzPWEueFNjYWxlLG89YS55U2NhbGUsYz1lWzBdLHU9ZVsxXSxsPXU7aWYoYz1zP3IuaW5kZXhPZihpLGMpIT09LTE/cy5zY2FsZShzW2NdKTpzLnNjYWxlKGMpOjEsbyl7dmFyIGY9by5zY2FsZShsKSxoPW8uc2NhbGUob1tsXSk7bj1yLmluZGV4T2YoaSx1KSE9PS0xP2g6Zn1lbHNlIG49MTtyZXR1cm4gdC5jb252ZXJ0UG9pbnQoe3g6Yyx5Om59KX0scGFpbnQ6ZnVuY3Rpb24oKXt9fSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpO24oMTgpO3ZhciBpPWZ1bmN0aW9uKHQpe3IubWl4KHRoaXMsdCl9O3IuYXVnbWVudChpLHtiZ2ltYWdlRGF0YTpudWxsLGltYWdlRGF0YTpudWxsLHJhdGlvOjEsc3RhcnRQb2ludDp7eDowLHk6MH0sY2VudGVyOnt4OjIwMCx5OjIwMH0scmFkaXVzOjE2MCxyZWR1Y2VNdWx0aXBsZToxLGR1cmF0aW9uOjFlMyxlYXNpbmc6XCJlYXNlSW5PdXRcIixzdWNjZXNzOm51bGwscGFpbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIikscj10LndpZHRoLGk9dC5oZWlnaHQsYT1yL3BhcnNlSW50KHQuc3R5bGUud2lkdGgsMTApO2UucmF0aW89YSxuLnN0eWxlLndpZHRoPXIrXCJweFwiLG4uc3R5bGUuaGVpZ2h0PWkrXCJweFwiLG4ud2lkdGg9cixuLmhlaWdodD1pLGUuZHJhdyh0LG4pfSxkcmF3OmZ1bmN0aW9uKCl7fSxhbmltYXRlU3RlcDpmdW5jdGlvbih0KXt2YXIgZT10aGlzO3IuYW5pbWF0ZVN0ZXAoZnVuY3Rpb24obixyKXtyJWUucmVkdWNlTXVsdGlwbGUhPT0wJiYxIT09bnx8dChuKX0sZS5kdXJhdGlvbixlLmVhc2luZyxlLnN1Y2Nlc3MpfSxjbGVhcjpmdW5jdGlvbih0KXt2YXIgZT10LmdldENvbnRleHQoXCIyZFwiKTtlLmNsZWFyUmVjdCgwLDAsdC53aWR0aCx0LmhlaWdodCl9fSksdC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9ZnVuY3Rpb24odCl7ci5taXgodGhpcyx0KX07aS5wcm90b3R5cGU9e3R5cGU6XCJiYXNlXCIsbmFtZXM6bnVsbCxzY2FsZXM6W10sbWluOjAsbWF4OjEwLG1ldGhvZDpmdW5jdGlvbih0KXtyZXR1cm4gdCoodGhpcy5tYXgtdGhpcy5taW4pK3RoaXMubWlufSxjYWxsYmFjazpmdW5jdGlvbigpe3ZhciB0LGUsbixpPXRoaXMsYT1pLmFycixzPWkuc2NhbGVzLG89ci50b0FycmF5KGFyZ3VtZW50cyksYz1bXTtyZXR1cm4gci5lYWNoKHMsZnVuY3Rpb24ocyx1KXt0PW9bdV0sbj1zLnNjYWxlKHQpLGU9cy50cmFuc2xhdGUodCksXCJpZGVudGl0eVwiPT09cy50eXBlP2MucHVzaChzLnZhbHVlKTpyLmlzQXJyYXkoYSk/Yy5wdXNoKGkuX2dldEFyclZhbHVlKGEscyxuLGUpKTppLm1ldGhvZD9jLnB1c2goaS5tZXRob2QobikpOmMucHVzaChudWxsKX0pLGN9LGdldE5hbWVzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5zY2FsZXMsZT10aGlzLm5hbWVzLG49W107cmV0dXJuIHIuZWFjaCh0LGZ1bmN0aW9uKHQscil7bi5wdXNoKGVbcl0pfSksbn0sZ2V0RGltczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuc2NhbGVzLGU9W107cmV0dXJuIHIuZWFjaCh0LGZ1bmN0aW9uKHQpe2UucHVzaCh0LmRpbSl9KSxlfSxnZXRTY2FsZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnNjYWxlcyxuPXRoaXMubmFtZXMscj1uLmluZGV4T2YodCk7cmV0dXJuIGVbcl19LG1hcHBpbmdWYWx1ZXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnNjYWxlcyxlPXIudG9BcnJheShhcmd1bWVudHMpLG49dGhpcy5jYWxsYmFjayxpPWU7aWYobil7Zm9yKHZhciBhPTA7YTxlLmxlbmd0aDthKyspZVthXT10aGlzLnBhcnNlUGFyYW0oZVthXSx0W2FdKTtpPW4uYXBwbHkodGhpcyxlKX1yZXR1cm4gdGhpcy5uYW1lcyYmMT09PXRoaXMubmFtZXMubGVuZ3RoJiYoaT1baV0pLGl9LHBhcnNlUGFyYW06ZnVuY3Rpb24odCxlKXt2YXIgbj10O3JldHVybiBlLmlzTGluZWFyfHwobj1lLnNjYWxlKHQpLG49ZS5pbnZlcnQobikpLG59LF9nZXRBcnJWYWx1ZTpmdW5jdGlvbih0LGUsbixyKXt2YXIgaT0wO3JldHVybiBlLmlzQ2F0ZWdvcnk/aT1yOmUuaXNMaW5lYXImJihpPXBhcnNlSW50KG4qKHQubGVuZ3RoLTEpLDEwKSksdFtpJXQubGVuZ3RoXX19LHQuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPWZ1bmN0aW9uKHQpe3IubWl4KHRoaXMsdCksdGhpcy5pbml0KCl9O3IuYXVnbWVudChpLHtmb3JtYXR0ZXI6bnVsbCxyYW5nZTpbMCwxXSx0aWNrczpudWxsLGluaXQ6ZnVuY3Rpb24oKXt9LGdldFRpY2tzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQudGlja3Msbj1bXTtyZXR1cm4gci5lYWNoKGUsZnVuY3Rpb24oZSl7dmFyIGk7aT1yLmlzT2JqZWN0KGUpP2U6e3RleHQ6dC5nZXRUZXh0KGUpLHZhbHVlOnQuc2NhbGUoZSl9LG4ucHVzaChpKX0pLG59LGdldFRleHQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5mb3JtYXR0ZXI7cmV0dXJuIHQ9ZT9lKHQpOnQsIXIuaXNOdWxsKHQpJiZ0LnRvU3RyaW5nfHwodD1cIlwiKSx0LnRvU3RyaW5nKCl9LHJhbmdlTWluOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmFuZ2VbMF19LHJhbmdlTWF4OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5yYW5nZTtyZXR1cm4gdFt0Lmxlbmd0aC0xXX0saW52ZXJ0OmZ1bmN0aW9uKCl7fSx0cmFuc2xhdGU6ZnVuY3Rpb24odCl7cmV0dXJuIHR9LHNjYWxlOmZ1bmN0aW9uKCl7fSxjbG9uZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmNvbnN0cnVjdG9yLG49e307cmV0dXJuIHIuZWFjaCh0LGZ1bmN0aW9uKGUscil7bltyXT10W3JdfSksbmV3IGUobil9LGNoYW5nZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aWNrcz1udWxsLHIubWl4KHRoaXMsdCksdGhpcy5pbml0KCksdGhpc319KSx0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7ci5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KSx0aGlzLl9pbml0KCl9dmFyIGk9bigxKSxhPW4oNikscz1uKDQ3KSxvPVtcImNvbG9yXCIsXCJzaXplXCIsXCJzaGFwZVwiXSxjPW4oNSksdT1cIl9vcmlnaW5cIjtzLkJhc2UucHJvdG90eXBlLnNvcnQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRYU2NhbGUoKSxuPVtdO2lmKFwiY2F0XCI9PT1lLnR5cGV8fFwidGltZUNhdFwiPT09ZS50eXBlKW49dC5zbGljZSgwKTtlbHNle3ZhciByPXRoaXMuZ2V0WERpbSgpO2kuZWFjaCh0LGZ1bmN0aW9uKHQpe24ucHVzaChjLnNvcnQodCxyKSl9KX1yZXR1cm4gbn0sci5BVFRSUz17Y29yZVR5cGU6bnVsbCxmcmFtZXM6bnVsbCxhdHRyczpudWxsLGNvbnRhaW5lcjpudWxsLHN0eWxlQ2ZnOm51bGx9LGkuZXh0ZW5kKHIsYSksaS5hdWdtZW50KHIse19pbml0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJjb3JlVHlwZVwiKSxlPW5ldyBzW3RdKHthdHRyczp0aGlzLmdldChcImF0dHJzXCIpLGNvbnRhaW5lcjp0aGlzLmdldChcImNvbnRhaW5lclwiKSxzdHlsZUNmZzp0aGlzLmdldChcInN0eWxlQ2ZnXCIpfSk7dGhpcy5zZXQoXCJjb3JlXCIsZSksdGhpcy5wcm9jZXNzQ29yZSgpfSxfZ2V0R3JvdXBTY2FsZXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImNvcmVcIiksZT1bXTtyZXR1cm4gaS5lYWNoKG8sZnVuY3Rpb24obil7dmFyIHI9dC5nZXRBdHRyKG4pO2lmKHIpe3ZhciBhPXIuc2NhbGVzO2kuZWFjaChhLGZ1bmN0aW9uKHQpe3QmJnQuaXNDYXRlZ29yeSYmaS5pbmRleE9mKGUsdCk9PT0tMSYmZS5wdXNoKHQpfSl9fSksZX0sX2dyb3VwRnJhbWVzOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1bXSxyPWUuX2dldEdyb3VwU2NhbGVzKCk7cmV0dXJuIGkuZWFjaChyLGZ1bmN0aW9uKHQpe24ucHVzaCh0LmRpbSl9KSxjLmdyb3VwKHQsbil9LHByb2Nlc3NDb3JlOmZ1bmN0aW9uKCl7fSxpbml0RGF0YTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9ncm91cEZyYW1lcyh0KTtlPXRoaXMuX3NhdmVPcmlnaW5EYXRhKGUpLGU9dGhpcy5wcm9jZXNzRnJhbWVzKGUpLHRoaXMuc2V0KFwiZnJhbWVzXCIsZSl9LHByb2Nlc3NGcmFtZXM6ZnVuY3Rpb24odCl7cmV0dXJuIHR9LF9zYXZlT3JpZ2luRGF0YTpmdW5jdGlvbih0KXtyZXR1cm4gaS5lYWNoKHQsZnVuY3Rpb24odCl7dmFyIGU9dC50b0pTT04oKTt0LmFkZENvbCh1LGUpfSksdH0sZHJhdzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldChcImZyYW1lc1wiKSxuPXRoaXMuZ2V0KFwiY29yZVwiKTt0JiZuLnNldChcImNvbnRhaW5lclwiLHQpLG4uZHJhdyhlKX0sZ2V0WFNjYWxlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJjb3JlXCIpO3JldHVybiB0LmdldFhTY2FsZSgpfSxnZXRZU2NhbGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImNvcmVcIik7cmV0dXJuIHQuZ2V0WVNjYWxlKCl9LF9pc1N0YWNrOmZ1bmN0aW9uKHQpe3ZhciBlPSExO3JldHVyblwiaW50ZXJ2YWxTdGFja1wiIT09dCYmXCJhcmVhU3RhY2tcIiE9PXR8fChlPSEwKSxlfSxfZ2V0U25hcDpmdW5jdGlvbih0LGUpe3ZhciBuLHI9MCxpPXRoaXMuZ2V0KFwiYXR0cnNcIilbMF0uZGltc1sxXTtpZih0aGlzLl9pc1N0YWNrKHRoaXMuZ2V0KFwidHlwZVwiKSkmJnQuZGltPT09aSl7dmFyIGE9dGhpcy5nZXQoXCJmcmFtZXNcIik7Zm9yKG49W10sYS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uKGUpe24ucHVzaChlW3QuZGltXSl9KX0pO3I8bi5sZW5ndGgmJiEoblswXVswXT5lKTtyKyspe2lmKG5bbi5sZW5ndGgtMV1bMV08PWUpe3I9bi5sZW5ndGgtMTticmVha31pZihuW3JdWzBdPD1lJiZuW3JdWzFdPmUpYnJlYWt9fWVsc2UgZm9yKG49dC52YWx1ZXMsbi5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQtZX0pO3I8bi5sZW5ndGgmJiEoKG5bMF0rblsxXSkvMj5lKSYmISgobltyLTFdK25bcl0pLzI8PWUmJihuW3IrMV0rbltyXSkvMj5lKTtyKyspaWYoKG5bbi5sZW5ndGgtMl0rbltuLmxlbmd0aC0xXSkvMjw9ZSl7cj1uLmxlbmd0aC0xO2JyZWFrfXZhciBzPW5bcl07cmV0dXJuIHN9LGdldFNuYXBSZWNvcmRzOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZ2V0KFwiY29vcmRcIiksYT1uLmdldFhTY2FsZSgpLHM9bi5nZXRZU2NhbGUoKSxvPWEuZGltLGM9cy5kaW0sdT1yLmludmVydFBvaW50KHQpLGw9bi5nZXQoXCJmcmFtZXNcIiksZj1bXTtpZihlPT09Yyl7dmFyIGg9cy5pbnZlcnQodS55KTtzLmlzQ2F0ZWdvcnl8fChoPW4uX2dldFNuYXAocyxoKSksaS5lYWNoKGwsZnVuY3Rpb24odCl7dC5lYWNoKGZ1bmN0aW9uKHQpeyhpLmlzQXJyYXkoaCk/aS5lcXVhbHNBcnJheSh0W2NdLGgpOnRbY109PT1oKSYmZi5wdXNoKHQpfSl9KX1lbHNle3ZhciBnPWEuaW52ZXJ0KHUueCk7YS5pc0NhdGVnb3J5fHwoZz1uLl9nZXRTbmFwKGEsZykpLGkuZWFjaChsLGZ1bmN0aW9uKHQpe3QuZWFjaChmdW5jdGlvbih0KXt0W29dPT09ZyYmZi5wdXNoKHQpfSl9KX1yZXR1cm4gZn0sZ2V0QWxsU2hhcGVEYXRhOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXQoXCJjb3JlXCIpO3JldHVybiB0LmdldChcInNoYXBlRGF0YXNcIil9fSksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigxNyksYT1uKDMpO3IubWl4KGkuU2hhcGVCYXNlLHtwYXJzZVBvaW50OmZ1bmN0aW9uKHQpezE9PT10LngmJih0Lng9Ljk5OTk5OTkpLDE9PT10LnkmJih0Lnk9Ljk5OTk5OTkpO3ZhciBlPXRoaXMuX2Nvb3JkO3JldHVybiBlLmNvbnZlcnRQb2ludCh0KX0scGFyc2VQb2ludHM6ZnVuY3Rpb24odCl7aWYoIXQpcmV0dXJuITE7dmFyIGU9dGhpcyxuPVtdO3JldHVybiByLmVhY2godCxmdW5jdGlvbih0KXtuLnB1c2goZS5wYXJzZVBvaW50KHQpKX0pLG59fSksci5taXgoaS5HZW9tU2hhcGUse2RyYXdTaGFwZTpmdW5jdGlvbih0LGUsbil7dmFyIHI9dGhpcy5nZXRTaGFwZSh0KTtyZXR1cm4gZS5jb2xvcnx8KGUuY29sb3I9YS5jb2xvcnNbMF0pLHIuZHJhd1NoYXBlKGUsbil9fSksdC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj17fTtyLm51bWJlcj1uKDc0KSxyLnRpbWU9big3NSksci5jYXRlZ29yeT1uKDczKSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTMpO3IuTGluZT1uKDEwMCksci5Qb2ludD1uKDEwMSksci5JbnRlcnZhbD1uKDMyKSxyLkludGVydmFsU3RhY2s9big5OSksci5TdGFja01peGluPW4oMzMpLHIuV2lkdGhNaXhpbj1uKDM0KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT17fSxhPXtkZWZhdWx0U2hhcGVUeXBlOm51bGwsZ2V0U2hhcGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWVbdF18fGVbZS5kZWZhdWx0U2hhcGVUeXBlXXx8aS5TaGFwZUJhc2U7cmV0dXJuIG4uX2Nvb3JkPWUuX2Nvb3JkLG59LGdldFNoYXBlUG9pbnRzOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5nZXRTaGFwZSh0KTtyZXR1cm4gbi5nZXRTaGFwZVBvaW50cyhlKX0sZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10aGlzLmdldFNoYXBlKHQpO3JldHVybiByLmRyYXdTaGFwZShlLG4pfX0scz17X2Nvb3JkOm51bGwsZHJhd1NoYXBlOmZ1bmN0aW9uKCl7fSxnZXRTaGFwZVBvaW50czpmdW5jdGlvbigpe319O2kucmVnaXN0R2VvbT1mdW5jdGlvbih0LGUpe3ZhciBuPXIudWNmaXJzdCh0KSxzPXIubWl4KHt9LGEsZSk7cmV0dXJuIGlbbl09cyxzLmNsYXNzTmFtZT1uLHN9LGkucmVnaXN0U2hhcGU9ZnVuY3Rpb24odCxlLG4pe3ZhciBhPXIudWNmaXJzdCh0KSxzPWlbYV0sbz1zLmdldFNoYXBlKCksYz1yLm1peCh7fSxvLG4pO3JldHVybiBzW2VdPWMsY30saS5nZXRTaGFwZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiB0PXR8fFwicG9pbnRcIix0PXIudWNmaXJzdCh0KSxlW3RdfHxpLlNoYXBlQmFzZX0saS5HZW9tU2hhcGU9YSxpLlNoYXBlQmFzZT1zLHQuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcigpe3JldHVybisrYX12YXIgaT1uKDEpLGE9MCxzPXt9LG89TWF0aC5wb3csYz1NYXRoLHU9TWF0aC5hYnMsbD17bGluZWFyOmZ1bmN0aW9uKHQpe3JldHVybiB0fSxlYXNlSW46ZnVuY3Rpb24odCl7cmV0dXJuIG8odCwxLjcpfSxlYXNlT3V0OmZ1bmN0aW9uKHQpe3JldHVybiBvKHQsLjQ4KX0sZWFzZUluT3V0OmZ1bmN0aW9uKHQpe3ZhciBlPS40OC10LzEuMDQsbj1jLnNxcnQoLjE3MzQrZSplKSxyPW4tZSxpPW8odShyKSwxLzMpKihyPDA/LTE6MSksYT0tbi1lLHM9byh1KGEpLDEvMykqKGE8MD8tMToxKSxsPWkrcysuNTtyZXR1cm4gMyooMS1sKSpsKmwrbCpsKmx9LGJhY2tJbjpmdW5jdGlvbih0KXt2YXIgZT0xLjcwMTU4O3JldHVybiB0KnQqKChlKzEpKnQtZSl9LGJhY2tPdXQ6ZnVuY3Rpb24odCl7dC09MTt2YXIgZT0xLjcwMTU4O3JldHVybiB0KnQqKChlKzEpKnQrZSkrMX0sZWxhc3RpYzpmdW5jdGlvbih0KXtyZXR1cm4gdD09PSEhdD90Om8oMiwtMTAqdCkqYy5zaW4oKHQtLjA3NSkqKDIqTWF0aC5QSSkvLjMpKzF9LGJvdW5jZTpmdW5jdGlvbih0KXt2YXIgZSxuPTcuNTYyNSxyPTIuNzU7cmV0dXJuIHQ8MS9yP2U9bip0KnQ6dDwyL3I/KHQtPTEuNS9yLGU9bip0KnQrLjc1KTp0PDIuNS9yPyh0LT0yLjI1L3IsZT1uKnQqdCsuOTM3NSk6KHQtPTIuNjI1L3IsZT1uKnQqdCsuOTg0Mzc1KSxlfX07aS5taXgoaSx7YW5pbWF0ZVN0ZXA6ZnVuY3Rpb24odCxlLG4sYSl7ZnVuY3Rpb24gbyh0LGUscixhKXt2YXIgZj0obmV3IERhdGUpLmdldFRpbWUoKSxoPWYtYztpZihoPj1yKXJldHVybiBlKDEsdCksdm9pZChhJiZhKCkpO3ZhciBnPWxbbnx8XCJsaW5lYXJcIl0scD1nKGgvcik7ZShwLHQpLHNbdV09aS5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24oKXtvKHQrMSxlLHIsYSl9KX12YXIgYz0obmV3IERhdGUpLmdldFRpbWUoKSx1PXIoKTtyZXR1cm4gbygwLHQsZSxhKSx1fSxzdG9wU3RlcDpmdW5jdGlvbih0KXtzW3RdJiYoaS5jYW5jZWxBbmltYXRpb25GcmFtZSgpKHNbdF0pLGRlbGV0ZSBzW3RdKX19KSx0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1bXCJjb2xvclwiLFwic2hhcGVcIixcInNpemVcIixcIm9wYWNpdHlcIl0sYT1cIl9vcmlnaW5cIjt0LmV4cG9ydHM9e2dldFNoYXBlRGF0YTpmdW5jdGlvbih0KXt2YXIgZT17fSxuPXQudG9KU09OKCkscz1uWzBdLG89dC5jb2xBcnJheShcIl9vcmlnaW5cIik7cmV0dXJuIHIuZWFjaChpLGZ1bmN0aW9uKHQpe3MuaGFzT3duUHJvcGVydHkodCkmJihlW3RdPXNbdF0pfSksZVthXT1vLGV9fX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSk7dC5leHBvcnRzPXtzcGxpdERhdGE6ZnVuY3Rpb24odCl7aWYoIXQubGVuZ3RoKXJldHVybltdO3ZhciBlLG49W10saT1bXSxhPXRoaXMuZ2V0WURpbSgpO3JldHVybiByLmVhY2godCxmdW5jdGlvbih0KXtlPXQuX29yaWdpbj90Ll9vcmlnaW5bYV06dFthXSxyLmlzQXJyYXkoZSkmJnIuaXNOdWxsKGVbMF0pfHxyLmlzTnVsbChlKT8obi5wdXNoKGkpLGk9W10pOmkucHVzaCh0KX0pLG4ucHVzaChpKSxufX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3Iuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9dmFyIGk9bigxKSxhPW4oNCkscz1uKDIwKSxvPW4oMTkpO2kuZXh0ZW5kKHIsYSksaS5taXhpbihyLFtzLG9dKSxyLkFUVFJTPXt0eXBlOlwicGF0aFwiLHNoYXBlVHlwZTpcImxpbmVcIn0saS5hdWdtZW50KHIse2RyYXdGcmFtZTpmdW5jdGlvbih0LGUpe3ZhciBuLHIsYSxzPXRoaXMsbz10LnRvSlNPTigpLGM9dGhpcy5zcGxpdERhdGEobyksdT10aGlzLmdldChcImNvbnRhaW5lclwiKSxsPXRoaXMuZ2V0KFwic2hhcGVPYmpcIiksZj1vWzBdLGg9dGhpcy5nZXREcmF3Q2ZnKGYpLGc9Zi5wb2ludHMubGVuZ3RoO2YuaW5kZXg9ZSxoPXRoaXMuZ2V0RHJhd0NmZyhmKTt2YXIgcD1zLmdldChcImFkanVzdHNcIiksdj1wJiZpLmluZGV4T2YocCxcIlN0YWNrXCIpIT09LTEsZD1zLmdldFNoYXBlRGF0YSh0KTtzLmdldChcInNoYXBlRGF0YXNcIikucHVzaChkKSxpLmVhY2goYyxmdW5jdGlvbih0LGUpe2guc3BsaXRlZEluZGV4PWU7Zm9yKHZhciBpPTA7aTxnO2krKylpZihuPVtdLCF2fHwwIT09aSl7Zm9yKHZhciBvPTA7bzx0Lmxlbmd0aDtvKyspYT10W29dLG4ucHVzaChhLnBvaW50c1tpXSk7aWYoMD09PW4ubGVuZ3RoKXJldHVybjtoLnBvaW50cz1uLGguaW5kZXg9aSxyPXMuZ2V0RHJhd1NoYXBlKGguc2hhcGUpLGwuZHJhd1NoYXBlKHIsaCx1KX19KX0sX2dldEpvaW5JZEF0dHI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImF0dHJzXCIpLGU9W107cmV0dXJuIGkuZWFjaCh0LGZ1bmN0aW9uKHQpe1wicG9zaXRpb25cIiE9PXQudHlwZSYmZS5wdXNoKHQpfSksZX19KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMSksaT1mdW5jdGlvbih0LGUpe3RoaXMuZGF0YT10LHIubWl4KHRoaXMsZSksdGhpcy5pbml0RnJhbWUoKX07aS5wcm90b3R5cGU9e2lzRnJhbWU6ITAsaW5pdEZyYW1lOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZGF0YSxuPXQuY29sTmFtZXMoKSxpPXQuYXJyO2lmKHIuaXNBcnJheShlWzBdKSYmKGk9dC5hcnI9ZSksIWkpe2k9W107Zm9yKHZhciBhPTA7YTxuLmxlbmd0aDthKyspe2Zvcih2YXIgcz1bXSxvPW5bYV0sYz0wO2M8ZS5sZW5ndGg7YysrKXMucHVzaChlW2NdW29dKTtpLnB1c2gocyl9dC5hcnI9aX19LGNvbnRhaW5zOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY29sTmFtZXMoKTtyZXR1cm4gci5pbmRleE9mKGUsdCkhPT0tMX0sY29sTmFtZXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5uYW1lcztpZighZSl7dmFyIG49dGhpcy5kYXRhLGk9blswXTtlPVtdLGkmJnIuZWFjaChpLGZ1bmN0aW9uKHQsbil7ZS5wdXNoKG4pfSksdC5uYW1lcz1lfXJldHVybiBlfSxyb3dDb3VudDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmFycjtyZXR1cm4gZSYmZS5sZW5ndGg/ZVswXS5sZW5ndGg6MH0sY29sQ291bnQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5jb2xOYW1lcygpO3JldHVybiBlP2UubGVuZ3RoOjB9LGNvbEluZGV4OmZ1bmN0aW9uKHQpe3JldHVybiByLmluZGV4T2YodGhpcy5uYW1lcyx0KX0sY29sQXJyYXk6ZnVuY3Rpb24odCl7dmFyIGU9dDtyZXR1cm4gci5pc1N0cmluZyh0KSYmKGU9dGhpcy5jb2xJbmRleCh0KSksdGhpcy5hcnJbZV19LGNvbFJlcGxhY2U6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmFycixpPXRoaXMuY29sTmFtZXMoKTtpZihyLmlzU3RyaW5nKHQpKXt2YXIgYT10O3Q9ci5pbmRleE9mKGksYSl9cmV0dXJuIG5bdF09ZSx0aGlzfSxlYWNoOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLG49ZS5yb3dDb3VudCgpLHI9MDtyPG47cisrKXt2YXIgaT1lLl9nZXRPYmplY3Qocik7dChpLHIpfXJldHVybiBlfSxyb3dPYmplY3Q6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2dldE9iamVjdCh0KX0sX2dldE9iamVjdDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmFycixpPXt9O2U9ZXx8bi5jb2xOYW1lcygpO2Zvcih2YXIgYT0wO2E8ZS5sZW5ndGg7YSsrKWlbZVthXV09clthXVt0XTtyZXR1cm4gaX0sYWRkQ29sOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztpZihyLmlzRnVuY3Rpb24oZSkpe3ZhciBpPWU7ZT1bXSxuLmVhY2goZnVuY3Rpb24odCxuKXt2YXIgcj1pKHQsbik7ZS5wdXNoKHIpfSl9bi5uYW1lcy5wdXNoKHQpLG4uYXJyLnB1c2goZSl9LHRvQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hcnJ9LHRvSlNPTjpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLGU9dC5yb3dDb3VudCgpLG49W10scj0wO3I8ZTtyKyspbi5wdXNoKHQuX2dldE9iamVjdChyKSk7cmV0dXJuIG59fSx0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBuKHQpe2Zvcih2YXIgZT0xO3Q+MTA7KWU9MTAqZSx0Lz0xMDtmb3IoO3Q8MTspZS89MTAsdD0xMCp0O3JldHVybiBlfWZ1bmN0aW9uIHIodCxlKXt2YXIgbj10Lmxlbmd0aDtpZigwPT09bilyZXR1cm4gTmFOO3ZhciByPXRbMF07aWYoZTx0WzBdKXJldHVybiBOYU47aWYoZT49dFtuLTFdKXJldHVybiB0W24tMV07Zm9yKHZhciBpPTE7aTx0Lmxlbmd0aCYmIShlPHRbaV0pO2krKylyPXRbaV07cmV0dXJuIHJ9ZnVuY3Rpb24gaSh0LGUpe3ZhciBuPXQubGVuZ3RoO2lmKDA9PT1uKXJldHVybiBOYU47dmFyIHIsaT10WzBdO2lmKGU+dFtuLTFdKXJldHVybiBOYU47aWYoZTx0WzBdKXJldHVybiB0WzBdO2Zvcih2YXIgYT0xO2E8dC5sZW5ndGg7YSsrKXtpZihlPD10W2FdKXtyPXRbYV07YnJlYWt9aT10W2FdfXJldHVybiByfXZhciBhPXtzbmFwRmFjdG9yVG86ZnVuY3Rpb24odCxlLHIpe3ZhciBpPTE7dDwwJiYoaT0tMSksdCo9aTt2YXIgcz1uKHQpO3JldHVybiBpKj1zLHQvPXMsdD1cImZsb29yXCI9PT1yP2Euc25hcEZsb29yKGUsdCk6XCJjZWlsXCI9PT1yP2Euc25hcENlaWxpbmcoZSx0KTphLnNuYXBUbyhlLHQpLHQqaX0sc25hcE11bHRpcGxlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcjtyZXR1cm4gcj1uP01hdGguY2VpbCh0L2UsMTApOk1hdGguZmxvb3IodC9lLDEwKSxyKmV9LHNuYXBUbzpmdW5jdGlvbih0LGUpe3ZhciBuPXIodCxlKSxhPWkodCxlKTtpZihpc05hTihuKXx8aXNOYU4oYSkpe2lmKHRbMF0+PWUpcmV0dXJuIHRbMF07dmFyIHM9dFt0Lmxlbmd0aC0xXTtpZihzPD1lKXJldHVybiBzfXJldHVybiBNYXRoLmFicyhlLW4pPE1hdGguYWJzKGEtZSk/bjphfSxzbmFwRmxvb3I6ZnVuY3Rpb24odCxlKXtyZXR1cm4gcih0LGUpfSxzbmFwQ2VpbGluZzpmdW5jdGlvbih0LGUpe3JldHVybiBpKHQsZSl9fTt0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMSksaT1uKDEyKTtpLkxpbmVhcj1uKDc4KSxpLmxpbmVhcj1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGkuTGluZWFyKHQpfSxpLkNhdD1uKDI1KSxpLmNhdD1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGkuQ2F0KHQpfSxpLklkZW50aXR5PW4oNzcpLGkuST1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGkuSWRlbnRpdHkodCl9LGkuVGltZUNhdD1uKDc5KSxpLnRpbWVDYXQ9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBpLlRpbWVDYXQodCl9LGkuSV9UWVBFPVwiaWRlbnRpdHlcIixpLmlzQ2F0ZWdvcnk9ZnVuY3Rpb24odCl7aWYoXCJjYXRcIj09PXQpcmV0dXJuITA7dmFyIGU9ci51Y2ZpcnN0KHQpO3JldHVybiEoIWlbZV18fCFpW2VdLnN1cGVyY2xhc3N8fFwiY2F0XCIhPT1pW2VdLnN1cGVyY2xhc3MudHlwZSl9LHQuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxMiksaT1uKDEpLGE9bigxNSkscz1mdW5jdGlvbih0KXtzLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtpLmV4dGVuZChzLHIpLGkuYXVnbWVudChzLHt0eXBlOlwiY2F0XCIsdGlja0NvdW50Om51bGwsaXNDYXRlZ29yeTohMCxpbml0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQudmFsdWVzLG49dC50aWNrQ291bnQ7aWYoaS5lYWNoKGUsZnVuY3Rpb24odCxuKXtlW25dPXQudG9TdHJpbmcoKX0pLCF0LnRpY2tzKXt2YXIgcj1lO2lmKG4pe3ZhciBzPWEuY2F0ZWdvcnkoe21heENvdW50Om4sZGF0YTplfSk7cj1zLnRpY2tzfXRoaXMudGlja3M9cn19LGdldFRleHQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudmFsdWVzLmluZGV4T2YodCk+LTE/dD10OmkuaXNOdW1iZXIodCkmJih0PXRoaXMudmFsdWVzW01hdGgucm91bmQodCldKSxzLnN1cGVyY2xhc3MuZ2V0VGV4dC5jYWxsKHRoaXMsdCl9LHRyYW5zbGF0ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnZhbHVlcy5pbmRleE9mKHQpO3JldHVybiBlPT09LTEmJmkuaXNOdW1iZXIodCk/ZT10OmU9PT0tMSYmKGU9TmFOKSxlfSxzY2FsZTpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMucmFuZ2VNaW4oKSxyPXRoaXMucmFuZ2VNYXgoKTtyZXR1cm4oaS5pc1N0cmluZyh0KXx8dGhpcy52YWx1ZXMuaW5kZXhPZih0KSE9PS0xKSYmKHQ9dGhpcy50cmFuc2xhdGUodCkpLGU9dGhpcy52YWx1ZXMubGVuZ3RoPjE/dC8odGhpcy52YWx1ZXMubGVuZ3RoLTEpOnQsbitlKihyLW4pfSxpbnZlcnQ6ZnVuY3Rpb24odCl7aWYoaS5pc1N0cmluZyh0KSlyZXR1cm4gdDt2YXIgZT10aGlzLnJhbmdlTWluKCksbj10aGlzLnJhbmdlTWF4KCk7dDxlJiYodD1lKSx0Pm4mJih0PW4pO3ZhciByPSh0LWUpLyhuLWUpLGE9TWF0aC5yb3VuZChyKih0aGlzLnZhbHVlcy5sZW5ndGgtMSkpJXRoaXMudmFsdWVzLmxlbmd0aDtyZXR1cm4gYT1hfHwwLHRoaXMudmFsdWVzW2FdfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfXZhciBpPW4oMSksYT1uKDIpLHM9YS5HZW9tO3IuQVRUUlM9e2NvcmVUeXBlOlwiQXJlYVwifSxpLmV4dGVuZChyLHMpLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMyksYT1mdW5jdGlvbih0KXtyLm1peCh0aGlzLHQpfTtyLmF1Z21lbnQoYSx7YW5pbWF0ZTpudWxsLHNldEltYWdlRGF0YTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7bi5hbmltYXRlLmltYWdlRGF0YT10LG4uYW5pbWF0ZS5iZ0ltYWdlRGF0YT1lfSxzZXRTdGFydFBvaW50OmZ1bmN0aW9uKHQpe3RoaXMuYW5pbWF0ZS5zdGFydFBvaW50PXR9LHNldFBvbGFyOmZ1bmN0aW9uKHQsZSl7dGhpcy5hbmltYXRlLmNlbnRlcj10LHRoaXMuYW5pbWF0ZS5yYWRpdXM9ZX0sc2V0Q2FsbEJhY2s6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5hbmltYXRlLnN1Y2Nlc3Msbj1udWxsO249ci5pc0Z1bmN0aW9uKGUpP2Z1bmN0aW9uKCl7dCgpLGUoKX06dCx0aGlzLmFuaW1hdGUuc3VjY2Vzcz1ufSxwYWludDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmFuaW1hdGU7ZS5jeWNsZT1pLmFuaW1hdGVSZWR1Y2VNdWx0aXBsZSxlLnBhaW50KHQpfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oNiksYT1uKDcpLHM9big4KSxvPWZ1bmN0aW9uKHQpe28uc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCksdGhpcy5pbml0KCl9O28uQVRUUlM9e3RpY2tzOltdLHRpY2tMaW5lOnt9LG9mZnNldEZhY3RvcjoxLGNhbnZhczpudWxsLGdyaWRQb2ludHM6W119LHIuZXh0ZW5kKG8saSksci5hdWdtZW50KG8se2luaXQ6ZnVuY3Rpb24oKXt9LGRyYXc6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJsaW5lXCIpLG49dC5nZXQoXCJ0aWNrTGluZVwiKSxyPXQuZ2V0KFwibGFiZWxcIik7ZSYmdC5kcmF3TGluZShlKSxuJiZ0LmRyYXdUaWNrcyhuKSxyJiZ0LmRyYXdMYWJlbHMocil9LGRyYXdHcmlkOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiZ3JpZFwiKTtpZihlKXt2YXIgbixpPXQuZ2V0KFwiY2FudmFzXCIpLHM9dC5nZXQoXCJncmlkUG9pbnRzXCIpLG89dC5nZXQoXCJ0aWNrc1wiKSxjPXMubGVuZ3RoO3IuZWFjaChzLGZ1bmN0aW9uKHQscyl7aWYoci5pc0Z1bmN0aW9uKGUpKXt2YXIgdT1vW3NdfHx7fTtuPWUodS50ZXh0LHMsYyl9ZWxzZSBuPWU7biYmYS5kcmF3TGluZXModCxpLG4pfSl9fSxnZXRPZmZzZXRQb2ludDpmdW5jdGlvbigpe30sZ2V0QXhpc1ZlY3RvcjpmdW5jdGlvbigpe30sZ2V0T2Zmc2V0VmVjdG9yOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZ2V0QXhpc1ZlY3Rvcih0KSxpPXIubm9ybWFsaXplKCksYT1uLmdldChcIm9mZnNldEZhY3RvclwiKSxvPW5ldyBzKGkueSotMSphLGkueCphKTtyZXR1cm4gby5tdWx0aXBseShlKX0sZ2V0U2lkZVBvaW50OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZ2V0T2Zmc2V0VmVjdG9yKHQsZSk7cmV0dXJue3g6dC54K3IueCx5OnQueStyLnl9fSxkcmF3VGlja3M6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0KFwidGlja3NcIiksaT10LnZhbHVlLHM9ZS5nZXQoXCJjYW52YXNcIik7ci5lYWNoKG4sZnVuY3Rpb24obil7dmFyIHI9ZS5nZXRPZmZzZXRQb2ludChuLnZhbHVlKSxvPWUuZ2V0U2lkZVBvaW50KHIsaSk7YS5kcmF3TGluZShyLG8scyx0KX0pfSxnZXRUZXh0QWxpZ25JbmZvOmZ1bmN0aW9uKHQsZSl7dmFyIG4scixpPXRoaXMsYT1pLmdldE9mZnNldFZlY3Rvcih0LGUpO3JldHVybiBuPWEueD4wP1wibGVmdFwiOmEueDwwP1wicmlnaHRcIjpcImNlbnRlclwiLHI9YS55PjA/XCJ0b3BcIjphLnk8MD9cImJvdHRvbVwiOlwibWlkZGxlXCIse3RleHRBbGlnbjpuLHRleHRCYXNlbGluZTpyfX0sZHJhd0xhYmVsczpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMsaT1uLmdldChcInRpY2tzXCIpLHM9bi5nZXQoXCJjYW52YXNcIiksbz1pLmxlbmd0aDtyLmVhY2goaSxmdW5jdGlvbihpLGMpe2lmKGU9ci5pc0Z1bmN0aW9uKHQpP3QoaS50ZXh0LGMsbyk6dCl7dmFyIHU9bi5nZXQoXCJsYWJlbE9mZnNldFwiKSxsPW4uZ2V0T2Zmc2V0UG9pbnQoaS52YWx1ZSksZj1uLmdldFNpZGVQb2ludChsLHUpLGg9ci5taXgoe30sbi5nZXRUZXh0QWxpZ25JbmZvKGwsdSksZSk7YS5kcmF3VGV4dChoLnRleHR8fGkudGV4dCxmLHMsaCl9fSl9LGRyYXdMaW5lOmZ1bmN0aW9uKCl7fX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpLHRoaXMuX19pbml0KCl9dmFyIGk9bigxKSxhPW4oNik7ci5BVFRSUz17dHlwZTpcImNhcnRlc2lhblwiLHRyYW5zcG9zZWQ6ITF9LGkuZXh0ZW5kKHIsYSksaS5hdWdtZW50KHIse2lzUmVjdDohMCxpc1RyYW5zcG9zZWQ6ITEsX19pbml0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwicGxvdFwiKSxuPXtzdGFydDplLmdldChcImJsXCIpLngsZW5kOmUuZ2V0KFwiYnJcIikueH0scj17c3RhcnQ6ZS5nZXQoXCJibFwiKS55LGVuZDplLmdldChcInRsXCIpLnl9O3RoaXMuaXNUcmFuc3Bvc2VkPXQuZ2V0KFwidHJhbnNwb3NlZFwiKSx0LnNldChcInhcIixuKSx0LnNldChcInlcIixyKX0sY29udmVydFBvaW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmlzVHJhbnNwb3NlZCxyPW4/XCJ5XCI6XCJ4XCIsaT1uP1wieFwiOlwieVwiLGE9ZS5nZXQoXCJ4XCIpLHM9ZS5nZXQoXCJ5XCIpO3JldHVybnt4OmEuc3RhcnQrKGEuZW5kLWEuc3RhcnQpKnRbcl0seTpzLnN0YXJ0KyhzLmVuZC1zLnN0YXJ0KSp0W2ldfX0saW52ZXJ0UG9pbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuaXNUcmFuc3Bvc2VkLHI9bj9cInlcIjpcInhcIixpPW4/XCJ4XCI6XCJ5XCIsYT1lLmdldChcInhcIikscz1lLmdldChcInlcIiksbz17fTtyZXR1cm4gb1tyXT0odC54LWEuc3RhcnQpLyhhLmVuZC1hLnN0YXJ0KSxvW2ldPSh0Lnktcy5zdGFydCkvKHMuZW5kLXMuc3RhcnQpLG99fSksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt0LmV4cG9ydHM9e1JlY3Q6bigyOSksQ2FydGVzaWFuOm4oMjkpLFBvbGFyOm4oMzEpLENpcmNsZTpuKDMxKX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3Iuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCksdGhpcy5fX2luaXQoKX12YXIgaT1uKDEpLGE9big2KSxzPW4oOCk7ci5BVFRSUz17c3RhcnRBbmdsZTotTWF0aC5QSS8yLGVuZEFuZ2xlOjMqTWF0aC5QSS8yLGlubmVyOjAsdHlwZTpcInBvbGFyXCJ9LGkuZXh0ZW5kKHIsYSksaS5hdWdtZW50KHIse2lzUG9sYXI6ITAsaXNUcmFuc3Bvc2VkOiExLF9faW5pdDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcInBsb3RcIiksbj10LmdldChcImlubmVyXCIpLHI9TWF0aC5taW4oZS5nZXQoXCJ3aWR0aFwiKSxlLmdldChcImhlaWdodFwiKSkvMixpPXtzdGFydDp0LmdldChcInN0YXJ0QW5nbGVcIiksZW5kOnQuZ2V0KFwiZW5kQW5nbGVcIil9LGE9e3N0YXJ0OnIqbixlbmQ6cn0scz17eDooZS5nZXQoXCJibFwiKS54K2UuZ2V0KFwiYnJcIikueCkvMix5OihlLmdldChcInRsXCIpLnkrZS5nZXQoXCJibFwiKS55KS8yfTt0aGlzLmlzVHJhbnNwb3NlZD10LmdldChcInRyYW5zcG9zZWRcIiksdC5zZXQoXCJjZW50ZXJcIixzKSx0LnNldChcInJhZGl1c1wiLHIpLHQuc2V0KFwieFwiLGkpLHQuc2V0KFwieVwiLGEpfSxjb252ZXJ0UG9pbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0KFwiY2VudGVyXCIpLHI9ZS5pc1RyYW5zcG9zZWQsaT1yP1wieVwiOlwieFwiLGE9cj9cInhcIjpcInlcIixzPWUuZ2V0KFwieFwiKSxvPWUuZ2V0KFwieVwiKSxjPXMuc3RhcnQrKHMuZW5kLXMuc3RhcnQpKnRbaV0sdT1vLnN0YXJ0KyhvLmVuZC1vLnN0YXJ0KSp0W2FdO3JldHVybnt4Om4ueCtNYXRoLmNvcyhjKSp1LHk6bi55K01hdGguc2luKGMpKnV9fSxpbnZlcnRQb2ludDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQoXCJjZW50ZXJcIikscj1lLmlzVHJhbnNwb3NlZCxpPXI/XCJ5XCI6XCJ4XCIsYT1yP1wieFwiOlwieVwiLG89ZS5nZXQoXCJ4XCIpLGM9ZS5nZXQoXCJ5XCIpLHU9bmV3IHMoMSwwKSxsPW5ldyBzKHQueC1uLngsdC55LW4ueSk7aWYobC56ZXJvKCkpcmV0dXJue3g6MCx5OjB9O2Zvcih2YXIgZj11LmFuZ2xlVG8obCk7Zj5vLmVuZDspZi09MipNYXRoLlBJO3ZhciBoPWwubGVuZ3RoKCksZz0oZi1vLnN0YXJ0KS8oby5lbmQtby5zdGFydCkscD0oaC1jLnN0YXJ0KS8oYy5lbmQtYy5zdGFydCksdj17fTtyZXR1cm4gdltpXT1nLHZbYV09cCx2fX0pLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfXZhciBpPW4oMSksYT1uKDEzKSxzPW4oMzQpO3IuQVRUUlM9e2NvcmVUeXBlOlwiSW50ZXJ2YWxcIn0saS5leHRlbmQocixhKSxpLm1peGluKHIsW3NdKSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDUpLGE9ZnVuY3Rpb24oKXt9O2EuQVRUUlM9e2lzQWRqdXN0OiEwfSxyLmF1Z21lbnQoYSx7cHJvY2Vzc0ZyYW1lczpmdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcyxuPWUuZ2V0WFNjYWxlKCkuZGltLGE9ZS5nZXRZU2NhbGUoKS5kaW0scz10Lmxlbmd0aCxvPVtdLGM9e30sdT1bXSxsPTA7bDxzO2wrKyl7Zm9yKHZhciBmPXRbbF0udG9KU09OKCksaD0wO2g8Zi5sZW5ndGg7aCsrKXt2YXIgZz1mW2hdLHA9Z1tuXSx2PWdbYV0sZD1wLnRvU3RyaW5nKCk7dj1yLmlzQXJyYXkodik/dlsxXTp2LGNbZF18fChjW2RdPTApLGdbYV09W2NbZF0sditjW2RdXSxjW2RdKz12fW8ucHVzaChmKX1yZXR1cm4gci5lYWNoKG8sZnVuY3Rpb24odCl7dmFyIGU9bmV3IGkodCk7dS5wdXNoKGUpfSksdX19KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDMpLGE9ZnVuY3Rpb24oKXt9O2EuQVRUUlM9e2lzQWRqdXN0OiEwfSxyLmF1Z21lbnQoYSx7cHJvY2Vzc0NvcmU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dGhpcy5nZXQoXCJjb3JlXCIpO2UuZ2V0RGVmYWx1dFNpemU9ZnVuY3Rpb24oKXtyZXR1cm4gdC5fZ2V0RGVmYWx1dFNpemUoKX19LF9nZXREZWZhbHV0U2l6ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwiY29yZVwiKSxlPXQuZ2V0Q29vcmQoKSxuPXQuZ2V0WFNjYWxlKCkscj1uLnZhbHVlcyxhPWkud2lkdGhSYXRpby5jb2x1bW47cmV0dXJuIGUuaXNQb2xhciYmKGE9ZS5pc1RyYW5zcG9zZWQ/MT09PXIubGVuZ3RoP2kud2lkdGhSYXRpby5yb3NlOmkud2lkdGhSYXRpby5tdWx0aXBsZVBpZTppLndpZHRoUmF0aW8ucm9zZSksYSooMS9yLmxlbmd0aCl9fSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDE0KTtuKDEwNCksbigxMDMpLG4oMTAyKSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT17c3BsaXRQb2ludHM6ZnVuY3Rpb24odCl7dmFyIGU9W10sbj10LngsaT10Lnk7cmV0dXJuIGk9ci5pc0FycmF5KGkpP2k6W2ldLHIuZWFjaChpLGZ1bmN0aW9uKHQsaSl7dmFyIGE9e3g6ci5pc0FycmF5KG4pP25baV06bix5OnR9O2UucHVzaChhKX0pLGV9fTt0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1mdW5jdGlvbih0KXtyLm1peCh0aGlzLHQpLHRoaXMuZ3VpZGVzPVtdfTtyLmF1Z21lbnQoaSx7Z3VpZGVzOm51bGwseFNjYWxlOm51bGwseVNjYWxlOm51bGwsYWRkR3VpZGU6ZnVuY3Rpb24odCl7dGhpcy5ndWlkZXMucHVzaCh0KX0sc2V0U2NhbGU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmd1aWRlczt0aGlzLnhTY2FsZT10LHRoaXMueVNjYWxlPWUsci5lYWNoKG4sZnVuY3Rpb24obil7bi54U2NhbGU9dCxuLnlTY2FsZT1lfSl9LHBhaW50RnJvbnQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmd1aWRlcztyLmVhY2gobixmdW5jdGlvbihuKXtcInRleHRcIiE9PW4udHlwZSYmXCJodG1sXCIhPT1uLnR5cGV8fG4ucGFpbnQodCxlKX0pfSxwYWludEJhY2s6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmd1aWRlcztyLmVhY2gobixmdW5jdGlvbihuKXtcInRleHRcIiE9PW4udHlwZSYmXCJodG1sXCIhPT1uLnR5cGUmJm4ucGFpbnQodCxlKX0pfSxjbGVhcjpmdW5jdGlvbih0KXtpZih0aGlzLmd1aWRlcz1bXSx0KXt2YXIgZT10LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJndWlkZVdhcHBlclwiKVswXTtlJiZ0LnJlbW92ZUNoaWxkKGUpfXJldHVybiB0aGlzfX0pLHQuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpLHRoaXMuX19pbml0KCl9dmFyIGk9bigxKSxhPW4oNik7aS5leHRlbmQocixhKSxpLmF1Z21lbnQocix7X19pbml0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwic3RhcnRcIiksbj10LmdldChcImVuZFwiKSxyPXt9O3IueD1NYXRoLm1pbihlLngsbi54KSxyLnk9TWF0aC5taW4oZS55LG4ueSksdC5zZXQoXCJ0bFwiLHIpO3ZhciBpPXt9O2kueD1NYXRoLm1heChlLngsbi54KSxpLnk9TWF0aC5taW4oZS55LG4ueSksdC5zZXQoXCJ0clwiLGkpO3ZhciBhPXt9O2EueD1NYXRoLm1pbihlLngsbi54KSxhLnk9TWF0aC5tYXgoZS55LG4ueSksdC5zZXQoXCJibFwiLGEpO3ZhciBzPXt9O3MueD1NYXRoLm1heChlLngsbi54KSxzLnk9TWF0aC5tYXgoZS55LG4ueSksdC5zZXQoXCJiclwiLHMpLHQuc2V0KFwid2lkdGhcIixzLngtci54KSx0LnNldChcImhlaWdodFwiLHMueS1yLnkpfSxyZXNldDpmdW5jdGlvbih0LGUpe3RoaXMuc2V0KFwic3RhcnRcIix0KSx0aGlzLnNldChcImVuZFwiLGUpLHRoaXMuX19pbml0KCl9LGlzSW5SYW5nZTpmdW5jdGlvbih0LGUpe2kuaXNPYmplY3QodCkmJihlPXQueSx0PXQueCk7dmFyIG49dGhpcy5nZXQoXCJ0bFwiKSxyPXRoaXMuZ2V0KFwiYnJcIik7cmV0dXJuIG4ueDw9dCYmdDw9ci54JiZuLnk8PWUmJmU8PXIueX19KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPVwiIzk5OTk5OVwiLGk9XCIjRTlFOUU5XCIsYT1uKDEpLHM9e2xhYmVsOntmaWxsU3R5bGU6XCIjOTc5Nzk3XCIsZm9udDpcIjIwcHggc2FuLXNlcmlmXCJ9LGxhYmVsT2Zmc2V0OjYsbGluZTp7c3Ryb2tlOmksbGluZVdpZHRoOjF9LGdyaWQ6e3N0cm9rZTppLGxpbmVXaWR0aDoxfSx0aWNrTGluZTpudWxsfSxvPXtmb250U3R5bGU6XCJcIixmb250VmFyaWFudDpcIlwiLGZvbnRXZWlnaHQ6XCJcIixmb250U2l6ZTpcIjEwcHhcIixmb250RmFtaWx5OidcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgXCJQaW5nRmFuZyBTQ1wiLCBcIkhpcmFnaW5vIFNhbnMgR0JcIiwgXCJNaWNyb3NvZnQgWWFIZWlcIiwgXCJcXHU1ZmFlXFx1OGY2ZlxcdTk2YzVcXHU5ZWQxXCIsIFNpbVN1biwgXCJzYW5zLXNlcmlmXCInfSxjPXtkZWZhdWx0Rm9udDpvLHBpeGVsUmF0aW86MSxtYXJnaW46WzQwLDQwLDQwLDQwXSxjb2xvcnM6W1wiIzRFN0NDQ1wiLFwiIzM2QjNDM1wiLFwiIzRFQ0RBNVwiLFwiIzk0RTA4QVwiLFwiI0UyRjE5NFwiLFwiI0VEQ0M3MlwiLFwiI0Y4QUI2MFwiLFwiI0Y5ODE1Q1wiLFwiI0VCNDQ1NlwiLFwiI0M4MkIzRFwiXSxheGlzOntib3R0b206YS5taXgoITAse30scyx7bGluZTp7c3Ryb2tlOnJ9LGxhYmVsOnt0ZXh0QmFzZWxpbmU6XCJoYW5naW5nXCJ9LGxhYmVsT2Zmc2V0OjEyLGdyaWRBdHRyczp7fSxncmlkOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gMD09PWV8fGU9PT1uLTE/bnVsbDphLm1peCh7fSxzLmdyaWQsYy5heGlzLmJvdHRvbS5ncmlkQXR0cnMpfX0pLGxlZnQ6YS5taXgoITAse30scyx7bGFiZWw6e3RleHRBbGlnbjpcImVuZFwifSxsaW5lOm51bGwsdGlja0xpbmU6bnVsbH0pLHJpZ2h0OmEubWl4KCEwLHt9LHMse2xhYmVsOnt0ZXh0QWxpZ246XCJzdGFydFwifSxsaW5lOm51bGwsdGlja0xpbmU6bnVsbCxncmlkOm51bGx9KSxjaXJjbGU6YS5taXgoITAse30scyx7bGluZTp7c3Ryb2tlOnJ9fSkscmFkaXVzOmEubWl4KCEwLHt9LHMse30pfX07dC5leHBvcnRzPWN9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDIpO3IuQW5pbWF0ZUFzc2lzdD1uKDQxKSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMTgpLGk9bigyKSxhPW4oNDIpLHM9big0NCksbz1uKDQzKSxjPW4oNDYpLHU9big0NSksbD1pLkFuaW1hdGVBc3Npc3Q7ci5hdWdtZW50KGwse3dhdmVoOmZ1bmN0aW9uKHQpe3ZhciBlPXt0eXBlOlwid2F2ZWhcIn07ZT1yLm1peCh7fSx0LGUpLHRoaXMuYW5pbWF0ZT1uZXcgYyhlKX0sd2F2ZWM6ZnVuY3Rpb24odCl7dmFyIGU9e3R5cGU6XCJ3YXZlY1wifTtlPXIubWl4KHt9LHQsZSksdGhpcy5hbmltYXRlPW5ldyB1KGUpfSxzY2FsZXg6ZnVuY3Rpb24odCl7dmFyIGU9e3R5cGU6XCJzY2FsZXhcIn07ZT1yLm1peCh7fSx0LGUpLHRoaXMuYW5pbWF0ZT1uZXcgYShlKX0sc2NhbGV5OmZ1bmN0aW9uKHQpe3ZhciBlPXt0eXBlOlwic2NhbGV5XCJ9O2U9ci5taXgoe30sdCxlKSx0aGlzLmFuaW1hdGU9bmV3IHMoZSl9LHNjYWxleHk6ZnVuY3Rpb24odCl7dmFyIGU9e3R5cGU6XCJzY2FsZXh5XCJ9O2U9ci5taXgoe30sdCxlKSx0aGlzLmFuaW1hdGU9bmV3IG8oZSl9fSksdC5leHBvcnRzPWx9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigxMCksYT1mdW5jdGlvbih0KXthLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtyLmV4dGVuZChhLGkpLHIuYXVnbWVudChhLHtkcmF3OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4ucmF0aW8saT1uLnN0YXJ0UG9pbnQueCpyLGE9dC53aWR0aCxzPXQuaGVpZ2h0LG89dC5nZXRDb250ZXh0KFwiMmRcIiksYz1lLmdldENvbnRleHQoXCIyZFwiKSx1PW4uaW1hZ2VEYXRhLGw9bi5iZ0ltYWdlRGF0YTtjLnB1dEltYWdlRGF0YSh1LDAsMCksbi5hbmltYXRlU3RlcChmdW5jdGlvbihjKXtuLmNsZWFyKHQpLG8ucHV0SW1hZ2VEYXRhKGwsMCwwKTt2YXIgdT1pKmMvcixmPShhLWkpKmMvcjtvLmRyYXdJbWFnZShlLDAsMCxhLHMsaSooMS1jKS9yLDAsdStmLHMvcil9KX19KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDEwKSxhPWZ1bmN0aW9uKHQpe2Euc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKGEsaSksci5hdWdtZW50KGEse2RyYXc6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5yYXRpbyxpPW4uY2VudGVyLGE9dC53aWR0aCxzPXQuaGVpZ2h0LG89dC5nZXRDb250ZXh0KFwiMmRcIiksYz1lLmdldENvbnRleHQoXCIyZFwiKSx1PW4uaW1hZ2VEYXRhLGw9bi5iZ0ltYWdlRGF0YTtcbmMucHV0SW1hZ2VEYXRhKHUsMCwwKSxuLmFuaW1hdGVTdGVwKGZ1bmN0aW9uKGMpe24uY2xlYXIodCksby5wdXRJbWFnZURhdGEobCwwLDApLG8uZHJhd0ltYWdlKGUsMCwwLGEscyxpLngqKDEtYyksaS55KigxLWMpLGEqYy9yLHMqYy9yKX0pfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMTApLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQoYSxpKSxyLmF1Z21lbnQoYSx7ZHJhdzpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLnJhdGlvLGk9bi5zdGFydFBvaW50LnkqcixhPXQud2lkdGgscz10LmhlaWdodCxvPXQuZ2V0Q29udGV4dChcIjJkXCIpLGM9ZS5nZXRDb250ZXh0KFwiMmRcIiksdT1uLmltYWdlRGF0YSxsPW4uYmdJbWFnZURhdGE7Yy5wdXRJbWFnZURhdGEodSwwLDApLG4uYW5pbWF0ZVN0ZXAoZnVuY3Rpb24oYyl7bi5jbGVhcih0KSxvLnB1dEltYWdlRGF0YShsLDAsMCk7dmFyIHU9aSpjL3IsZj0ocy1pKSpjL3I7by5kcmF3SW1hZ2UoZSwwLDAsYSxzLDAsaSooMS1jKS9yLGEvcix1K2YpfSl9fSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9bigxMCksYT1mdW5jdGlvbih0KXthLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtyLmV4dGVuZChhLGkpLHIuYXVnbWVudChhLHtkcmF3OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPXQud2lkdGgsaT10LmhlaWdodCxhPXQuZ2V0Q29udGV4dChcIjJkXCIpLHM9ZS5nZXRDb250ZXh0KFwiMmRcIiksbz1uLnJhdGlvLGM9bi5jZW50ZXIsdT1uLnJhZGl1cyxsPW4uaW1hZ2VEYXRhLGY9bi5iZ0ltYWdlRGF0YTthLnB1dEltYWdlRGF0YShmLDAsMCkscy5wdXRJbWFnZURhdGEobCwwLDApLG4uYW5pbWF0ZVN0ZXAoZnVuY3Rpb24ocyl7bi5jbGVhcih0KSxhLnB1dEltYWdlRGF0YShmLDAsMCksYS5zYXZlKCksbi5zZWN0b3IoYSwyKk1hdGguUEkqcyxjLHUpLGEuY2xpcCgpLGEuZHJhd0ltYWdlKGUsMCwwLHIsaSwwLDAsci9vLGkvbyksYS5yZXN0b3JlKCl9KX0sc2VjdG9yOmZ1bmN0aW9uKHQsZSxuLHIpe3QuYmVnaW5QYXRoKCksdC5zdHJva2VTdHlsZT1cInJnYmEoMSwgMSwgMSwgMClcIix0LmFyYyhuLngsbi55LHIsMS41Kk1hdGguUEksMS41Kk1hdGguUEkrZSksdC5tb3ZlVG8obi54K01hdGguc2luKGUpKnIsbi55LU1hdGguY29zKGUpKnIpLHQubGluZVRvKG4ueCxuLnkpLHQubGluZVRvKG4ueCxuLnktciksdC5zdHJva2UoKX19KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDEwKSxhPWZ1bmN0aW9uKHQpe2Euc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKGEsaSksci5hdWdtZW50KGEse2RyYXc6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9dC53aWR0aCxpPXQuaGVpZ2h0LGE9dC5nZXRDb250ZXh0KFwiMmRcIikscz1uLnJhdGlvLG89ZS5nZXRDb250ZXh0KFwiMmRcIiksYz1uLmltYWdlRGF0YSx1PW4uYmdJbWFnZURhdGE7YS5wdXRJbWFnZURhdGEodSwwLDApLG8ucHV0SW1hZ2VEYXRhKGMsMCwwKSxuLmFuaW1hdGVTdGVwKGZ1bmN0aW9uKG8pe24uY2xlYXIodCksYS5wdXRJbWFnZURhdGEodSwwLDApLGEuZHJhd0ltYWdlKGUsMCwwLHIqbyxpLDAsMCxyKm8vcyxpL3MpfSl9fSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj17fTtyLkJhc2U9big0KSxyLkludGVydmFsPW4oNDkpLHIuUG9pbnQ9big1Miksci5MaW5lPW4oNTApLHIuUG9seWdvbj1uKDUzKSxyLlNjaGVtYT1uKDU0KSxyLlBhdGg9bigyMSksci5BcmVhPW4oNDgpLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfXZhciBpPW4oMSksYT1uKDQpLHM9bigyMCksbz1uKDE5KTtpLmV4dGVuZChyLGEpLGkubWl4aW4ocixbcyxvXSksci5BVFRSUz17dHlwZTpcImFyZWFcIn0saS5hdWdtZW50KHIse3NvcnRGcmFtZXM6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc29ydCh0KX0sZHJhd0ZyYW1lOmZ1bmN0aW9uKHQsZSl7dmFyIG4scixhLHMsbz10aGlzLGM9dC50b0pTT04oKSx1PXRoaXMuc3BsaXREYXRhKGMpLGw9dGhpcy5nZXQoXCJjb250YWluZXJcIiksZj10aGlzLmdldChcInNoYXBlT2JqXCIpLGg9Y1swXTtoLmluZGV4PWUsbj10aGlzLmdldERyYXdDZmcoaCk7dmFyIGc9by5nZXRTaGFwZURhdGEodCk7by5nZXQoXCJzaGFwZURhdGFzXCIpLnB1c2goZyksaS5lYWNoKHUsZnVuY3Rpb24odCxlKXtuLnNwbGl0ZWRJbmRleD1lLGE9W107Zm9yKHZhciBpPTA7aTx0Lmxlbmd0aDtpKyspcz10W2ldLGEucHVzaChzLnBvaW50cyk7MCE9PWEubGVuZ3RoJiYobi5wb2ludHM9YSxyPW8uZ2V0RHJhd1NoYXBlKG4uc2hhcGUpLGYuZHJhd1NoYXBlKHIsbixsKSl9KX0sX2dldEpvaW5JZEF0dHI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldChcImF0dHJzXCIpLGU9W107cmV0dXJuIGkuZWFjaCh0LGZ1bmN0aW9uKHQpe1wicG9zaXRpb25cIiE9PXQudHlwZSYmZS5wdXNoKHQpfSksZX19KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7ci5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX12YXIgaT1uKDEpLGE9big0KTtyLkFUVFJTPXt0eXBlOlwiaW50ZXJ2YWxcIn0saS5leHRlbmQocixhKSxpLm1peGluKHIpLGkuYXVnbWVudChyLHtnZXREcmF3Q2ZnOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1yLnN1cGVyY2xhc3MuZ2V0RHJhd0NmZy5jYWxsKGUsdCksaT1lLmdldENvb3JkKCk7cmV0dXJuIGkuaXNQb2xhciYmKG4uej0hMCxuLmNlbnRlcj1pLmdldChcImNlbnRlclwiKSksbn19KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7ci5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX12YXIgaT1uKDEpLGE9bigyMSk7aS5leHRlbmQocixhKSxyLkFUVFJTPXt0eXBlOlwibGluZVwifSxpLmF1Z21lbnQocix7c29ydEZyYW1lczpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zb3J0KHQpfX0pLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oNSk7dC5leHBvcnRzPXtzb3J0OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0WERpbSgpLG49W107cmV0dXJuIHIuZWFjaCh0LGZ1bmN0aW9uKHQpe24ucHVzaChpLnNvcnQodCxlKSl9KSxufX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3Iuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9dmFyIGk9bigxKSxhPW4oNCk7aS5leHRlbmQocixhKSxyLkFUVFJTPXt0eXBlOlwicG9pbnRcIn0sdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3Iuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9dmFyIGk9bigxKSxhPW4oNCk7aS5leHRlbmQocixhKSxyLkFUVFJTPXt0eXBlOlwicG9seWdvblwifSxpLmF1Z21lbnQocix7Z2V0U2hhcGVQb2ludEluZm86ZnVuY3Rpb24odCl7dmFyIGUsbj1hLnByb3RvdHlwZS5nZXRTaGFwZVBvaW50SW5mby5jYWxsKHRoaXMsdCkscj10aGlzLHM9bi54LG89bi55O2lmKCFpLmlzQXJyYXkocyl8fCFpLmlzQXJyYXkobykpe3ZhciBjPXIuZ2V0WFNjYWxlKCksdT1yLmdldFlTY2FsZSgpLGw9Yy52YWx1ZXM/Yy52YWx1ZXMubGVuZ3RoOmMudGlja3MubGVuZ3RoLGY9dS52YWx1ZXM/dS52YWx1ZXMubGVuZ3RoOnUudGlja3MubGVuZ3RoLGg9LjUvbCxnPS41L2Y7Yy5pc0NhdGVnb3J5JiZ1LmlzQ2F0ZWdvcnk/KHM9W3MtaCxzLWgscytoLHMraF0sbz1bby1nLG8rZyxvK2csby1nXSk6aS5pc0FycmF5KHMpPyhlPXMscz1bZVswXSxlWzBdLGVbMV0sZVsxXV0sbz1bby1nLzIsbytnLzIsbytnLzIsby1nLzJdKTppLmlzQXJyYXkobykmJihlPW8sbz1bZVswXSxlWzFdLGVbMV0sZVswXV0scz1bcy1oLzIscy1oLzIscytoLzIscytoLzJdKX12YXIgcD1pLm1peCh7fSx0LHt4OnMseTpvfSk7cmV0dXJuIHB9fSksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3Iuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9dmFyIGk9bigxKSxhPW4oNCk7aS5leHRlbmQocixhKSxyLkFUVFJTPXt0eXBlOlwic2NoZW1hXCJ9LHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigyKTtyLkd1aWRlQXNzaXN0PW4oNTcpLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oOSksYT1uKDIpLHM9YS5WZWN0b3IyLG89YS5HLGM9ZnVuY3Rpb24odCl7Yy5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQoYyxpKSxyLmF1Z21lbnQoYyx7c3RhcnQ6W10sZW5kOltdLGNmZzp7c3Ryb2tlU3R5bGU6XCIjQ0NDXCJ9LGdldENmZzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5wYXJzZVBvaW50KHQsZS5zdGFydCkscj1lLnBhcnNlUG9pbnQodCxlLmVuZCksaT10LmdldChcImNlbnRlclwiKSxhPW5ldyBzKDEsMCksbz1uZXcgcy5zdWIobixpKSxjPW5ldyBzLnN1YihyLGkpLHU9by5sZW5ndGgoKSxsPXtyYWRpdXM6dSxzdGFydEFuZ2xlOjIqTWF0aC5QSS1vLmFuZ2xlVG8oYSwhMCksZW5kQW5nbGU6MipNYXRoLlBJLWMuYW5nbGVUbyhhLCEwKX07cmV0dXJuIGx9LHBhaW50OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5nZXRDZmcodCksaT1yLm1peCh7ejohMX0sdGhpcy5jZmcsbiksYT10LmdldChcImNlbnRlclwiKSxzPW4ucmFkaXVzLGM9bi5zdGFydEFuZ2xlLHU9bi5lbmRBbmdsZTtvLmRyYXdBcmMoYSxzLGMsdSxlLGkpfX0pLHQuZXhwb3J0cz1jfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigyKSxpPW4oMSksYT1uKDkpO2EuVGV4dD1uKDYxKSxhLkxpbmU9big1OSksYS5BcmM9big1NiksYS5IdG1sPW4oNTgpLGEuUmVjdD1uKDYwKTt2YXIgcz1yLkd1aWRlQXNzaXN0O2kuYXVnbWVudChzLHtfZ2V0RGVmYXVsdDpmdW5jdGlvbigpe3JldHVybnt4U2NhbGU6dGhpcy54U2NhbGUseVNjYWxlOnRoaXMueVNjYWxlfX0sbGluZTpmdW5jdGlvbih0LGUsbil7dmFyIHI9e3R5cGU6XCJsaW5lXCIsZnJvbTp0LHRvOmUsY2ZnOmkubWl4KHt9LG4pfTtpLm1peChyLHRoaXMuX2dldERlZmF1bHQoKSk7dmFyIHM9bmV3IGEuTGluZShyKTtyZXR1cm4gdGhpcy5hZGRHdWlkZShzKSx0aGlzfSx0ZXh0OmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj17dHlwZTpcInRleHRcIixwb3NpdGlvbjp0LHRleHQ6ZSxjZmc6aS5taXgoe30sbil9O2kubWl4KHIsdGhpcy5fZ2V0RGVmYXVsdCgpKTt2YXIgcz1uZXcgYS5UZXh0KHIpO3JldHVybiB0aGlzLmFkZEd1aWRlKHMpLHRoaXN9LGFyYzpmdW5jdGlvbih0LGUsbil7dmFyIHI9e3R5cGU6XCJhcmNcIixzdGFydDp0LGVuZDplLGNmZzppLm1peCh7fSxuKX07aS5taXgocix0aGlzLl9nZXREZWZhdWx0KCkpO3ZhciBzPW5ldyBhLkFyYyhyKTtyZXR1cm4gdGhpcy5hZGRHdWlkZShzKSx0aGlzfSxodG1sOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj17dHlwZTpcImh0bWxcIixwb2ludDp0LGh0bWw6ZSxjZmc6aS5taXgoe30sbil9O2kubWl4KHIsdGhpcy5fZ2V0RGVmYXVsdCgpKTt2YXIgcz1uZXcgYS5IdG1sKHIpO3JldHVybiB0aGlzLmFkZEd1aWRlKHMpLHRoaXN9LHJlY3Q6ZnVuY3Rpb24odCxlLG4pe3ZhciByPXt0eXBlOlwicmVjdFwiLHN0YXJ0OnQsZW5kOmUsY2ZnOmkubWl4KHt9LG4pfTtpLm1peChyLHRoaXMuX2dldERlZmF1bHQoKSk7dmFyIHM9bmV3IGEuUmVjdChyKTtyZXR1cm4gdGhpcy5hZGRHdWlkZShzKSx0aGlzfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUsbil7dmFyIHI9W107c3dpdGNoKHQpe2Nhc2VcInRsXCI6clswXT0wLHJbMV09MDticmVhaztjYXNlXCJ0clwiOnJbMF09LWUsclsxXT0wO2JyZWFrO2Nhc2VcImJsXCI6clswXT0wLHJbMV09TWF0aC5mbG9vcigtbik7YnJlYWs7Y2FzZVwiYnJcIjpyWzBdPU1hdGguZmxvb3IoLWUpLHJbMV09TWF0aC5mbG9vcigtbik7YnJlYWs7Y2FzZVwicmNcIjpyWzBdPU1hdGguZmxvb3IoLWUpLHJbMV09TWF0aC5mbG9vcigtbi8yKTticmVhaztjYXNlXCJsY1wiOnJbMF09MCxyWzFdPU1hdGguZmxvb3IoLW4vMik7YnJlYWs7Y2FzZVwidGNcIjpyWzBdPU1hdGguZmxvb3IoLWUvMiksclsxXT1NYXRoLmZsb29yKC1uKTticmVhaztjYXNlXCJiY1wiOnJbMF09TWF0aC5mbG9vcigtZS8yKSxyWzFdPTA7YnJlYWs7ZGVmYXVsdDpyWzBdPU1hdGguZmxvb3IoLWUvMiksclsxXT1NYXRoLmZsb29yKC1uLzIpfXJldHVybiByfXZhciBpPW4oMSksYT1uKDkpO24oNjIpO3ZhciBzPWZ1bmN0aW9uKHQpe3Muc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2kuZXh0ZW5kKHMsYSksaS5hdWdtZW50KHMse3R5cGU6XCJodG1sXCIscG9pbnQ6W10sY2ZnOntvZmZzZXQ6WzAsMF0sYWxpZ246XCJjY1wifSxodG1sOlwiXCIscGFpbnQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGE9bi5wYXJzZVBvaW50KHQsbi5wb2ludCkscz1pLmNyZWF0ZURvbShuLmh0bWwpO3M9aS5tb2RpQ1NTKHMse3Bvc2l0aW9uOlwiYWJzb2x1dGVcIix0b3A6TWF0aC5mbG9vcihhLnkpK1wicHhcIixsZWZ0Ok1hdGguZmxvb3IoYS54KStcInB4XCIsdmlzaWJpbGl0eTpcImhpZGRlblwifSk7dmFyIG89ZS5wYXJlbnROb2RlO289aS5tb2RpQ1NTKG8se3Bvc2l0aW9uOlwicmVsYXRpdmVcIn0pO3ZhciBjO28uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImd1aWRlV2FwcGVyXCIpLmxlbmd0aD4wP2M9by5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiZ3VpZGVXYXBwZXJcIilbMF06KGM9aS5jcmVhdGVEb20oJzxkaXYgY2xhc3M9XCJndWlkZVdhcHBlclwiPjwvZGl2PicpLGM9aS5tb2RpQ1NTKGMse3Bvc2l0aW9uOlwiYWJzb2x1dGVcIix0b3A6MCxsZWZ0OjB9KSxvLmFwcGVuZENoaWxkKGMpKSxjLmFwcGVuZENoaWxkKHMpO3ZhciB1PW4uY2ZnO2lmKHUuYWxpZ24pe3ZhciBsPXUuYWxpZ24sZj1pLmdldFdpZHRoKHMpLGg9aS5nZXRIZWlnaHQocyksZz1yKGwsZixoKTthLng9YS54K2dbMF0sYS55PWEueStnWzFdfWlmKHUub2Zmc2V0KXt2YXIgcD11Lm9mZnNldDthLng9YS54K3BbMF0sYS55PWEueStwWzFdfWkubW9kaUNTUyhzLHt0b3A6TWF0aC5mbG9vcihhLnkpK1wicHhcIixsZWZ0Ok1hdGguZmxvb3IoYS54KStcInB4XCIsdmlzaWJpbGl0eTpcInZpc2libGVcIn0pfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oOSksYT1uKDIpLHM9YS5HLG89ZnVuY3Rpb24odCl7by5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQobyxpKSxyLmF1Z21lbnQobyx7ZnJvbTpbXSx0bzpbXSxjZmc6e3N0cm9rZVN0eWxlOlwiIzAwMFwiLGxpbmVXaWR0aDoxfSxwYWludDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1bXTtyWzBdPW4ucGFyc2VQb2ludCh0LG4uZnJvbSksclsxXT1uLnBhcnNlUG9pbnQodCxuLnRvKTt2YXIgaT1uLmNmZztzLmRyYXdMaW5lcyhyLGUsaSl9fSksdC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9big5KSxhPW4oMikscz1hLkcsbz1mdW5jdGlvbih0KXtvLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfTtyLmV4dGVuZChvLGkpLHIuYXVnbWVudChvLHtzdGFydDpbXSxlbmQ6W10sY2ZnOntmaWxsU3R5bGU6XCIjZmFmYWZhXCJ9LHBhaW50OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uY2ZnLGk9W107aVswXT1uLnBhcnNlUG9pbnQodCxuLnN0YXJ0KSxpWzFdPW4ucGFyc2VQb2ludCh0LFtuLnN0YXJ0WzBdLG4uZW5kWzFdXSksaVsyXT1uLnBhcnNlUG9pbnQodCxuLmVuZCksaVszXT1uLnBhcnNlUG9pbnQodCxbbi5lbmRbMF0sbi5zdGFydFsxXV0pLHIucmFkaXVzP3MuZHJhd1JlY3QoaSxlLHIpOnMuZHJhd0xpbmVzKGksZSxyKX19KSx0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDkpLGE9bigyKSxzPWEuRyxvPWZ1bmN0aW9uKHQpe28uc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKG8saSksci5hdWdtZW50KG8se3Bvc2l0aW9uOltdLHRleHQ6XCJcIixjZmc6e2ZpbGw6XCIjMDAwXCIsdGV4dEFsaWduOlwiY2VudGVyXCJ9LHBhaW50OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4ucG9zaXRpb24saT1uLnBhcnNlUG9pbnQodCxyKSxhPW4uY2ZnLG89bi50ZXh0O3MuZHJhd1RleHQobyxpLGUsYSl9fSksdC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpO3IubWl4KHIse21vZGlDU1M6ZnVuY3Rpb24odCxlKXt2YXIgbjtmb3IobiBpbiBlKWUuaGFzT3duUHJvcGVydHkobik9PT0hMCYmKHQuc3R5bGVbbl09ZVtuXSk7cmV0dXJuIHR9LGNyZWF0ZURvbTpmdW5jdGlvbih0KXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3JldHVybiB0PXQucmVwbGFjZSgvKF5cXHMqKXwoXFxzKiQpL2csXCJcIiksZS5pbm5lckhUTUw9XCJcIit0LGUuY2hpbGROb2Rlc1swXX0sZ2V0U3R5bGU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gd2luZG93LmdldENvbXB1dGVkU3R5bGU/d2luZG93LmdldENvbXB1dGVkU3R5bGUodCxudWxsKVtlXTp0LmN1cnJlbnRTdHlsZVtlXX0sZ2V0V2lkdGg6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRTdHlsZSh0LFwid2lkdGhcIik7cmV0dXJuXCJhdXRvXCI9PT1lJiYoZT10Lm9mZnNldFdpZHRoKSxwYXJzZUZsb2F0KGUpfSxnZXRIZWlnaHQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRTdHlsZSh0LFwiaGVpZ2h0XCIpO3JldHVyblwiYXV0b1wiPT09ZSYmKGU9dC5vZmZzZXRIZWlnaHQpLHBhcnNlRmxvYXQoZSl9fSksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDY0KTt0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBuKHQpe3JldHVybiB0IGluc3RhbmNlb2YgRGF0ZT90Om5ldyBEYXRlKHQpfWZ1bmN0aW9uIHIodCxlLG4pe3ZhciByPW5ldyBEYXRlKG4pO3N3aXRjaChpc05hTihyKSYmKHI9bmV3IERhdGUpLGU9cGFyc2VJbnQoZSwxMCksdCl7Y2FzZVwic1wiOnI9bmV3IERhdGUoci5nZXRUaW1lKCkrMWUzKmUpO2JyZWFrO2Nhc2VcIm5cIjpyPW5ldyBEYXRlKHIuZ2V0VGltZSgpKzZlNCplKTticmVhaztjYXNlXCJoXCI6cj1uZXcgRGF0ZShyLmdldFRpbWUoKSszNmU1KmUpO2JyZWFrO2Nhc2VcImRcIjpyPW5ldyBEYXRlKHIuZ2V0VGltZSgpKzg2NGU1KmUpO2JyZWFrO2Nhc2VcIndcIjpyPW5ldyBEYXRlKHIuZ2V0VGltZSgpKzYwNDhlNSplKTticmVhaztjYXNlXCJtXCI6cj1uZXcgRGF0ZShyLmdldEZ1bGxZZWFyKCksci5nZXRNb250aCgpK2Usci5nZXREYXRlKCksci5nZXRIb3VycygpLHIuZ2V0TWludXRlcygpLHIuZ2V0U2Vjb25kcygpKTticmVhaztjYXNlXCJ5XCI6cj1uZXcgRGF0ZShyLmdldEZ1bGxZZWFyKCkrZSxyLmdldE1vbnRoKCksci5nZXREYXRlKCksci5nZXRIb3VycygpLHIuZ2V0TWludXRlcygpLHIuZ2V0U2Vjb25kcygpKX1yZXR1cm4gcn12YXIgaT0vXig/Oig/ITAwMDApWzAtOV17NH0oWy1cXC8uXSspKD86KD86MD9bMS05XXwxWzAtMl0pXFwxKD86MD9bMS05XXwxWzAtOV18MlswLThdKXwoPzowP1sxMy05XXwxWzAtMl0pXFwxKD86Mjl8MzApfCg/OjA/WzEzNTc4XXwxWzAyXSlcXDEoPzozMSkpfCg/OlswLTldezJ9KD86MFs0OF18WzI0NjhdWzA0OF18WzEzNTc5XVsyNl0pfCg/OjBbNDhdfFsyNDY4XVswNDhdfFsxMzU3OV1bMjZdKTAwKShbLVxcLy5dPykwPzJcXDIoPzoyOSkpKFxccysoWzAxXXwoWzAxXVswLTldfDJbMC0zXSkpOihbMC05XXxbMC01XVswLTldKTooWzAtOV18WzAtNV1bMC05XSkpPyQvLGE9ZnVuY3Rpb24oKXt2YXIgdD0vd3sxfXxkezEsNH18bXsxLDR9fHl5KD86eXkpP3woW0hoTXNUdF0pXFwxP3xbTGxvU1pdfFwiW15cIl0qXCJ8J1teJ10qJy9nLGU9L1xcYig/OltQTUNFQV1bU0RQXVR8KD86UGFjaWZpY3xNb3VudGFpbnxDZW50cmFsfEVhc3Rlcm58QXRsYW50aWMpICg/OlN0YW5kYXJkfERheWxpZ2h0fFByZXZhaWxpbmcpIFRpbWV8KD86R01UfFVUQykoPzpbLStdXFxkezR9KT8pXFxiL2csbj0vW14tK1xcZEEtWl0vZyxyPWZ1bmN0aW9uKHQsZSl7Zm9yKHQ9U3RyaW5nKHQpLGU9ZXx8Mjt0Lmxlbmd0aDxlOyl0PVwiMFwiK3Q7cmV0dXJuIHR9LGk9e1wiZGVmYXVsdFwiOlwiZGRkIG1tbSBkZCB5eXl5IEhIOk1NOnNzXCIsc2hvcnREYXRlOlwibS9kL3l5XCIsbG9uZ0RhdGU6XCJtbW1tIGQsIHl5eXlcIixmdWxsRGF0ZTpcImRkZGQsIG1tbW0gZCwgeXl5eVwiLHNob3J0VGltZTpcImg6TU0gVFRcIixsb25nVGltZTpcImg6TU06c3MgVFQgWlwiLGlzb0RhdGU6XCJ5eXl5LW1tLWRkXCIsaXNvVGltZTpcIkhIOk1NOnNzXCIsaXNvRGF0ZVRpbWU6XCJ5eXl5LW1tLWRkJ1QnSEg6TU06c3NcIixpc29VVENEYXRlVGltZTpcIlVUQzp5eXl5LW1tLWRkJ1QnSEg6TU06c3MnWidcIixsb2NhbFNob3J0RGF0ZTpcInl5XFx1NWU3NG1tXFx1NjcwOGRkXFx1NjVlNVwiLGxvY2FsU2hvcnREYXRlVGltZTpcInl5XFx1NWU3NG1tXFx1NjcwOGRkXFx1NjVlNSBoaDpNTTpzcyBUVFwiLGxvY2FsTG9uZ0RhdGU6XCJ5eXl5XFx1NWU3NG1tXFx1NjcwOGRkXFx1NjVlNVwiLGxvY2FsTG9uZ0RhdGVUaW1lOlwieXl5eVxcdTVlNzRtbVxcdTY3MDhkZFxcdTY1ZTUgaGg6TU06c3MgVFRcIixsb2NhbEZ1bGxEYXRlOlwieXl5eVxcdTVlNzRtbVxcdTY3MDhkZFxcdTY1ZTUgd1wiLGxvY2FsRnVsbERhdGVUaW1lOlwieXl5eVxcdTVlNzRtbVxcdTY3MDhkZFxcdTY1ZTUgdyBoaDpNTTpzcyBUVFwifSxhPXtkYXlOYW1lczpbXCJTdW5cIixcIk1vblwiLFwiVHVlXCIsXCJXZWRcIixcIlRodVwiLFwiRnJpXCIsXCJTYXRcIixcIlN1bmRheVwiLFwiTW9uZGF5XCIsXCJUdWVzZGF5XCIsXCJXZWRuZXNkYXlcIixcIlRodXJzZGF5XCIsXCJGcmlkYXlcIixcIlNhdHVyZGF5XCIsXCJcXHU2NjFmXFx1NjcxZlxcdTY1ZTVcIixcIlxcdTY2MWZcXHU2NzFmXFx1NGUwMFwiLFwiXFx1NjYxZlxcdTY3MWZcXHU0ZThjXCIsXCJcXHU2NjFmXFx1NjcxZlxcdTRlMDlcIixcIlxcdTY2MWZcXHU2NzFmXFx1NTZkYlwiLFwiXFx1NjYxZlxcdTY3MWZcXHU0ZTk0XCIsXCJcXHU2NjFmXFx1NjcxZlxcdTUxNmRcIl0sbW9udGhOYW1lczpbXCJKYW5cIixcIkZlYlwiLFwiTWFyXCIsXCJBcHJcIixcIk1heVwiLFwiSnVuXCIsXCJKdWxcIixcIkF1Z1wiLFwiU2VwXCIsXCJPY3RcIixcIk5vdlwiLFwiRGVjXCIsXCJKYW51YXJ5XCIsXCJGZWJydWFyeVwiLFwiTWFyY2hcIixcIkFwcmlsXCIsXCJNYXlcIixcIkp1bmVcIixcIkp1bHlcIixcIkF1Z3VzdFwiLFwiU2VwdGVtYmVyXCIsXCJPY3RvYmVyXCIsXCJOb3ZlbWJlclwiLFwiRGVjZW1iZXJcIl19O3JldHVybiBmdW5jdGlvbihzLG8sYyl7aWYoMSE9PWFyZ3VtZW50cy5sZW5ndGh8fFwiW29iamVjdCBTdHJpbmddXCIhPT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwocyl8fC9cXGQvLnRlc3Qocyl8fChvPXMscz12b2lkIDApLHM9cz9uZXcgRGF0ZShzKTpuZXcgRGF0ZSxpc05hTihzKSl0aHJvdyBTeW50YXhFcnJvcihcImludmFsaWQgZGF0ZVwiKTtvPVN0cmluZyhpW29dfHxvfHxpW1wiZGVmYXVsdFwiXSksXCJVVEM6XCI9PT1vLnNsaWNlKDAsNCkmJihvPW8uc2xpY2UoNCksYz0hMCk7dmFyIHU9Yz9cImdldFVUQ1wiOlwiZ2V0XCIsbD1zW3UrXCJEYXRlXCJdKCksZj1zW3UrXCJEYXlcIl0oKSxoPXNbdStcIk1vbnRoXCJdKCksZz1zW3UrXCJGdWxsWWVhclwiXSgpLHA9c1t1K1wiSG91cnNcIl0oKSx2PXNbdStcIk1pbnV0ZXNcIl0oKSxkPXNbdStcIlNlY29uZHNcIl0oKSxtPXNbdStcIk1pbGxpc2Vjb25kc1wiXSgpLHg9Yz8wOnMuZ2V0VGltZXpvbmVPZmZzZXQoKSx5PXtkOmwsZGQ6cihsLHZvaWQgMCksZGRkOmEuZGF5TmFtZXNbZl0sZGRkZDphLmRheU5hbWVzW2YrN10sdzphLmRheU5hbWVzW2YrMTRdLG06aCsxLG1tOnIoaCsxLHZvaWQgMCksbW1tOmEubW9udGhOYW1lc1toXSxtbW1tOmEubW9udGhOYW1lc1toKzEyXSx5eTpTdHJpbmcoZykuc2xpY2UoMikseXl5eTpnLGg6cCUxMnx8MTIsaGg6cihwJTEyfHwxMix2b2lkIDApLEg6cCxISDpyKHAsdm9pZCAwKSxNOnYsTU06cih2LHZvaWQgMCksczpkLHNzOnIoZCx2b2lkIDApLGw6cihtLDMpLEw6cihtPjk5P01hdGgucm91bmQobS8xMCk6bSx2b2lkIDApLHQ6cDwxMj9cImFcIjpcInBcIix0dDpwPDEyP1wiYW1cIjpcInBtXCIsVDpwPDEyP1wiQVwiOlwiUFwiLFRUOnA8MTI/XCJBTVwiOlwiUE1cIixaOmM/XCJVVENcIjooU3RyaW5nKHMpLm1hdGNoKGUpfHxbXCJcIl0pLnBvcCgpLnJlcGxhY2UobixcIlwiKSxvOih4PjA/XCItXCI6XCIrXCIpK3IoMTAwKk1hdGguZmxvb3IoTWF0aC5hYnMoeCkvNjApK01hdGguYWJzKHgpJTYwLDQpLFM6W1widGhcIixcInN0XCIsXCJuZFwiLFwicmRcIl1bbCUxMD4zPzA6KGwlMTAwLWwlMTAhPT0xMCkqbCUxMF19O3JldHVybiBvLnJlcGxhY2UodCxmdW5jdGlvbih0KXtyZXR1cm4gdCBpbiB5P3lbdF06dC5zbGljZSgxLHQubGVuZ3RoLTEpfSl9fSgpLHM9e2FkZDpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHIodCxlLG4pfSxhZGRIb3VyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIoXCJoXCIsdCxlKX0sYWRkTWludXRlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIoXCJuXCIsdCxlKX0sYWRkU2Vjb25kOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIoXCJzXCIsdCxlKX0sYWRkRGF5OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIoXCJkXCIsdCxlKX0sYWRkV2VlazpmdW5jdGlvbih0LGUpe3JldHVybiByKFwid1wiLHQsZSl9LGFkZE1vbnRoczpmdW5jdGlvbih0LGUpe3JldHVybiByKFwibVwiLHQsZSl9LGFkZFllYXI6ZnVuY3Rpb24odCxlKXtyZXR1cm4gcihcInlcIix0LGUpfSxpc0RhdGVFcXVhbHM6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5nZXRGdWxsWWVhcigpPT09ZS5nZXRGdWxsWWVhcigpJiZ0LmdldE1vbnRoKCk9PT1lLmdldE1vbnRoKCkmJnQuZ2V0RGF0ZSgpPT09ZS5nZXREYXRlKCl9LGlzRXF1YWxzOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ9PT1lfHwhKCF0fHwhZSkmJighKCF0LmdldFRpbWV8fCFlLmdldFRpbWUpJiZ0LmdldFRpbWUoKT09PWUuZ2V0VGltZSgpKX0saXNEYXRlU3RyaW5nOmZ1bmN0aW9uKHQpe3JldHVybiBpLnRlc3QodCl9LGZvcm1hdDpmdW5jdGlvbih0LGUsbil7cmV0dXJuIGEodCxlLG4pfSxwYXJzZTpmdW5jdGlvbih0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdCYmKHQ9dC5yZXBsYWNlKC8tL2csXCIvXCIpKSxuKHQpfSx0b2RheTpmdW5jdGlvbigpe3ZhciB0PW5ldyBEYXRlO3JldHVybiBuZXcgRGF0ZSh0LmdldEZ1bGxZZWFyKCksdC5nZXRNb250aCgpLHQuZ2V0RGF0ZSgpKX0sZ2V0RGF0ZTpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IERhdGUodC5nZXRGdWxsWWVhcigpLHQuZ2V0TW9udGgoKSx0LmdldERhdGUoKSl9fTt0LmV4cG9ydHM9c30sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMSksaT1uKDY2KSxhPW4oMjIpO3IubWl4KGEse3ZhbHVlczpmdW5jdGlvbih0LGUpe3ZhciBuPVtdLHI9e30sYT10LmNvbEFycmF5KGUpO2E9aS5mb3JtYXRBcnJheShhKTtmb3IodmFyIHM9MCxvPWEubGVuZ3RoO3M8bztzKyspe3ZhciBjPWFbc107cltjXXx8dm9pZCAwPT09Y3x8KHJbY109ITAsbi5wdXNoKGMpKX1yZXR1cm4gbn0sZ3JvdXA6ZnVuY3Rpb24odCxlKXtpZighZSlyZXR1cm5bdF07dmFyIG49YS5ncm91cFRvTWFwKHQsZSkscj1bXTtmb3IodmFyIGkgaW4gbiluLmhhc093blByb3BlcnR5KGkpJiZyLnB1c2gobltpXSk7cmV0dXJuIHJ9LGdyb3VwVG9NYXA6ZnVuY3Rpb24odCxlKXt2YXIgbj10LmNvbE5hbWVzKCksaT17fTtpZighZSlyZXR1cm57MDp0fTtpZighci5pc0Z1bmN0aW9uKGUpKXt2YXIgcz1yLmlzQXJyYXkoZSk/ZTplLnJlcGxhY2UoL1xccysvZyxcIlwiKS5zcGxpdChcIipcIik7ZT1mdW5jdGlvbih0KXtmb3IodmFyIGU9XCJcIixuPTAscj1zLmxlbmd0aDtuPHI7bisrKWUrPXRbc1tuXV0udG9TdHJpbmcoKTtyZXR1cm4gZX19dC5lYWNoKGZ1bmN0aW9uKHQpe3ZhciBuPWUodCk7aVtuXT9pW25dLnB1c2godCk6aVtuXT1bdF19KTtmb3IodmFyIG8gaW4gaSlpLmhhc093blByb3BlcnR5KG8pJiYoaVtvXT1uZXcgYShpW29dLHtuYW1lczpuLnNsaWNlKDApfSkpO3JldHVybiBpfSxtZXJnZTpmdW5jdGlvbigpe2Zvcih2YXIgdD1yLnRvQXJyYXkoYXJndW1lbnRzKSxlPXRbMF0sbj1lLmNvbE5hbWVzKCksaT1lLmNvbENvdW50KCkscz1bXSxvPTA7bzxpO28rKyl7c1tvXT1bXTtmb3IodmFyIGM9MDtjPHQubGVuZ3RoO2MrKyl7dmFyIHU9dFtjXS5jb2xBcnJheShvKTtzW29dPXNbb10uY29uY2F0KHUpfX1yZXR1cm4gbmV3IGEocyx7bmFtZXM6bn0pfSxzb3J0OmZ1bmN0aW9uKHQsZSl7dmFyIG49dC50b0pTT04oKTtyZXR1cm4gbi5zb3J0KGZ1bmN0aW9uKHQsbil7cmV0dXJuIHRbZV0tbltlXX0pLG5ldyBhKG4se25hbWVzOnQuY29sTmFtZXMoKX0pfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigxKTt0LmV4cG9ydHM9e2ZpbHRlck51bGw6ZnVuY3Rpb24odCl7dmFyIGU9W107cmV0dXJuIHIuZWFjaCh0LGZ1bmN0aW9uKHQpe3IuaXNOdWxsKHQpfHxlLnB1c2godCl9KSxlfSxtaXhJZjpmdW5jdGlvbih0LGUsbil7ci5lYWNoKG4sZnVuY3Rpb24obil7dFtuXT1lW25dfSl9LGZvcm1hdEFycmF5OmZ1bmN0aW9uKHQpe3ZhciBlPVtdO3JldHVybiByLmVhY2godCxmdW5jdGlvbih0KXtyLmlzQXJyYXkodCk/ZT1lLmNvbmNhdCh0KTplLnB1c2godCl9KSxlfX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe2lmKCF0Ll9hdHRycyYmdCE9PWkpe3ZhciBlPXQuc3VwZXJjbGFzcy5jb25zdHJ1Y3RvcjtlJiYhZS5fYXR0cnMmJnIoZSksdC5fYXR0cnM9e30sYS5taXgoITAsdC5fYXR0cnMsZS5fYXR0cnMpLGEubWl4KCEwLHQuX2F0dHJzLHQuQVRUUlMpfX12YXIgaSxhPW4oMSk7aT1mdW5jdGlvbih0KXtyKHRoaXMuY29uc3RydWN0b3IpLHRoaXMuX2F0dHJzPXt9LHRoaXMuZXZlbnRzPXt9O3ZhciBlPXRoaXMuZ2V0RGVmYXVsdENmZygpO2EubWl4KHRoaXMuX2F0dHJzLGUsdCl9LGEuYXVnbWVudChpLHtnZXREZWZhdWx0Q2ZnOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuY29uc3RydWN0b3Isbj1lLl9hdHRycyxyPWEubWl4KCEwLHt9LG4pO3JldHVybiByfSxzZXQ6ZnVuY3Rpb24odCxlKXt2YXIgbj1cIl9vblJlbmRlclwiK2EudWNmaXJzdCh0KTtyZXR1cm4gdGhpc1tuXSYmdGhpc1tuXShlLHRoaXMuX2F0dHJzW3RdKSx0aGlzLl9hdHRyc1t0XT1lLHRoaXN9LGdldDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fYXR0cnNbdF19LG9uOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZXZlbnRzLGk9clt0XTtyZXR1cm4gaXx8KGk9clt0XT1bXSksaS5wdXNoKGUpLG59LGZpcmU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9bi5ldmVudHMsaT1yW3RdO2kmJmEuZWFjaChpLGZ1bmN0aW9uKHQpe3QoZSl9KX0sb2ZmOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW4uZXZlbnRzLGk9clt0XTtyZXR1cm4gdD8oaSYmYS5yZW1vdmUoaSxlKSxuKToobi5ldmVudHM9e30sbil9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5kZXN0cm95ZWQ7cmV0dXJuIGU/dDoodC5fYXR0cnM9e30sdC5ldmVudHM9e30sdm9pZCh0LmRlc3Ryb3llZD0hMCkpfX0pLHQuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigyKTtyLkdlb20uUG9seWdvbj1uKDY5KSxuKDcwKSxyLkNoYXJ0LnJlZ2lzdEdlb20oXCJwb2x5Z29uXCIpLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfXZhciBpPW4oMSksYT1uKDIpLHM9YS5HZW9tO3IuQVRUUlM9e2NvcmVUeXBlOlwiUG9seWdvblwifSxpLmV4dGVuZChyLHMpLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMiksYT1pLlNoYXBlLHM9aS5HLG89YS5yZWdpc3RHZW9tKFwicG9seWdvblwiLHtkZWZhdWx0U2hhcGVUeXBlOlwicG9seWdvblwifSk7YS5yZWdpc3RTaGFwZShcInBvbHlnb25cIixcInBvbHlnb25cIix7Z2V0U2hhcGVQb2ludHM6ZnVuY3Rpb24odCl7dmFyIGU9W107cmV0dXJuIHIuZWFjaCh0LngsZnVuY3Rpb24obixyKXt2YXIgaT10Lnlbcl07ZS5wdXNoKHt4Om4seTppfSl9KSxlfSxkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLnBhcnNlUG9pbnRzKHQucG9pbnRzKSxpPXIubWl4KHtmaWxsU3R5bGU6dC5jb2xvcix6OiEwfSx0LnN0eWxlKTtzLmRyYXdMaW5lcyhuLGUsaSl9fSksdC5leHBvcnRzPW99LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDcyKTt0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBuKHQsZSxyKXtyPXJ8fDA7Zm9yKHZhciBpIGluIGUpaWYoZS5oYXNPd25Qcm9wZXJ0eShpKSl7dmFyIG89ZVtpXTtudWxsIT09byYmcy5pc09iamVjdChvKT8ocy5pc09iamVjdCh0W2ldKXx8KHRbaV09e30pLHI8YT9uKHRbaV0sZVtpXSxyKzEpOnRbaV09ZVtpXSk6cy5pc0FycmF5KG8pPyh0W2ldPVtdLHRbaV09dFtpXS5jb25jYXQobykpOnZvaWQgMCE9PW8mJih0W2ldPWVbaV0pfX12YXIgcj1PYmplY3QucHJvdG90eXBlLGk9ci50b1N0cmluZyxhPTUscz17c3Vic3RpdHV0ZTpmdW5jdGlvbih0LGUpe3JldHVybiB0JiZlP3QucmVwbGFjZSgvXFxcXD9cXHsoW157fV0rKVxcfS9nLGZ1bmN0aW9uKHQsbil7cmV0dXJuXCJcXFxcXCI9PT10LmNoYXJBdCgwKT90LnNsaWNlKDEpOnZvaWQgMD09PWVbbl0/XCJcIjplW25dfSk6dH0sdWNmaXJzdDpmdW5jdGlvbih0KXtyZXR1cm4gdCs9XCJcIix0LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK3Quc3Vic3RyaW5nKDEpfSxpc1N0cmluZzpmdW5jdGlvbih0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdH0saXNOdW1iZXI6ZnVuY3Rpb24odCl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHR9LGlzTnVtZXJpYzpmdW5jdGlvbih0KXtyZXR1cm4haXNOYU4ocGFyc2VGbG9hdCh0KSkmJmlzRmluaXRlKHQpfSxpc0Jvb2xlYW46ZnVuY3Rpb24odCl7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiB0fSxpc0Z1bmN0aW9uOmZ1bmN0aW9uKHQpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHR9LGlzQXJyYXk6XCJpc0FycmF5XCJpbiBBcnJheT9BcnJheS5pc0FycmF5OmZ1bmN0aW9uKHQpe3JldHVyblwiW29iamVjdCBBcnJheV1cIj09PWkuY2FsbCh0KX0saXNEYXRlOmZ1bmN0aW9uKHQpe3JldHVyblwiW29iamVjdCBEYXRlXVwiPT09aS5jYWxsKHQpfSxpc051bGw6ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXR8fG51bGw9PT10fSxub3ROdWxsOmZ1bmN0aW9uKHQpe3JldHVybiFzLmlzTnVsbCh0KX0saXNCbGFuazpmdW5jdGlvbih0KXtpZihzLmlzQXJyYXkodCkpcmV0dXJuIDA9PT10Lmxlbmd0aDtpZihzLmlzT2JqZWN0KHQpKXt2YXIgZT0wO3JldHVybiBzLmVhY2godCxmdW5jdGlvbih0LG4pe2UrK30pLDA9PT1lfXJldHVybiExfSxpc09iamVjdDpcIltvYmplY3QgT2JqZWN0XVwiPT09aS5jYWxsKG51bGwpP2Z1bmN0aW9uKHQpe3JldHVybiBudWxsIT09dCYmdm9pZCAwIT09dCYmXCJbb2JqZWN0IE9iamVjdF1cIj09PWkuY2FsbCh0KSYmdm9pZCAwPT09dC5vd25lckRvY3VtZW50fTpmdW5jdGlvbih0KXtyZXR1cm5cIltvYmplY3QgT2JqZWN0XVwiPT09aS5jYWxsKHQpfSxleHRlbmQ6ZnVuY3Rpb24odCxlLG4scil7cy5pc0Z1bmN0aW9uKGUpfHwobj1lLGU9dCx0PWZ1bmN0aW9uKCl7fSk7dmFyIGk9T2JqZWN0LmNyZWF0ZT9mdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3QuY3JlYXRlKHQse2NvbnN0cnVjdG9yOnt2YWx1ZTplfX0pfTpmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4oKXt9bi5wcm90b3R5cGU9dDt2YXIgcj1uZXcgbjtyZXR1cm4gci5jb25zdHJ1Y3Rvcj1lLHJ9LGE9aShlLnByb3RvdHlwZSx0KTtyZXR1cm4gdC5wcm90b3R5cGU9cy5taXgoYSx0LnByb3RvdHlwZSksdC5zdXBlcmNsYXNzPWkoZS5wcm90b3R5cGUsZSkscy5taXgoYSxuKSxzLm1peCh0LHIpLHR9LGF1Z21lbnQ6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXMudG9BcnJheShhcmd1bWVudHMpLG49MTtuPGUubGVuZ3RoO24rKyl7dmFyIHI9ZVtuXTtzLmlzRnVuY3Rpb24ocikmJihyPXIucHJvdG90eXBlKSxzLm1peCh0LnByb3RvdHlwZSxyKX19LHRvQXJyYXk6ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQubGVuZ3RoP0FycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHQpOltdfSxtaXg6ZnVuY3Rpb24oKXt2YXIgdD1zLnRvQXJyYXkoYXJndW1lbnRzKSxlPXRbMF07aWYoZT09PSEwKXtlPXRbMV07Zm9yKHZhciByPTI7cjx0Lmxlbmd0aDtyKyspe3ZhciBpPXRbcl07bihlLGkpfX1lbHNlIGZvcih2YXIgcj0xO3I8dC5sZW5ndGg7cisrKXt2YXIgaT10W3JdO2Zvcih2YXIgYSBpbiBpKWkuaGFzT3duUHJvcGVydHkoYSkmJlwiY29uc3RydWN0b3JcIiE9PWEmJihlW2FdPWlbYV0pfXJldHVybiBlfSxlYWNoOmZ1bmN0aW9uKHQsZSl7aWYodClpZihzLmlzT2JqZWN0KHQpKXtmb3IodmFyIG4gaW4gdClpZih0Lmhhc093blByb3BlcnR5KG4pKXt2YXIgcj1lKHRbbl0sbik7aWYocj09PSExKWJyZWFrfX1lbHNlIGlmKHQubGVuZ3RoKWZvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSsrKXt2YXIgcj1lKHRbaV0saSk7aWYocj09PSExKWJyZWFrfX0scmVxdWVzdEFuaW1hdGlvbkZyYW1lOmZ1bmN0aW9uKHQpe3ZhciBlPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fGZ1bmN0aW9uKHQpe3JldHVybiBzZXRUaW1lb3V0KHQsMTYpfTtyZXR1cm4gZSh0KX0sY2FuY2VsQW5pbWF0aW9uRnJhbWU6ZnVuY3Rpb24odCl7dmFyIGU9d2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lfHx3aW5kb3cud2Via2l0Q2FuY2VsQW5pbWF0aW9uRnJhbWV8fGZ1bmN0aW9uKHQpe3JldHVybiBjbGVhclRpbWVvdXQodCl9O3JldHVybiBlKHQpfX07dC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQsZSl7dmFyIG49W107cmV0dXJuIGU/aS5pc0FycmF5KHRbMF0pJiZpLmVhY2godFswXSxmdW5jdGlvbihlLHIpe2Zvcih2YXIgaT1lLGE9MTthPHQubGVuZ3RoO2ErKylpKz10W2FdW3JdO24ucHVzaChpKX0pOmkuZWFjaCh0LGZ1bmN0aW9uKHQpe2kuaXNBcnJheSh0KT9uPW4uY29uY2F0KHQpOm4ucHVzaCh0KX0pLG59dmFyIGk9bigxKSxhPTYscz1mdW5jdGlvbih0KXt2YXIgZT17fSxuPVtdLGk9dC5tYXhDb3VudHx8YSxzPXIodC5kYXRhKTtpZihzLmxlbmd0aDxpKW49W10uY29uY2F0KHMpO2Vsc2V7dmFyIG89cy5sZW5ndGgsYz1wYXJzZUludChvLyhpLTEpLDEwKSx1PXMubWFwKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUlYz09PTA/cy5zbGljZShlLGUrYyk6bnVsbH0pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdH0pO24ucHVzaChzWzBdKTtmb3IodmFyIGw9MTtsPHUubGVuZ3RoJiZsPGktMTtsKyspbi5wdXNoKHVbbF1bMF0pO24ucHVzaChzW28tMV0pfXJldHVybiBlLmNhdGVnb3JpZXM9cyxlLnRpY2tzPW4sZX07dC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEpLGk9NCxhPTYscz1bMCwxLDIsMi41LDMsNCw1LDcuNSwxMF0sbz1yLmlzTnVsbCxjPW4oMjMpLHU9ZnVuY3Rpb24odCl7dmFyIGUsbj10Lm1pbix1PXQubWF4LGw9dC5pbnRlcnZhbCxmPVtdLGg9dC5taW5Db3VudHx8aSxnPXQubWF4Q291bnR8fGEscD0oaCtnKS8yO2lmKG8obCkmJih1PT09biYmKHU9dC5taW4rMSxsPTEpLG8obCkpKXt2YXIgdj0odS1uKS9wO2w9Yy5zbmFwRmFjdG9yVG8odixzLFwiY2VpbFwiKSxlPXBhcnNlSW50KCh1LW4pL2wsMTApLGU+ZyYmKGU9ZyksZTxoJiYoZT1oKSxsPWMuc25hcEZhY3RvclRvKCh1LW4pL2UscyxcImNlaWxcIil9dT1jLnNuYXBNdWx0aXBsZSh1LGwsITApLG49Yy5zbmFwTXVsdGlwbGUobixsLCExKSxlPU1hdGgucm91bmQoKHUtbikvbCksbj1yLmZpeGVkQmFzZShuLGwpLGYucHVzaChuKTtmb3IodmFyIGQ9MTtkPD1lO2QrKylmLnB1c2goci5maXhlZEJhc2UobCpkK24sbCkpO3JldHVybnttaW46bixtYXg6ci5maXhlZEJhc2UodSxsKSxpbnRlcnZhbDpsLGNvdW50OmUsdGlja3M6Zn19O3QuZXhwb3J0cz11fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyZXR1cm4gbmV3IERhdGUodCkuZ2V0RnVsbFllYXIoKX1mdW5jdGlvbiBpKHQpe3JldHVybiBuZXcgRGF0ZSh0LDAsMSkuZ2V0VGltZSgpfWZ1bmN0aW9uIGEodCl7cmV0dXJuIG5ldyBEYXRlKHQpLmdldE1vbnRoKCl9ZnVuY3Rpb24gcyh0LGUpe3ZhciBuPXIodCksaT1yKGUpLHM9YSh0KSxvPWEoZSk7cmV0dXJuIDEyKihpLW4pKyhvLXMpJTEyfWZ1bmN0aW9uIG8odCxlKXtyZXR1cm4gbmV3IERhdGUodCxlLDEpLmdldFRpbWUoKX1mdW5jdGlvbiBjKHQsZSl7cmV0dXJuIE1hdGguY2VpbCgoZS10KS9kKX1mdW5jdGlvbiB1KHQsZSl7cmV0dXJuIE1hdGguY2VpbCgoZS10KS92KX1mdW5jdGlvbiBsKHQsZSl7cmV0dXJuIE1hdGguY2VpbCgoZS10KS82ZTQpfXZhciBmPW4oMSksaD02LGc9WzEsMiw0LDYsOCwxMl0scD02ZTQsdj0zNmU1LGQ9ODY0ZTUsbT1uKDIzKSx4PWZ1bmN0aW9uKHQpe3ZhciBlLG49dC5taW4seD10Lm1heCx5PXQuaW50ZXJ2YWwsUz1bXTtpZih4PT09biYmKHg9bitkKSxmLmlzTnVsbCh5KSl7dmFyIHcsVCxBPXgtbixfPWQsQz0zNjUqXzt5PXBhcnNlSW50KEEvKHQubWF4Q291bnR8fGgpKSx3PXkvQzt2YXIgRD1yKG4pO2lmKHc+LjUxKXtUPU1hdGguY2VpbCh3KTtmb3IodmFyIE09cih4KSxiPUQ7Yjw9TStUO2IrPVQpUy5wdXNoKGkoYikpO3k9bnVsbH1lbHNlIGlmKHc+LjA4MzQpe2Zvcih2YXIgVD1yKG4pLFA9TWF0aC5jZWlsKHcvLjA4MzQpLGs9YShuKSxJPXMobix4KSxiPTA7Yjw9SStQO2IrPVApUy5wdXNoKG8oRCxiK2spKTt5PW51bGx9ZWxzZSBpZih5Pi41Kl8pe3ZhciBPPW5ldyBEYXRlKG4pLFQ9Ty5nZXRGdWxsWWVhcigpLFA9Ty5nZXRNb250aChuKSxOPU8uZ2V0RGF0ZSgpLEY9TWF0aC5jZWlsKHkvXyksUj1jKG4seCk7eT1GKl87Zm9yKHZhciBiPTA7YjxSK0Y7Yis9RilTLnB1c2gobmV3IERhdGUoVCxQLE4rYikuZ2V0VGltZSgpKX1lbHNlIGlmKHk+dil7dmFyIE89bmV3IERhdGUobiksVD1PLmdldEZ1bGxZZWFyKCksUD1PLmdldE1vbnRoKG4pLEY9Ty5nZXREYXRlKCksRz1PLmdldEhvdXJzKCksTD1tLnNuYXBUbyhnLE1hdGguY2VpbCh5L3YpKSx6PXUobix4KTt5PUwqdjtmb3IodmFyIGI9MDtiPD16K0w7Yis9TClTLnB1c2gobmV3IERhdGUoVCxQLEYsRytiKS5nZXRUaW1lKCkpfWVsc2UgaWYoeT5wKXt2YXIgaj1sKG4seCksWT1NYXRoLmNlaWwoeS9wKTt5PVkqcDtmb3IodmFyIGI9MDtiPD1qK1k7Yis9WSlTLnB1c2gobitiKnApfWVsc2V7eTwxZTMmJih5PTFlMyksbj0xZTMqTWF0aC5mbG9vcihuLzFlMyk7dmFyIEg9TWF0aC5jZWlsKCh4LW4pLzFlMyksQj1NYXRoLmNlaWwoeS8xZTMpO3k9MWUzKkI7Zm9yKHZhciBiPTA7YjxIK0I7Yis9QilTLnB1c2gobisxZTMqYil9fWlmKCFTLmxlbmd0aCl7bj0xZTMqTWF0aC5mbG9vcihuLzFlMykseD0xZTMqTWF0aC5jZWlsKHgvMWUzKTtmb3IodmFyIGU9KHgtbikveSxiPTA7Yjw9ZTtiKyspUy5wdXNoKGYuZml4ZWRCYXNlKHkqYituLHkpKX1yZXR1cm57bWF4OngsbWluOm4saW50ZXJ2YWw6eSx0aWNrczpTLGNvdW50OlMubGVuZ3RofX07dC5leHBvcnRzPXh9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQsZSl7dmFyIG49ZS50b1N0cmluZygpLHI9bi5pbmRleE9mKFwiLlwiKTtpZihyPT09LTEpcmV0dXJuIE1hdGgucm91bmQodCk7dmFyIGk9bi5zdWJzdHIocisxKS5sZW5ndGg7cmV0dXJuIHBhcnNlRmxvYXQodC50b0ZpeGVkKGkpKX1mdW5jdGlvbiBpKHQsZSl7Zm9yKHZhciBuIGluIGUpZS5oYXNPd25Qcm9wZXJ0eShuKSYmXCJjb25zdHJ1Y3RvclwiIT09biYmKHRbbl09ZVtuXSl9dmFyIGE9big3MSk7YS5taXgoYSx7bWl4aW46ZnVuY3Rpb24odCxlKXtpZih0JiZlKXt0Ll9taXhpbnM9ZSx0LkFUVFJTPXQuQVRUUlN8fHt9O3ZhciBuPXt9O2EuZWFjaChlLGZ1bmN0aW9uKGUpe2EuYXVnbWVudCh0LGUpO3ZhciByPWUuQVRUUlM7ciYmYS5taXgobixyKX0pLHQuQVRUUlM9YS5taXgobix0LkFUVFJTKX19LG1hcDpmdW5jdGlvbih0LGUpe3ZhciBuPVtdO3JldHVybiBhLmVhY2godCxmdW5jdGlvbih0LHIpe24ucHVzaChlKHQscikpfSksbn0sZmlsdGVyOmZ1bmN0aW9uKHQsZSl7dmFyIG49W107cmV0dXJuIGEuZWFjaCh0LGZ1bmN0aW9uKHQscil7ZSh0LHIpJiZuLnB1c2godCl9KSxufSxndWlkOmZ1bmN0aW9uKCl7dmFyIHQ9e307cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBlPWV8fFwiZ1wiLHRbZV0/dFtlXSs9MTp0W2VdPTEsZSt0W2VdfX0oKSxpbkFycmF5OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGEuaW5kZXhPZih0LGUpIT09LTF9LGluZGV4T2Y6ZnVuY3Rpb24odCxlKXt2YXIgbj1BcnJheS5wcm90b3R5cGUuaW5kZXhPZjtpZihuKXJldHVybiBuLmNhbGwodCxlKTtmb3IodmFyIHI9LTEsaT0wO2k8dC5sZW5ndGg7aSsrKWlmKHRbaV09PT1lKXtyPWk7YnJlYWt9cmV0dXJuIHJ9LHJlbW92ZTpmdW5jdGlvbih0LGUpe3ZhciBuPWEuaW5kZXhPZih0LGUpO24hPT0tMSYmdC5zcGxpY2UobiwxKX0sZW1wdHk6ZnVuY3Rpb24odCl7aWYoISh0IGluc3RhbmNlb2YgQXJyYXkpKWZvcih2YXIgZT10Lmxlbmd0aC0xO2U+PTA7ZS0tKWRlbGV0ZSB0W2VdO3QubGVuZ3RoPTB9LGVxdWFsc0FycmF5OmZ1bmN0aW9uKHQsZSl7aWYodD09PWUpcmV0dXJuITA7aWYoIXR8fCFlKXJldHVybiExO2lmKHQubGVuZ3RoIT09ZS5sZW5ndGgpcmV0dXJuITE7Zm9yKHZhciBuPSEwLHI9MDtyPHQubGVuZ3RoO3IrKylpZih0W3JdIT09ZVtyXSl7bj0hMTticmVha31yZXR1cm4gbn0sd3JhcEJlaGF2aW9yOmZ1bmN0aW9uKHQsZSl7dmFyIG49ZnVuY3Rpb24obil7dFtlXShuKX07cmV0dXJuIHRbXCJfd3JhcF9cIitlXT1uLG59LGdldFdyYXBCZWhhdmlvcjpmdW5jdGlvbih0LGUpe3JldHVybiB0W1wiX3dyYXBfXCIrZV19LGZpeGVkQmFzZTpmdW5jdGlvbih0LGUpe3JldHVybiByKHQsZSl9LGxlbmd0aDpmdW5jdGlvbih0KXtpZihhLmlzQXJyYXkodCkpcmV0dXJuIHQubGVuZ3RoO2lmKGEuaXNPYmplY3QodCkpe3ZhciBlPTA7cmV0dXJuIGEuZWFjaCh0LGZ1bmN0aW9uKCl7ZSsrfSksZX1yZXR1cm4gMH0sY2xvbmU6ZnVuY3Rpb24odCl7aWYoXCJvYmplY3RcIiE9dHlwZW9mIHR8fG51bGw9PT10KXJldHVybiB0O3ZhciBlO2lmKGEuaXNBcnJheSh0KSl7ZT1bXTtmb3IodmFyIG49MCxyPXQubGVuZ3RoO248cjtuKyspXCJvYmplY3RcIj09dHlwZW9mIHRbbl0mJm51bGwhPXRbbl0/ZVtuXT1hLmNsb25lKHRbbl0pOmVbbl09dFtuXX1lbHNle2U9e307Zm9yKHZhciBpIGluIHQpXCJvYmplY3RcIj09dHlwZW9mIHRbaV0mJm51bGwhPXRbaV0/ZVtpXT1hLmNsb25lKHRbaV0pOmVbaV09dFtpXX1yZXR1cm4gZX0sc2ltcGxlTWl4OmZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiBlJiZpKHQsZSksbiYmaSh0LG4pLHImJmkodCxyKSx0fX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxMiksaT1uKDEpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07aS5leHRlbmQoYSxyKSxpLmF1Z21lbnQoYSx7dHlwZTpcImlkZW50aXR5XCIsdmFsdWU6bnVsbCxnZXRUZXh0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmFsdWUudG9TdHJpbmcoKX0sc2NhbGU6ZnVuY3Rpb24oKXtyZXR1cm4gMX0saW52ZXJ0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmFsdWV9fSksdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDEyKSxpPW4oMSksYT1uKDE1KSxzPWZ1bmN0aW9uKHQpe3Muc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2kuZXh0ZW5kKHMsciksaS5hdWdtZW50KHMse3R5cGU6XCJsaW5lYXJcIixpc0xpbmVhcjohMCxtaW46bnVsbCxtYXg6bnVsbCxuaWNlOiEwLHRpY2tDb3VudDo1LHRpY2tJbnRlcnZhbDpudWxsLGluaXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKHQudGlja3Mpe3ZhciBlPXQudGlja3Msbj10LnRyYW5zbGF0ZShlWzBdKSxyPXQudHJhbnNsYXRlKGVbZS5sZW5ndGgtMV0pOyhpLmlzTnVsbCh0Lm1pbil8fHQubWluPm4pJiYodC5taW49biksKGkuaXNOdWxsKHQubWF4KXx8dC5tYXg8cikmJih0Lm1heD1yKX1lbHNlIHQubWluPXQudHJhbnNsYXRlKHQubWluKSx0Lm1heD10LnRyYW5zbGF0ZSh0Lm1heCksdC5pbml0VGlja3MoKX0sY2FsY3VsYXRlVGlja3M6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5taW4sbj10Lm1heCxyPXQudGlja0NvdW50LGk9dC50aWNrSW50ZXJ2YWwscz1hLm51bWJlcih7bWluOmUsbWF4Om4sbWluQ291bnQ6cixtYXhDb3VudDpyLGludGVydmFsOml9KTtyZXR1cm4gcy50aWNrc30saW5pdFRpY2tzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuY2FsY3VsYXRlVGlja3MoKTtpZih0Lm5pY2UpdC50aWNrcz1lLHQubWluPWVbMF0sdC5tYXg9ZVtlLmxlbmd0aC0xXTtlbHNle3ZhciBuPVtdO2kuZWFjaChlLGZ1bmN0aW9uKGUpe2U+PXQubWluJiZlPD10Lm1heCYmbi5wdXNoKGUpfSksdC50aWNrcz1ufX0sc2NhbGU6ZnVuY3Rpb24odCl7aWYobnVsbD09PXR8fHZvaWQgMD09PXQpcmV0dXJuIE5hTjt2YXIgZT10aGlzLm1heCxuPXRoaXMubWluO2lmKGU9PT1uKXJldHVybiAwO3ZhciByPSh0LW4pLyhlLW4pLGk9dGhpcy5yYW5nZU1pbigpLGE9dGhpcy5yYW5nZU1heCgpO3JldHVybiBpK3IqKGEtaSl9LGludmVydDpmdW5jdGlvbih0KXt2YXIgZT0odC10aGlzLnJhbmdlTWluKCkpLyh0aGlzLnJhbmdlTWF4KCktdGhpcy5yYW5nZU1pbigpKTtyZXR1cm4gdGhpcy5taW4rZSoodGhpcy5tYXgtdGhpcy5taW4pfX0pLHQuZXhwb3J0cz1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigyNSksaT1uKDEpLGE9big2Mykscz1uKDE1KSxvPWZ1bmN0aW9uKHQpe28uc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2kuZXh0ZW5kKG8sciksaS5hdWdtZW50KG8se3R5cGU6XCJ0aW1lQ2F0XCIsbWFzazpcInl5eXktbW0tZGQgSEg6TU06c3NcIix0aWNrQ291bnQ6NSxpbml0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXRoaXMudmFsdWVzO2Uuc29ydChmdW5jdGlvbihlLG4pe3JldHVybiBlPXQuX3RvVGltZVN0YW1wKGUpLG49dC5fdG9UaW1lU3RhbXAobiksZS1ufSksaS5lYWNoKGUsZnVuY3Rpb24obixyKXtlW3JdPXQuX3RvVGltZVN0YW1wKG4pfSksdGhpcy50aWNrcz10aGlzLmNhbGN1bGF0ZVRpY2tzKCEwKX0sY2FsY3VsYXRlVGlja3M6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUudGlja0NvdW50LHI9cy5jYXRlZ29yeSh7bWF4Q291bnQ6bixkYXRhOmUudmFsdWVzfSksbz1yLnRpY2tzO3JldHVybiB0JiZpLmVhY2gobyxmdW5jdGlvbih0LG4pe29bbl09YS5mb3JtYXQodCxlLm1hc2spfSksb30sdHJhbnNsYXRlOmZ1bmN0aW9uKHQpe3Q9dGhpcy5fdG9UaW1lU3RhbXAodCk7dmFyIGU9dGhpcy52YWx1ZXMuaW5kZXhPZih0KTtyZXR1cm4gZT09PS0xJiYoZT1pLmlzTnVtYmVyKHQpJiZ0PHRoaXMudmFsdWVzLmxlbmd0aD90Ok5hTiksZX0sc2NhbGU6ZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzLnJhbmdlTWluKCkscj10aGlzLnJhbmdlTWF4KCksaT10aGlzLnRyYW5zbGF0ZSh0KTtyZXR1cm4gZT10aGlzLnZhbHVlcy5sZW5ndGg+MSYmaT4tMT9pLyh0aGlzLnZhbHVlcy5sZW5ndGgtMSk6MCxuK2UqKHItbil9LGdldFRleHQ6ZnVuY3Rpb24odCl7dmFyIGU9XCJcIixuPXRoaXMudHJhbnNsYXRlKHQpO24+LTEmJihlPXRoaXMudmFsdWVzW25dKTt2YXIgcj10aGlzLmZvcm1hdHRlcjtyZXR1cm4gZT1wYXJzZUludChlLDEwKSxlPXI/cihlKTphLmZvcm1hdChlLHRoaXMubWFzayl9LGdldFRpY2tzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXRoaXMuY2FsY3VsYXRlVGlja3MoITEpLG49W107cmV0dXJuIGkuZWFjaChlLGZ1bmN0aW9uKGUpe3ZhciByO3I9aS5pc09iamVjdChlKT9lOnt0ZXh0OnQuZ2V0VGV4dChlKSx2YWx1ZTp0LnNjYWxlKGUpfSxuLnB1c2gocil9KSxufSxfdG9UaW1lU3RhbXA6ZnVuY3Rpb24odCl7cmV0dXJuIGkuaXNTdHJpbmcodCkmJih0PXQucmVwbGFjZSgvLS9naSxcIi9cIikucmVwbGFjZShcIlRcIixcIiBcIikucmVwbGFjZShcIlpcIixcIlwiKSx0PW5ldyBEYXRlKHQpLmdldFRpbWUoKSksaS5pc0RhdGUodCkmJih0PXQuZ2V0VGltZSgpKSx0fX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigyKTtyLkdlb20uU2NoZW1hPW4oODEpLG4oODIpLHIuQ2hhcnQucmVnaXN0R2VvbShcInNjaGVtYVwiKSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7ci5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX12YXIgaT1uKDEpLGE9bigyKSxzPWEuR2VvbTtyLkFUVFJTPXtjb3JlVHlwZTpcIlNjaGVtYVwifSxpLmV4dGVuZChyLHMpLGkubWl4aW4ocixbcy5XaWR0aE1peGluXSksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDIpLGk9ci5TaGFwZSxhPWkucmVnaXN0R2VvbShcInNjaGVtYVwiLHt9KTt0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTEpLGk9bigxKSxhPWZ1bmN0aW9uKHQpe2Euc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O2kuZXh0ZW5kKGEsciksaS5hdWdtZW50KGEse3R5cGU6XCJjb2xvclwiLG5hbWVzOltcImNvbG9yXCJdLGFycjpudWxsfSksci5Db2xvcj1hLHIuUG9zaXRpb249big4NSksci5TaXplPW4oODcpLHIuU2hhcGU9big4Niksci5PcGFjaXR5PW4oODQpLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMTEpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQoYSxpKSxyLmF1Z21lbnQoYSx7dHlwZTpcIm9wYWNpdHlcIixuYW1lczpbXCJvcGFjaXR5XCJdLG1pbjouMSxtYXg6MSxhcnI6bnVsbH0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMTEpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQoYSxpKSxyLmF1Z21lbnQoYSx7dHlwZTpcInBvc2l0aW9uXCIsbmFtZXM6W1wieFwiLFwieVwiLFwielwiXSxjb29yZDpudWxsLHBhcnNlUGFyYW06ZnVuY3Rpb24odCxlKXt2YXIgbjtyZXR1cm4gci5pc0FycmF5KHQpPyhuPVtdLHIuZWFjaCh0LGZ1bmN0aW9uKHQpe24ucHVzaChlLnNjYWxlKHQpKX0pKTpuPWUuc2NhbGUodCksbn0sY2FsbGJhY2s6ZnVuY3Rpb24odCxlKXt2YXIgbixpLGEscz10aGlzLmNvb3JkO2lmKHR8fDA9PT10fHwodD0uMSksZXx8MD09PWV8fChlPS4xKSxyLmlzQXJyYXkoZSkmJnIuaXNBcnJheSh0KSl7bj1bXSxpPVtdO2Zvcih2YXIgbz0wLGM9MDtvPHQubGVuZ3RoJiZjPGUubGVuZ3RoO28rKyxjKyspYT1zLmNvbnZlcnRQb2ludCh7eDp0W29dLHk6ZVtjXX0pLG4ucHVzaChhLngpLGkucHVzaChhLnkpfWVsc2UgaWYoci5pc0FycmF5KGUpKWk9W10sci5lYWNoKGUsZnVuY3Rpb24oZSl7YT1zLmNvbnZlcnRQb2ludCh7eDp0LHk6ZX0pLG4mJm4hPT1hLng/KHIuaXNBcnJheShuKXx8KG49W25dKSxuLnB1c2goYS54KSk6bj1hLngsaS5wdXNoKGEueSl9KTtlbHNlIGlmKHIuaXNBcnJheSh0KSluPVtdLHIuZWFjaCh0LGZ1bmN0aW9uKHQpe2E9cy5jb252ZXJ0UG9pbnQoe3g6dCx5OmV9KSxpJiZpIT09YS55PyhyLmlzQXJyYXkoaSl8fChpPVtpXSksaS5wdXNoKGEueSkpOmk9YS55LG4ucHVzaChhLngpfSk7ZWxzZXt2YXIgdT1zLmNvbnZlcnRQb2ludCh7eDp0LHk6ZX0pO249dS54LGk9dS55fXJldHVybltuLGldfX0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMTEpLGE9ZnVuY3Rpb24odCl7YS5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KX07ci5leHRlbmQoYSxpKSxyLmF1Z21lbnQoYSx7dHlwZTpcInNoYXBlXCIsbmFtZXM6W1wic2hhcGVcIl0sYXJyOm51bGx9KSx0LmV4cG9ydHM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMSksaT1uKDExKSxhPWZ1bmN0aW9uKHQpe2Euc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9O3IuZXh0ZW5kKGEsaSksci5hdWdtZW50KGEse3R5cGU6XCJzaXplXCIsbmFtZXM6W1wic2l6ZVwiXSxhcnI6bnVsbH0pLHQuZXhwb3J0cz1hfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigyKTtyLkdlb20uQXJlYT1uKDI2KSxyLkdlb20uQXJlYVN0YWNrPW4oODkpLG4oOTApLHIuQ2hhcnQucmVnaXN0R2VvbShcImFyZWFcIiksci5DaGFydC5yZWdpc3RHZW9tKFwiYXJlYVN0YWNrXCIpLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfXZhciBpPW4oMSksYT1uKDI2KSxzPW4oMiksbz1zLkdlb20uU3RhY2tNaXhpbjtpLmV4dGVuZChyLGEpLGkubWl4aW4ocixbb10pLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUpe3JldHVybiBNYXRoLmFicyh0LWUpPDFlLTV9ZnVuY3Rpb24gaSh0LGUpe3ZhciBuPSEwO3JldHVybiBzLmVhY2godCxmdW5jdGlvbih0KXtpZighcih0LngsZS54KXx8IXIodC55LGUueSkpcmV0dXJuIG49ITEsITF9KSxufWZ1bmN0aW9uIGEodCxlKXt2YXIgbj10aGlzLHI9dC5wb2ludHMsYT1bXSxvPVtdO3MuZWFjaChyLGZ1bmN0aW9uKHQpe28ucHVzaCh0WzBdKSxhLnB1c2godFsxXSl9KTt2YXIgYz1zLm1peCh7ZmlsbFN0eWxlOnQuY29sb3J9LHQuc3R5bGUpLGw9dS5iZWZvcmUoZSxjKTtvLnJldmVyc2UoKSxhPW4ucGFyc2VQb2ludHMoYSksbz1uLnBhcnNlUG9pbnRzKG8pLHQuaXNJbkNpcmNsZT8oaShvLHQuY2VudGVyKSYmKG89W10pLG4uZHJhd0NpcmNsZUFyZWEoYSxvLGwpKTpuLmRyYXdSZWN0U2hhcGUoYSxvLGwpLHUuYWZ0ZXIobCxjKX12YXIgcz1uKDEpLG89bigyKSxjPW8uU2hhcGUsdT1vLkcsbD1jLnJlZ2lzdEdlb20oXCJhcmVhXCIse2RlZmF1bHRTaGFwZVR5cGU6XCJhcmVhXCJ9KTtjLnJlZ2lzdFNoYXBlKFwiYXJlYVwiLFwiYXJlYVwiLHtnZXRTaGFwZVBvaW50czpmdW5jdGlvbih0KXt2YXIgZT10Lngsbj10Lnkscj10LnkwO249cy5pc0FycmF5KG4pP246W3Isbl07dmFyIGk9W107cmV0dXJuIGkucHVzaCh7eDplLHk6blswXX0se3g6ZSx5Om5bMV19KSxpfSxkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXthLmNhbGwodGhpcyx0LGUpfSxkcmF3Q2lyY2xlQXJlYTpmdW5jdGlvbih0LGUsbil7dS5saW5lcyh0LG4pLG4ubGluZVRvKHRbMF0ueCx0WzBdLnkpLG4uY2xvc2VQYXRoKCksZS5sZW5ndGgmJih1LmxpbmVzKGUsbiksbi5jbG9zZVBhdGgoKSl9LGRyYXdSZWN0U2hhcGU6ZnVuY3Rpb24odCxlLG4pe3Q9dC5jb25jYXQoZSksdS5saW5lcyh0LG4pLG4uY2xvc2VQYXRoKCl9fSksYy5yZWdpc3RTaGFwZShcImFyZWFcIixcInNtb290aFwiLHtkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXthLmNhbGwodGhpcyx0LGUpfSxkcmF3Q2lyY2xlQXJlYTpmdW5jdGlvbih0LGUsbil7dS5zbW9vdGgodCxuKSxuLmNsb3NlUGF0aCgpLGUubGVuZ3RoJiYodS5zbW9vdGgoZSxuKSxuLmNsb3NlUGF0aCgpKX0sZHJhd1JlY3RTaGFwZTpmdW5jdGlvbih0LGUsbil7dS5zbW9vdGgodCxuKSxuLmxpbmVUbyhlWzBdLngsZVswXS55KSx1LnNtb290aChlLG4sITEpLG4uY2xvc2VQYXRoKCl9fSksdC5leHBvcnRzPWx9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDIpO24oOTIpLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0KXt2YXIgZT10LnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdDxlPzE6LTF9KSxuPWUubGVuZ3RoO2lmKG48NClmb3IodmFyIHI9ZVtuLTFdLGk9MDtpPDQtbjtpKyspZS5wdXNoKHIpO3JldHVybiBlfWZ1bmN0aW9uIGkodCxlLG4pe3ZhciBpPXIoZSksYT1be3g6dCx5OmlbMF19LHt4OnQseTppWzFdfSx7eDp0LW4vMix5OmlbMl19LHt4OnQtbi8yLHk6aVsxXX0se3g6dCtuLzIseTppWzFdfSx7eDp0K24vMix5OmlbMl19LHt4OnQseTppWzJdfSx7eDp0LHk6aVszXX1dO3JldHVybiBhfXZhciBhPW4oMikscz1uKDEpLG89YS5TaGFwZSxjPWEuRztuKDgwKTt2YXIgdT1vLnJlZ2lzdFNoYXBlKFwic2NoZW1hXCIsXCJjYW5kbGVcIix7Z2V0U2hhcGVQb2ludHM6ZnVuY3Rpb24odCl7dmFyIGU9aSh0LngsdC55LHQuc2l6ZSk7cmV0dXJuIGV9LGRyYXdTaGFwZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMucGFyc2VQb2ludHModC5wb2ludHMpLHI9cy5taXgoe3N0cm9rZVN0eWxlOnQuY29sb3IsZmlsbFN0eWxlOnQuY29sb3J9LHQuc3R5bGUpLGk9Yy5iZWZvcmUoZSxyKTtpLm1vdmVUbyhuWzBdLngsblswXS55KSxpLmxpbmVUbyhuWzFdLngsblsxXS55KSxpLm1vdmVUbyhuWzJdLngsblsyXS55KTtmb3IodmFyIGE9MzthPDY7YSsrKWkubGluZVRvKG5bYV0ueCxuW2FdLnkpO2kuY2xvc2VQYXRoKCksaS5tb3ZlVG8obls2XS54LG5bNl0ueSksaS5saW5lVG8obls3XS54LG5bN10ueSksYy5hZnRlcihpLHIpfX0pO3QuZXhwb3J0cz11fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXt2YXIgZT10LnNsaWNlKDApO2lmKGUubGVuZ3RoPjApe3ZhciBuPWVbMF0scj1lW2UubGVuZ3RoLTFdOzAhPT1uLnZhbHVlJiZlLnVuc2hpZnQoe3ZhbHVlOjB9KSwxIT09ci52YWx1ZSYmZS5wdXNoKHt2YWx1ZToxfSl9cmV0dXJuIGV9dmFyIGk9bigxKSxhPW4oOTQpLHM9bigzKSxvPWZ1bmN0aW9uKHQpe3RoaXMuYXhpc0NmZz17fSxpLm1peCh0aGlzLHQpfTtpLmF1Z21lbnQobyx7YXhpc0NmZzp7fSxjYW52YXM6bnVsbCxfaXNIaWRlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuYXhpc0NmZztyZXR1cm4hZXx8ZVt0XT09PSExfSxfZ2V0TGluZVBvc2l0aW9uOmZ1bmN0aW9uKHQsZSl7dmFyIG49XCJcIjtyZXR1cm5cInhcIj09PXQmJihuPVwiYm90dG9tXCIpLFwieVwiPT09dCYmKG49ZT9cInJpZ2h0XCI6XCJsZWZ0XCIpLG59LF9nZXRMaW5lQ2ZnOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpLGE9MTtyZXR1cm5cInhcIj09PWU/KHI9e3g6MCx5OjB9LGk9e3g6MSx5OjB9KTpuPyhyPXt4OjEseTowfSxpPXt4OjEseToxfSk6KHI9e3g6MCx5OjB9LGk9e3g6MCx5OjF9LGE9LTEpLHQuaXNUcmFuc3Bvc2VkJiYoYSo9LTEpLHtvZmZzZXRGYWN0b3I6YSxzdGFydDp0LmNvbnZlcnRQb2ludChyKSxlbmQ6dC5jb252ZXJ0UG9pbnQoaSl9fSxfZ2V0Q2lyY2xlQ2ZnOmZ1bmN0aW9uKHQpe3JldHVybntzdGFydEFuZ2xlOnQuZ2V0KFwic3RhcnRBbmdsZVwiKSxlbmRBbmdsZTp0LmdldChcImVuZEFuZ2xlXCIpLGNlbnRlcjp0LmdldChcImNlbnRlclwiKSxyYWRpdXM6dC5nZXQoXCJyYWRpdXNcIil9fSxfZ2V0UmFkaXVzQ2ZnOmZ1bmN0aW9uKHQpe3ZhciBlLG4scj10LmlzVHJhbnNwb3NlZDtyZXR1cm4gcj8oZT17eDowLHk6MH0sbj17eDoxLHk6MH0pOihlPXt4OjAseTowfSxuPXt4OjAseToxfSkse29mZnNldEZhY3RvcjotMSxzdGFydDp0LmNvbnZlcnRQb2ludChlKSxlbmQ6dC5jb252ZXJ0UG9pbnQobil9fSxfZ2V0QXhpc0NmZzpmdW5jdGlvbih0LGUsbixhLHMpe3ZhciBvPXRoaXMuYXhpc0NmZyxjPWUuZ2V0VGlja3MoKSx1PWkubWl4KCEwLHt0aWNrczpjLGNhbnZhczp0aGlzLmNhbnZhc30scyxvW2UuZGltXSk7aWYodS5ncmlkJiZuKXt2YXIgbD1bXSxmPXIobi5nZXRUaWNrcygpKTtpLmVhY2goYyxmdW5jdGlvbihlKXt2YXIgbj1bXTtpLmVhY2goZixmdW5jdGlvbihyKXt2YXIgaT1cInhcIj09PWE/ZS52YWx1ZTpyLnZhbHVlLHM9XCJ4XCI9PT1hP3IudmFsdWU6ZS52YWx1ZSxvPXQuY29udmVydFBvaW50KHtcbng6aSx5OnN9KTtuLnB1c2gobyl9KSxsLnB1c2gobil9KSx1LmdyaWRQb2ludHM9bH1yZXR1cm4gdX0sX2NyZWF0ZUF4aXM6ZnVuY3Rpb24odCxlLG4scixvKXt2YXIgYyx1LGwsZj10aGlzLGg9dC5nZXQoXCJ0eXBlXCIpLGc9dC5pc1RyYW5zcG9zZWQ7aWYoXCJjYXJ0ZXNpYW5cIj09PWgpe2M9YS5MaW5lO3ZhciBwPWYuX2dldExpbmVQb3NpdGlvbihyLG8pO3U9cy5heGlzW3BdLGw9Zi5fZ2V0TGluZUNmZyh0LHIsbyl9ZWxzZVwieFwiPT09ciYmIWd8fFwieVwiPT09ciYmZz8oYz1hLkNpcmNsZSx1PXMuYXhpcy5jaXJjbGUsbD1mLl9nZXRDaXJjbGVDZmcodCkpOihjPWEuTGluZSx1PXMuYXhpcy5yYWRpdXMsbD1mLl9nZXRSYWRpdXNDZmcodCkpO3ZhciB2PWYuX2dldEF4aXNDZmcodCxlLG4scix1KTt2PWkubWl4KCEwLHt9LHYsbCk7dmFyIGQ9bmV3IGModik7cmV0dXJuIGQuZHJhd0dyaWQoKSxkfSxjcmVhdGVBeGlzOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10aGlzLGE9W107aWYoZSYmIXIuX2lzSGlkZShlLmRpbSkpe3ZhciBzPXIuX2NyZWF0ZUF4aXModCxlLG5bMF0sXCJ4XCIpO2EucHVzaChzKX1pLmVhY2gobixmdW5jdGlvbihuLGkpe2lmKCFyLl9pc0hpZGUobi5kaW0pKXt2YXIgcz1yLl9jcmVhdGVBeGlzKHQsbixlLFwieVwiLGkpO2EucHVzaChzKX19KSxpLmVhY2goYSxmdW5jdGlvbih0KXt0LmRyYXcoKX0pfX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dC5leHBvcnRzPXtMaW5lOm4oOTYpLENpcmNsZTpuKDk1KX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3Iuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9dmFyIGk9bigxKSxhPW4oMjgpLHM9big3KSxvPW4oOCk7ci5BVFRSUz17c3RhcnRBbmdsZTotTWF0aC5QSS8yLGVuZEFuZ2xlOjMqTWF0aC5QSS8yLHJhZGl1czpudWxsLGNlbnRlcjpudWxsfSxpLmV4dGVuZChyLGEpLGkuYXVnbWVudChyLHtnZXRPZmZzZXRQb2ludDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQoXCJzdGFydEFuZ2xlXCIpLHI9ZS5nZXQoXCJlbmRBbmdsZVwiKSxpPW4rKHItbikqdDtyZXR1cm4gZS5fZ2V0Q2lyY2xlUG9pbnQoaSl9LF9nZXRDaXJjbGVQb2ludDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmdldChcImNlbnRlclwiKTtyZXR1cm4gZT1lfHxuLmdldChcInJhZGl1c1wiKSx7eDpyLngrTWF0aC5jb3ModCkqZSx5OnIueStNYXRoLnNpbih0KSplfX0sZ2V0VGV4dEFsaWduSW5mbzpmdW5jdGlvbih0LGUpe3ZhciBuLHI9dGhpcyxpPXIuZ2V0T2Zmc2V0VmVjdG9yKHQsZSksYT1cIm1pZGRsZVwiO3JldHVybiBpLng+MD9uPVwibGVmdFwiOmkueDwwP249XCJyaWdodFwiOihuPVwiY2VudGVyXCIsaS55PjA/YT1cInRvcFwiOmkueTwwJiYoYT1cImJvdHRvbVwiKSkse3RleHRBbGlnbjpuLHRleHRCYXNlbGluZTphfX0sZ2V0QXhpc1ZlY3RvcjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQoXCJjZW50ZXJcIikscj1lLmdldChcIm9mZnNldEZhY3RvclwiKTtyZXR1cm4gbmV3IG8oKHQueS1uLnkpKnIsKHQueC1uLngpKi0xKnIpfSxkcmF3TGluZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQoXCJjZW50ZXJcIikscj1lLmdldChcInJhZGl1c1wiKSxpPWUuZ2V0KFwiY2FudmFzXCIpLGE9ZS5nZXQoXCJzdGFydEFuZ2xlXCIpLG89ZS5nZXQoXCJlbmRBbmdsZVwiKTtzLmRyYXdBcmMobixyLGEsbyxpLHQpfX0pLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfXZhciBpPW4oMSksYT1uKDI4KSxzPW4oNyksbz1uKDgpO3IuQVRUUlM9e3N0YXJ0Om51bGwsZW5kOm51bGx9LGkuZXh0ZW5kKHIsYSksaS5hdWdtZW50KHIse2dldE9mZnNldFBvaW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldChcInN0YXJ0XCIpLHI9ZS5nZXQoXCJlbmRcIiksaT1yLngtbi54LGE9ci55LW4ueTtyZXR1cm57eDpuLngraSp0LHk6bi55K2EqdH19LGdldEF4aXNWZWN0b3I6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJzdGFydFwiKSxuPXQuZ2V0KFwiZW5kXCIpO3JldHVybiBuZXcgbyhuLngtZS54LG4ueS1lLnkpfSxkcmF3TGluZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5nZXQoXCJjYW52YXNcIikscj1lLmdldChcInN0YXJ0XCIpLGk9ZS5nZXQoXCJlbmRcIik7cy5kcmF3TGluZShyLGksbix0KX19KSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7ci5zdXBlcmNsYXNzLmNvbnN0cnVjdG9yLmNhbGwodGhpcyx0KSx0aGlzLl9faW5pdCgpfWZ1bmN0aW9uIGkodCl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGU9dGhpcyxuPW5ldyBmKHtjaGFydDplLHR5cGU6dCxjb29yZDplLmdldChcImNvb3JkXCIpfSk7cmV0dXJuIGUuX19hZGRMYXllcihuKSxufX12YXIgYT1uKDYpLHM9bigzOCksbz1uKDEpLGM9big1KSx1PW4oMzApLGw9bigxNiksZj1uKDEwNSksaD1uKDEwNyksZz1uKDkzKSxwPW4oMzcpLHY9bigzKSxkPW4oOTgpLG09bigyNyk7ci5BVFRSUz17aWQ6bnVsbCxtYXJnaW46bnVsbCxkYXRhOm51bGwsc2NhbGVzOnt9LGNvb3JkQ2ZnOnt0eXBlOlwiY2FydGVzaWFuXCJ9LGxheWVyczpudWxsLGdlb21zOm51bGwsY29sRGVmczpudWxsfSxvLmV4dGVuZChyLGEpLG8uYXVnbWVudChyLHtzb3VyY2U6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBlJiZuLnNldChcImNvbERlZnNcIixlKSxuLl9faW5pdERhdGEodCksbn0sYXhpczpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmdldChcImF4aXNBc3Npc3RcIik7cmV0dXJuIHQ/KHIuYXhpc0NmZz1yLmF4aXNDZmd8fHt9LHIuYXhpc0NmZ1t0XT1lKTpyLmF4aXNDZmc9bnVsbCxufSxjcmVhdGVTY2FsZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7ZT1lfHxuLmdldChcImRhdGFcIik7dmFyIHI9bi5nZXQoXCJzY2FsZXNcIik7cmV0dXJuIHJbdF18fChyW3RdPW4uX2NyZWF0ZVNjYWxlKHQsZSkpLHJbdF19LF9jcmVhdGVTY2FsZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj1uLmdldChcImNvb3JkXCIpLGk9ci5pc1BvbGFyLGE9bi5nZXQoXCJzY2FsZUFzc2lzdFwiKTtyZXR1cm4gYS5jcmVhdGVTY2FsZSh0LGUsaSl9LGNvb3JkOmZ1bmN0aW9uKHQsZSl7dmFyIG4scj10aGlzO3JldHVybiBlPyhuPWUsbi50eXBlPXQpOm49by5pc1N0cmluZyh0KT97dHlwZTp0fTp0LHIuc2V0KFwiY29vcmRDZmdcIixuKSxyLl9faW5pdENvb3JkKCkscn0sZ2V0UG9zaXRpb246ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZ2V0KFwiY29vcmRcIikscj1lLl9nZXRYU2NhbGUoKSxpPWUuX2dldFlTY2FsZXMoKVswXSxhPXIuZGltLHM9ci5zY2FsZSh0W2FdKSxvPWkuZGltLGM9aS5zY2FsZSh0W29dKTtyZXR1cm4gbi5jb252ZXJ0UG9pbnQoe3g6cyx5OmN9KX0sZ2V0UmVjb3JkOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldChcImNvb3JkXCIpLHI9ZS5fZ2V0WFNjYWxlKCksaT1lLl9nZXRZU2NhbGVzKClbMF0sYT1uLmludmVydFBvaW50KHQpLHM9e307cmV0dXJuIHNbci5kaW1dPXIuaW52ZXJ0KGEueCksc1tpLmRpbV09aS5pbnZlcnQoYS55KSxzfSxnZXRTbmFwUmVjb3JkczpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZ2V0KFwiZ2VvbXNcIilbMF0scj1uLmdldFNuYXBSZWNvcmRzKHQsZSk7cmV0dXJuIHJ9LF9faW5pdDpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dC5fX2luaXRDYW52YXMoKSx0LnNldChcImxheWVyc1wiLFtdKSx0LnNldChcImdlb21zXCIsW10pLHQuc2V0KFwic2NhbGVBc3Npc3RcIixuZXcgaCksdC5zZXQoXCJheGlzQXNzaXN0XCIsbmV3IGcoe2NhbnZhczp0LmdldChcImNhbnZhc1wiKX0pKSx0LnNldChcImd1aWRlQXNzaXN0XCIsbmV3IHApLHQuc2V0KFwiYW5pbWF0ZUFzc2lzdFwiLG5ldyBtKSx0Ll9faW5pdERhdGEodC5nZXQoXCJkYXRhXCIpKX0sX19pbml0RGF0YTpmdW5jdGlvbih0KXt0JiYodCBpbnN0YW5jZW9mIGN8fCh0PW5ldyBjKHQpKSx0aGlzLnNldChcImRhdGFcIix0KSk7dmFyIGU9dGhpcy5nZXQoXCJjb2xEZWZzXCIpO2lmKGUpe3ZhciBuPXRoaXMuZ2V0KFwic2NhbGVBc3Npc3RcIik7bi5kZWZzPWV9fSxfZ2V0UmF0aW86ZnVuY3Rpb24oKXtyZXR1cm4gdi5waXhlbFJhdGlvfSxfX2luaXRDYW52YXM6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMsbj1lLmdldChcImlkXCIpLHI9ZS5nZXQoXCJlbFwiKTt0PXI/cjpkb2N1bWVudC5nZXRFbGVtZW50QnlJZChuKTt2YXIgaT1kLmdldFdpZHRoKHQpLGE9ZC5nZXRIZWlnaHQodCkscz1lLl9nZXRSYXRpbygpO2lmKHMpe3Qud2lkdGg9aSpzLHQuaGVpZ2h0PWEqczt2YXIgbz10LmdldENvbnRleHQoXCIyZFwiKTtvLnNjYWxlKHMscyl9ZS5zZXQoXCJ3aWR0aFwiLGkpLGUuc2V0KFwiaGVpZ2h0XCIsYSksZS5zZXQoXCJjYW52YXNcIix0KSxlLl9faW5pdExheW91dCgpfSxfX2luaXRMYXlvdXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJtYXJnaW5cIik7by5pc051bGwoZSkmJihlPXYubWFyZ2luLHQuc2V0KFwibWFyZ2luXCIsZSkpO3ZhciBuLHIsaSxhLHM9dC5nZXQoXCJ3aWR0aFwiKSxjPXQuZ2V0KFwiaGVpZ2h0XCIpO28uaXNOdW1iZXIoZSk/KG49YT1lLHI9aT1lKTpvLmlzQXJyYXkoZSkmJihuPWVbMF0saT1vLmlzTnVsbChlWzFdKT9lWzBdOmVbMV0sYT1vLmlzTnVsbChlWzJdKT9lWzBdOmVbMl0scj1vLmlzTnVsbChlWzNdKT9pOmVbM10pLGE9Yy1hLGk9cy1pO3ZhciB1PXtwbG90OntzdGFydDp7eDpyLHk6bn0sZW5kOnt4OmkseTphfX0sbEF4aXM6e3N0YXJ0Ont4OjAseTpufSxlbmQ6e3g6cix5OmN9fSxyQXhpczp7c3RhcnQ6e3g6aSx5Om59LGVuZDp7eDpzLHk6Y319LGJBeGlzOntzdGFydDp7eDpyLHk6YX0sZW5kOnt4OmkseTpjfX19O3Quc2V0KFwibGF5b3V0XCIsdSksdC5fX2luaXRQbG90KCl9LF9faW5pdFBsb3Q6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJsYXlvdXRcIiksbj1uZXcgcyh7c3RhcnQ6ZS5wbG90LnN0YXJ0LGVuZDplLnBsb3QuZW5kfSk7dC5zZXQoXCJwbG90XCIsbiksdC5fX2luaXRDb29yZCgpfSxfX2luaXRDb29yZDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcInBsb3RcIiksbj1vLm1peCh7fSx0LmdldChcImNvb3JkQ2ZnXCIpLHtwbG90OmV9KSxyPW4udHlwZSxpPXVbby51Y2ZpcnN0KHIpXXx8dS5DYXJ0ZXNpYW4sYT1uZXcgaShuKTt0LnNldChcImNvb3JkXCIsYSl9LF9fYWRkTGF5ZXI6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztlLmdldChcImxheWVyc1wiKS5wdXNoKHQpfSxjbGVhcjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwiY2FudmFzXCIpLnBhcmVudE5vZGU7cmV0dXJuIHRoaXMuZ2V0KFwiZ3VpZGVBc3Npc3RcIikuY2xlYXIodCksdGhpcy5zZXQoXCJsYXllcnNcIixbXSksdGhpcy5zZXQoXCJnZW9tc1wiLFtdKSx0aGlzLnNldChcInNjYWxlc1wiLHt9KSx0aGlzLl9jbGVhckNhbnZhcygpLHRoaXN9LF9jbGVhckNhbnZhczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0KFwiY2FudmFzXCIpLGU9dC5nZXRDb250ZXh0KFwiMmRcIik7cmV0dXJuIGUuY2xlYXJSZWN0KDAsMCx0LndpZHRoLHQuaGVpZ2h0KSx0aGlzfSxfaXNEYXRhQ2hhbmdlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPSExLG49dC5nZXQoXCJnZW9tc1wiKTtyZXR1cm4gby5lYWNoKG4sZnVuY3Rpb24odCl7aWYodC5nZXQoXCJpc0FkanVzdFwiKSlyZXR1cm4gZT0hMCwhMX0pLGV9LF90cmFpblNjYWxlOmZ1bmN0aW9uKHQpe3ZhciBlLG49dGhpcyxyPW4uX2dldFlTY2FsZXMoKTt0Lmxlbmd0aD4wJiYoZT1jLm1lcmdlLmFwcGx5KG51bGwsdCkpLG8uZWFjaChyLGZ1bmN0aW9uKHQpe2lmKHQuaXNMaW5lYXIpe3ZhciByPW4uX2NyZWF0ZVNjYWxlKHQuZGltLGUpO3QuY2hhbmdlKHttaW46ci5taW4sbWF4OnIubWF4fSl9fSl9LF9yZW5kZXJCYWNrR3VpZGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJjYW52YXNcIiksbj10LmdldChcImd1aWRlQXNzaXN0XCIpO2lmKG4uZ3VpZGVzLmxlbmd0aCl7dmFyIHI9dC5nZXQoXCJjb29yZFwiKSxpPXQuX2dldFhTY2FsZSgpLGE9dC5fZ2V0WVNjYWxlcygpWzBdO24uc2V0U2NhbGUoaSxhKSxuLnBhaW50QmFjayhyLGUpfX0sX3JlbmRlckZyb250R3VpZGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJjYW52YXNcIiksbj10LmdldChcImd1aWRlQXNzaXN0XCIpO2lmKG4uZ3VpZGVzLmxlbmd0aCl7dmFyIHI9dC5nZXQoXCJjb29yZFwiKSxpPXQuX2dldFhTY2FsZSgpLGE9dC5fZ2V0WVNjYWxlcygpWzBdO24uc2V0U2NhbGUoaSxhKSxuLnBhaW50RnJvbnQocixlKX19LF9yZW5kZXJBbmltYXRlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmdldChcImltYWdlRGF0YVwiKSxyPWUuZ2V0KFwiYmdJbWFnZURhdGFcIiksaT1lLmdldChcImFuaW1hdGVBc3Npc3RcIiksYT1lLmdldChcImNhbnZhc1wiKSxzPWUuZ2V0KFwiY29vcmRcIiksbz1zLmdldChcImNlbnRlclwiKSxjPXMuZ2V0KFwicmFkaXVzXCIpLHU9ZS5nZXQoXCJnZW9tc1wiKVswXSxsPXUuZ2V0KFwiY29yZVwiKSxmPWwuZ2V0WVNjYWxlKCksaD1sLmdldFlNaW5WYWx1ZSgpLGc9cy5jb252ZXJ0UG9pbnQoe3g6MCx5OmYuc2NhbGUoaCl9KTtpLmFuaW1hdGUmJihpLnNldEltYWdlRGF0YShuLHIpLGkuc2V0U3RhcnRQb2ludChnKSxpLnNldFBvbGFyKG8sYyksaS5zZXRDYWxsQmFjayh0KSxpLnBhaW50KGEpKX0scmVuZGVyOmZ1bmN0aW9uKCl7dmFyIHQsZSxuLHI9dGhpcyxpPXIuZ2V0KFwibGF5ZXJzXCIpLGE9ci5nZXQoXCJnZW9tc1wiKSxzPXIuZ2V0KFwiZGF0YVwiKSxjPXIuZ2V0KFwiYW5pbWF0ZUFzc2lzdFwiKSx1PVtdO2ZvcihuPTA7bjxpLmxlbmd0aDtuKyspdD1pW25dLGU9dC5jcmVhdGVHZW9tKCksZS5pbml0RGF0YShzKSx1PXUuY29uY2F0KGUuZ2V0KFwiZnJhbWVzXCIpKSxhLnB1c2goZSk7cmV0dXJuIHIuX2lzRGF0YUNoYW5nZSgpJiZyLl90cmFpblNjYWxlKHUpLHIuYmVmb3JlRHJhd0dlb20oKSxjLmFuaW1hdGU/by5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24oKXtyLnNldChcImJnSW1hZ2VEYXRhXCIsci5nZXRJbWFnZURhdGEoKSksci5fY2xlYXJDYW52YXMoKSxyLmRyYXdHZW9tKGEpLHIuc2V0KFwiaW1hZ2VEYXRhXCIsci5nZXRJbWFnZURhdGEoKSksci5fY2xlYXJDYW52YXMoKSxyLl9yZW5kZXJBbmltYXRlKHIuX3JlbmRlckZyb250R3VpZGUuYmluZChyKSl9KTooci5kcmF3R2VvbShhKSxyLl9yZW5kZXJGcm9udEd1aWRlKCkpLHJ9LGRyYXdHZW9tOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspZT90W25dLmRyYXcoZSk6dFtuXS5kcmF3KCl9LGJlZm9yZURyYXdHZW9tOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0Ll9yZW5kZXJBeGlzKCksdC5fcmVuZGVyQmFja0d1aWRlKCl9LGdldEltYWdlRGF0YTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImNhbnZhc1wiKSxuPWUuZ2V0Q29udGV4dChcIjJkXCIpLHI9dC5nZXQoXCJ3aWR0aFwiKSxpPXQuZ2V0KFwiaGVpZ2h0XCIpLGE9dC5fZ2V0UmF0aW8oKTtyZXR1cm4gbi5nZXRJbWFnZURhdGEoMCwwLHIqYSxpKmEpfSxfZ2V0WFNjYWxlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuZ2V0KFwiZ2VvbXNcIiksbj1lWzBdLmdldFhTY2FsZSgpO3JldHVybiBufSxfZ2V0WVNjYWxlczpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmdldChcImdlb21zXCIpLG49W107cmV0dXJuIG8uZWFjaChlLGZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0WVNjYWxlKCk7by5pbmRleE9mKG4sZSk9PT0tMSYmbi5wdXNoKGUpfSksbn0sX3JlbmRlckF4aXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXQoXCJheGlzQXNzaXN0XCIpLG49dC5fZ2V0WFNjYWxlKCkscj10Ll9nZXRZU2NhbGVzKCksaT10LmdldChcImNvb3JkXCIpO2UuY3JlYXRlQXhpcyhpLG4scil9LGd1aWRlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0KFwiZ3VpZGVBc3Npc3RcIil9LGFuaW1hdGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXQoXCJhbmltYXRlQXNzaXN0XCIpfX0pO2Zvcih2YXIgeCBpbiBsKWwuaGFzT3duUHJvcGVydHkoeCkmJm8uaXNGdW5jdGlvbihsW3hdKSYmKHg9eFswXS50b0xvd2VyQ2FzZSgpK3guc3Vic3RyKDEpLHIucHJvdG90eXBlW3hdPWkoeCkpO3IucmVnaXN0R2VvbT1mdW5jdGlvbih0KXt0PXRbMF0udG9Mb3dlckNhc2UoKSt0LnN1YnN0cigxKSxyLnByb3RvdHlwZVt0XT1pKHQpfSx0LmV4cG9ydHM9cn0sZnVuY3Rpb24odCxlKXtcInVzZSBzdHJpY3RcIjt2YXIgbj17Z2V0U3R5bGU6ZnVuY3Rpb24odCxlKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZT93aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0LG51bGwpW2VdOnQuY3VycmVudFN0eWxlW2VdfSxnZXRXaWR0aDpmdW5jdGlvbih0KXt2YXIgZT1uLmdldFN0eWxlKHQsXCJ3aWR0aFwiKTtyZXR1cm5cImF1dG9cIj09PWUmJihlPXQub2Zmc2V0V2lkdGgpLHBhcnNlRmxvYXQoZSl9LGdldEhlaWdodDpmdW5jdGlvbih0KXt2YXIgZT1uLmdldFN0eWxlKHQsXCJoZWlnaHRcIik7cmV0dXJuXCJhdXRvXCI9PT1lJiYoZT10Lm9mZnNldEhlaWdodCkscGFyc2VGbG9hdChlKX19O3QuZXhwb3J0cz1ufSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfXZhciBpPW4oMSksYT1uKDMyKSxzPW4oMzMpO2kuZXh0ZW5kKHIsYSksaS5taXhpbihyLFtzXSksdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3Iuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsdCl9dmFyIGk9bigxKSxhPW4oMTMpO3IuQVRUUlM9e2NvcmVUeXBlOlwiTGluZVwifSxpLmV4dGVuZChyLGEpLHQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXtyLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpfXZhciBpPW4oMSksYT1uKDEzKTtpLmV4dGVuZChyLGEpLHIuQVRUUlM9e2NvcmVUeXBlOlwiUG9pbnRcIn0sdC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3ZhciBlPXQueCxuPXQueSxyPXQueTAsYT10LnNpemUscz1yLG89bjtpLmlzQXJyYXkobikmJihvPW5bMV0scz1uWzBdKTt2YXIgYyx1O2kuaXNBcnJheShlKT8oYz1lWzBdLHU9ZVsxXSk6KGM9ZS1hLzIsdT1lK2EvMik7dmFyIGw9W107cmV0dXJuIGwucHVzaCh7eDpjLHk6c30se3g6Yyx5Om99LHt4OnUseTpvfSx7eDp1LHk6c30pLGx9dmFyIGk9bigxKSxhPW4oMTQpLHM9big3KSxvPWEucmVnaXN0R2VvbShcImludGVydmFsXCIse2RlZmF1bHRTaGFwZVR5cGU6XCJyZWN0XCJ9KTthLnJlZ2lzdFNoYXBlKFwiaW50ZXJ2YWxcIixcInJlY3RcIix7Z2V0U2hhcGVQb2ludHM6ZnVuY3Rpb24odCl7cmV0dXJuIHIodCl9LGRyYXdTaGFwZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMucGFyc2VQb2ludHModC5wb2ludHMpLHI9aS5taXgoe2ZpbGxTdHlsZTp0LmNvbG9yLHo6ITB9LHQuc3R5bGUpO2lmKHQuaXNJbkNpcmNsZSl7dmFyIGE9bi5zbGljZSgwKTt0aGlzLl9jb29yZC5pc1RyYW5zcG9zZWQmJihhPVtuWzBdLG5bM10sblsyXSxuWzFdXSkscy5kcmF3RmFuKGEsdC5jZW50ZXIsZSxyKX1lbHNlIHMuZHJhd1JlY3QobixlLHIpfX0pLHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0KXt2YXIgZT1pLm1peCh7c3Ryb2tlU3R5bGU6dC5jb2xvcixsaW5lV2lkdGg6dC5zaXplfHxvLHo6dC5pc0luQ2lyY2xlfSx0LnN0eWxlKTtyZXR1cm4gZX12YXIgaT1uKDEpLGE9bigxNCkscz1uKDcpLG89NCxjPW4oMzYpLHU9bigzKSxsPWEucmVnaXN0R2VvbShcImxpbmVcIix7ZGVmYXVsdFNoYXBlVHlwZTpcImxpbmVcIn0pO2EucmVnaXN0U2hhcGUoXCJsaW5lXCIsXCJsaW5lXCIse2dldFNoYXBlUG9pbnRzOmZ1bmN0aW9uKHQpe3JldHVybiBjLnNwbGl0UG9pbnRzKHQpfSxkcmF3U2hhcGU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLnBhcnNlUG9pbnRzKHQucG9pbnRzKSxpPXIodCk7cy5kcmF3TGluZXMobixlLGkpfX0pLGEucmVnaXN0U2hhcGUoXCJsaW5lXCIsXCJzbW9vdGhcIix7ZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5wYXJzZVBvaW50cyh0LnBvaW50cyksaT1yKHQpO3MuZHJhd1Ntb290aChuLGUsaSl9fSksYS5yZWdpc3RTaGFwZShcImxpbmVcIixcImRhc2hcIix7ZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5wYXJzZVBvaW50cyh0LnBvaW50cyksaT1yKHQpO2kubGluZURhc2g9dS5saW5lRGFzaCxzLmRyYXdMaW5lcyhuLGUsaSl9fSksdC5leHBvcnRzPWx9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKHQpe3JldHVybntzaXplOnQuc2l6ZXx8byxzdHlsZTppLm1peCh7bGluZVdpZHRoOjAsc3Ryb2tlU3R5bGU6dC5jb2xvcixmaWxsU3R5bGU6dC5jb2xvcn0sdC5zdHlsZSl9fXZhciBpPW4oMSksYT1uKDE0KSxzPW4oNyksbz01LGM9bigzNiksdT1hLnJlZ2lzdEdlb20oXCJwb2ludFwiLHtkZWZhdWx0U2hhcGVUeXBlOlwiY2lyY2xlXCJ9KTthLnJlZ2lzdFNoYXBlKFwicG9pbnRcIixcImNpcmNsZVwiLHtnZXRTaGFwZVBvaW50czpmdW5jdGlvbih0KXtyZXR1cm4gYy5zcGxpdFBvaW50cyh0KX0sZHJhd1NoYXBlOmZ1bmN0aW9uKHQsZSl7aWYoMCE9PXQuc2l6ZSl7dmFyIG49cih0KSxhPXRoaXMucGFyc2VQb2ludHModC5wb2ludHMpLG89bi5zaXplLGM9bi5zdHlsZTtpLmVhY2goYSxmdW5jdGlvbih0KXtzLmRyYXdDaXJjbGUodCxvLGUsYyl9KX19fSksYS5yZWdpc3RTaGFwZShcInBvaW50XCIsXCJyZWN0XCIse2RyYXdTaGFwZTpmdW5jdGlvbih0LGUpe2lmKDAhPT10LnNpemUpe3ZhciBuPXIodCksYT10aGlzLnBhcnNlUG9pbnRzKHQucG9pbnRzKSxvPW4uc2l6ZSxjPW4uc3R5bGU7aS5lYWNoKGEsZnVuY3Rpb24odCl7cy5kcmF3U2hhcGUoZSxjLGZ1bmN0aW9uKGUpe2UucmVjdCh0Lngtbyx0LnktbywyKm8sMipvKX0pfSl9fX0pLHQuZXhwb3J0cz11fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oODMpLGE9bigzKSxzPW4oMTYpLG89bigzNSksYz1mdW5jdGlvbih0KXtyLm1peCh0aGlzLHQpLHRoaXMuYXR0cnM9W119O3IuYXVnbWVudChjLHt0eXBlOm51bGwsYXR0cnM6bnVsbCxjaGFydDpudWxsLHN0eWxlQ2ZnOm51bGwsX2NyZWF0ZVNjYWxlczpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49W107cmV0dXJuIHIuZWFjaCh0LGZ1bmN0aW9uKHQpe3ZhciByPWUuX2NyZWF0ZVNjYWxlKHQpO24ucHVzaChyKX0pLG59LGNyZWF0ZUdlb206ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC50eXBlLG49c1tyLnVjZmlyc3QoZSldLGk9bmV3IG4oe3R5cGU6ZSxhdHRyczp0LmF0dHJzLHN0eWxlQ2ZnOnQuc3R5bGVDZmcsY29vcmQ6dC5jb29yZCxjb250YWluZXI6dC5jaGFydC5nZXQoXCJjYW52YXNcIil9KTtyZXR1cm4gaX0sX2NyZWF0ZVNjYWxlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY2hhcnQ7cmV0dXJuIGUuY3JlYXRlU2NhbGUodCl9LF9wYXJzZURpbXM6ZnVuY3Rpb24odCl7cmV0dXJuIHIuaXNTdHJpbmcodCkmJnQuaW5kZXhPZihcIipcIikhPT0tMT90PXQucmVwbGFjZSgvXFxzKy9nLFwiXCIpLnNwbGl0KFwiKlwiKTooci5pc051bWJlcih0KXx8ci5pc1N0cmluZyh0KSkmJih0PVt0XSksdH0sX2FkZEF0dHI6ZnVuY3Rpb24odCxlKXt0PXIudWNmaXJzdCh0KTt2YXIgbj10aGlzLmF0dHJzLGE9bmV3IGlbdF0oZSk7bi5wdXNoKGEpfSxfY3JlYXRlQXR0cjpmdW5jdGlvbih0LGUsbil7ZT10aGlzLl9wYXJzZURpbXMoZSk7dmFyIGkscz10aGlzLl9jcmVhdGVTY2FsZXMoZSksYz1bXSx1PXIudWNmaXJzdCh0aGlzLnR5cGUpLGw9e2RpbXM6ZSxzY2FsZXM6c307XCJzaGFwZVwiPT09dD8oaT1vW3VdLHIuZWFjaChpLGZ1bmN0aW9uKHQsZSl7ci5pc09iamVjdCh0KSYmYy5wdXNoKGUpfSkpOmM9YVt0K1wic1wiXSxyLmlzRnVuY3Rpb24obik/bC5jYWxsYmFjaz1uOnIuaXNBcnJheShuKSYmKGM9biksXCJwb3NpdGlvblwiPT09dCYmKGwuY29vcmQ9dGhpcy5jb29yZCksXCJzaXplXCI9PT10PyhsLm1pbj1jLm1pbixsLm1heD1jLm1heCk6bC5hcnI9Yyx0aGlzLl9hZGRBdHRyKHQsbCl9LHBvc2l0aW9uOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX2NyZWF0ZUF0dHIoXCJwb3NpdGlvblwiLHQsZSksdGhpc30sY29sb3I6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fY3JlYXRlQXR0cihcImNvbG9yXCIsdCxlKSx0aGlzfSxzaXplOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX2NyZWF0ZUF0dHIoXCJzaXplXCIsdCxlKSx0aGlzfSxzaGFwZTpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl9jcmVhdGVBdHRyKFwic2hhcGVcIix0LGUpLHRoaXN9LHN0eWxlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnN0eWxlQ2ZnPXQsdGhpc319KSx0LmV4cG9ydHM9Y30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7cmV0dXJuIG5ldyBvKHQueCx0LnkpfWZ1bmN0aW9uIGkodCxlKXtyZXR1cm4gdC54Kj1lLHQueSo9ZSx0fWZ1bmN0aW9uIGEodCxlLG4sYSl7dmFyIHMsYyx1LGwsZixoLGcscCx2PVtdLGQ9ISFhO2lmKGQpe2Zvcih1PW5ldyBvKDEvMCwxLzApLGw9bmV3IG8oKC0oMS8wKSksKC0oMS8wKSkpLHA9MCxnPXQubGVuZ3RoO3A8ZztwKyspZj1yKHRbcF0pLHUubWluKGYpLGwubWF4KGYpO3UubWluKHIoYVswXSkpLGwubWF4KHIoYVsxXSkpfWZvcihwPTAsaD10Lmxlbmd0aDtwPGg7cCsrKXtpZihmPXIodFtwXSksbilzPXIodFtwP3AtMTpoLTFdKSxjPXIodFsocCsxKSVoXSk7ZWxzZXtpZigwPT09cHx8cD09PWgtMSl7di5wdXNoKFtmLngsZi55XSk7Y29udGludWV9cz1yKHRbcC0xXSksYz1yKHRbcCsxXSl9dmFyIG09by5zdWIoYyxzKTtpKG0sZSk7dmFyIHg9Zi5kaXN0YW5jZVRvKHMpLHk9Zi5kaXN0YW5jZVRvKGMpLFM9eCt5OzAhPT1TJiYoeC89Uyx5Lz1TKTt2YXIgdz1pKG0uY2xvbmUoKSwteCksVD1pKG0uY2xvbmUoKSx5KSxBPW8uYWRkKGYsdyksXz1vLmFkZChmLFQpO2QmJihBLm1heCh1KSxBLm1pbihsKSxfLm1heCh1KSxfLm1pbihsKSksdi5wdXNoKFtBLngsQS55XSksdi5wdXNoKFtfLngsXy55XSl9cmV0dXJuIG4mJnYucHVzaCh2LnNoaWZ0KCkpLHZ9ZnVuY3Rpb24gcyh0LGUsbil7Zm9yKHZhciByLGkscyxvPSEhZSxjPWEodCwuNCxvLG4pLHU9dC5sZW5ndGgsbD1bXSxmPTA7Zjx1LTE7ZisrKXI9Y1syKmZdLGk9Y1syKmYrMV0scz10W2YrMV0sbC5wdXNoKFtcIkNcIixyWzBdLHJbMV0saVswXSxpWzFdLHMueCxzLnldKTtyZXR1cm4gbyYmKHI9Y1t1XSxpPWNbdSsxXSxzPXRbMF0sbC5wdXNoKFtcIkNcIixyWzBdLHJbMV0saVswXSxpWzFdLHMueCxzLnldKSksbH12YXIgbz1uKDgpO3QuZXhwb3J0cz17c21vb3RoOnN9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxKSxpPW4oMjQpLGE9bigzKSxzPW4oNSksbz17TElORUFSOlwibGluZWFyXCIsQ0FUOlwiY2F0XCIsVElNRV9DQVQ6XCJ0aW1lQ2F0XCJ9LGM9ZnVuY3Rpb24odCl7ci5taXgodGhpcyx0KSx0aGlzLmRlZnM9dGhpcy5kZWZzfHx7fX07ci5hdWdtZW50KGMse2RlZnM6bnVsbCxfZ2V0RGVmczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZGVmcztyZXR1cm4gci5taXgoITAse30sYS5zY2FsZXMsdCl9LF9nZXRSYW5nZTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ9PT1vLkNBVHx8dD09PW8uVElNRV9DQVQ/dGhpcy5fZ2V0Q2F0UmFuZ2UoZSxuKTpbMCwxXX0sX2dldENhdFJhbmdlOmZ1bmN0aW9uKHQsZSl7dmFyIG4scj10Lmxlbmd0aDtyZXR1cm4gbj0xPT09cj9bLjUsMV06ZT9bMCwxLTEvcl06WzEvKDIqciksMS0xLygyKnIpXX0sX2dldFNjYWxlQ2ZnOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj17ZGltOmV9O2lmKG4mJm4ubmFtZXMubGVuZ3RoPjAmJm4uY29udGFpbnMoZSkpe3ZhciBpPXMudmFsdWVzKG4sZSk7aS5sZW5ndGg+MCYmdCE9PW8uQ0FUJiZ0IT09by5USU1FX0NBVCYmKHIubWluPU1hdGgubWluLmFwcGx5KG51bGwsaSksci5tYXg9TWF0aC5tYXguYXBwbHkobnVsbCxpKSksci52YWx1ZXM9aX1yZXR1cm4gcn0sX2dldERlZmF1bHRUeXBlOmZ1bmN0aW9uKHQsZSl7dmFyIG49by5MSU5FQVIsaT1lLnJvd09iamVjdCgwKSxhPWlbdF07cmV0dXJuIHIuaXNBcnJheShhKSYmKGE9YVswXSksci5pc1N0cmluZyhhKSYmKG49by5DQVQpLG59LF9jcmVhdGVEZWZhdWx0U2NhbGU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLl9nZXREZWZhdWx0VHlwZSh0LGUpLHI9dGhpcy5fZ2V0U2NhbGVDZmcobix0LGUpO3JldHVybiBpW25dKHIpfSxjcmVhdGVTY2FsZTpmdW5jdGlvbih0LGUsbil7dmFyIGEscz10aGlzLG89cy5fZ2V0RGVmcygpO2lmKHIuaXNOdW1iZXIodCkpYT1pLkkoe3ZhbHVlOnQsZGltOnQudG9TdHJpbmcoKX0pO2Vsc2UgaWYob1t0XXx8ci5pbmRleE9mKGUuY29sTmFtZXMoKSx0KSE9PS0xKWlmKG9bdF0pe3ZhciBjPW9bdF0sdT1jLnR5cGV8fHMuX2dldERlZmF1bHRUeXBlKHQsZSksbD1zLl9nZXRTY2FsZUNmZyh1LHQsZSk7ci5pc051bGwoYy5taW4pfHwobC5taW49Yy5taW4pLHIuaXNOdWxsKGMubWF4KXx8KGwubWF4PWMubWF4KSxyLm1peChsLGMpLGwudmFsdWVzfHwobC52YWx1ZXM9W10pLGE9aVt1XShsKX1lbHNlIGE9cy5fY3JlYXRlRGVmYXVsdFNjYWxlKHQsZSk7ZWxzZSBhPWkuSSh7dmFsdWU6dCxkaW06dH0pO2lmKGEmJlwiSVwiIT09YS50eXBlJiYoIW9bdF18fCFvW3RdLnJhbmdlKSYmYS52YWx1ZXMpe3ZhciBmPXMuX2dldFJhbmdlKGEudHlwZSxhLnZhbHVlcyxuKTthLnJhbmdlPWZ9cmV0dXJuIGF9fSksdC5leHBvcnRzPWN9XSl9KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vZzItbW9iaWxlL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvKipcbiAqIENyZWF0ZWQgYnkgZ29kc29uZyBvbiAxNi8xMi8xMi5cbiAqL1xuXG4vL3ZhciBDYW52YXM9cmVxdWlyZSgnLi4vLi4vLi4vanMvY29yZS9nY2FudmFzJyk7XG52YXIgQ2FudmFzPXJlcXVpcmUoJ3dlZXgtZ2NhbnZhcycpO1xuXG4vL+Wtl+S9k+a4suafk+a1i+ivlVxuZXhwb3J0cy5jYXNlMCA9IGZ1bmN0aW9uIChHTSxjb250ZXh0KSB7XG5cblxudmFyIG1hcmdpbiA9IDMwOyAgICBcbmNvbnRleHQgPSBDYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcblxuXG4vKlxuY29udGV4dC5mb250PVwiMzBweFwiO1xuY29udGV4dC5maWxsVGV4dChcIjEgYWJjIOS9oOWlvSAxMjMgfiFAIyQlXiYqKClfK1wiLDIwLDUwKTtcblxuY29udGV4dC5mb250PVwiMzBweCBBcmlhbFwiO1xuY29udGV4dC5maWxsVGV4dChcIjIgYWJjIOS9oOWlvSAxMjMgfiFAIyQlXiYqKClfK1wiLDIwLDUwICsgbWFyZ2luKTtcblxuY29udGV4dC5mb250PVwiMzBweCBzYW5zLXNlcmlmXCI7XG5jb250ZXh0LmZpbGxUZXh0KFwiMyBhYmMg5L2g5aW9IDEyMyB+IUAjJCVeJiooKV8rXCIsMjAsNTAgKyBtYXJnaW4qMik7XG4qL1xuXG4vL2NvbnRleHQuZm9udD1cIjMwcHggTm90b1NhbnNTQ1wiO1xuLy9jb250ZXh0LmZpbGxUZXh0KFwiNCBhYmMg5L2g5aW9IDEyMyB+IUAjJCVeJiooKV8rXCIsMjAsMjUwKTtcbmNvbnRleHQuZm9udD1cIjMwcHggc2Fucy1zZXJpZlwiO1xuY29udGV4dC5maWxsVGV4dChcImZvbnQgdGVzdFwiLDIwLDUwICsgbWFyZ2luKjMpO1xuXG5jb250ZXh0LmZvbnQ9XCIzMHB4IHNhbnMtc2VyaWZcIjtcbmNvbnRleHQuZmlsbFRleHQoXCI1LjEgYWJjZGVmZ2hpamtsbW4gQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpcIiwyMCw1MCArIG1hcmdpbio0KTtcblxuY29udGV4dC5mb250PVwiMzBweCBzZXJpZlwiO1xuY29udGV4dC5maWxsVGV4dChcIjUuMiBhYmNkZWZnaGlqa2xtbiBBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWlwiLDIwLDUwICsgbWFyZ2luKjUpO1xuXG5jb250ZXh0LmZvbnQ9XCIzMHB4IFNpbVN1blwiO1xuY29udGV4dC5maWxsVGV4dChcIuS9oOWlvSDpmL/ph4zlt7Tlt7Qg5reY5a6dIOWkqeeMqyDpmL/ph4zkupEg6I+c6bifXCIsMjAsNTAgKyBtYXJnaW4qNik7XG5cbmNvbnRleHQuZm9udD1cIjMwcHggQXJpYWxcIjtcbmNvbnRleHQuZmlsbFRleHQoXCLkvaDlpb0g6Zi/6YeM5be05be0IOa3mOWunSDlpKnnjKsg6Zi/6YeM5LqRIOiPnOm4n1wiLDIwLDUwICsgbWFyZ2luKjcpO1xuXG5jb250ZXh0LmZvbnQ9XCIzMHB4IHNlcmlmXCI7XG5jb250ZXh0LmZpbGxUZXh0KFwiNS4zIDEyMzQ1Njc4OTBcIiwyMCw1MCArIG1hcmdpbio4KTtcblxuY29udGV4dC5mb250PVwiMzBweCBzYW5zLXNlcmlmXCI7XG5jb250ZXh0LmZpbGxUZXh0KFwiNS40IDEyMzQ1Njc4OTBcIiwyMCw1MCArIG1hcmdpbio5KTtcblxuY29udGV4dC5mb250PVwiMzBweCBzYW5zLXNlcmlmXCI7XG5jb250ZXh0LmZpbGxUZXh0KFwiNS41IH4hQCMkJV4mKigpXyt7fXxbXVxcOlxcXCI7Jyc8Pj8sLi9cIiwyMCwgNTAgKyBtYXJnaW4qMTApO1xuXG5jb250ZXh0LmZvbnQ9XCIzMHB4IHNlcmlmXCI7XG5jb250ZXh0LmZpbGxUZXh0KFwiNS42IH4hQCMkJV4mKigpXyt7fXxbXVxcOlxcXCI7Jyc8Pj8sLi9cIiwyMCwgNTAgKyBtYXJnaW4qMTEpO1xuXG5jb250ZXh0LnJlbmRlcigpO1xuXG5cbn07XG5cbi8v54K55Zu+XG5leHBvcnRzLmNhc2UxID0gZnVuY3Rpb24gKEdNKSB7XG4gICAgR00uR2xvYmFsLnBpeGVsUmF0aW8gPSAxO1xuICAgIHZhciBVdGlsID0gR00uVXRpbDtcbiAgICB2YXIgZGF0YSA9IFtcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOCAwMDowMDowMCcsIFwidGVtXCI6IDEwfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOCAwMDoxMDowMCcsIFwidGVtXCI6IDIyfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOCAwMDozMDowMCcsIFwidGVtXCI6IDIwfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOSAwMDozNTowMCcsIFwidGVtXCI6IDI2fSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOSAwMTowMDowMCcsIFwidGVtXCI6IDIwfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOSAwMToyMDowMCcsIFwidGVtXCI6IDI2fSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0xMCAwMTo0MDowMCcsIFwidGVtXCI6IDI4fSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0xMCAwMjowMDowMCcsIFwidGVtXCI6IDIwfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0xMCAwMjoyMDowMCcsIFwidGVtXCI6IDI4fVxuICAgIF07XG4gICAgdmFyIGNoYXJ0ID0gbmV3IEdNLkNoYXJ0KHtcbiAgICAgICAgaWQ6ICdjMSdcbiAgICB9KTtcbiAgICB2YXIgZGVmcyA9IHtcbiAgICAgICAgdGltZToge1xuICAgICAgICAgICAgdHlwZTogJ3RpbWVDYXQnLFxuICAgICAgICAgICAgbWFzazogJ21tL2RkJyxcbiAgICAgICAgICAgIHRpY2tDb3VudDogM1xuICAgICAgICB9LFxuICAgICAgICB0ZW06IHtcbiAgICAgICAgICAgIHRpY2tDb3VudDogNSxcbiAgICAgICAgICAgIG1pbjogMFxuICAgICAgICB9XG4gICAgfTtcbiAgICAvL+mFjee9ruWIu+W6puaWh+Wtl+Wkp+Wwj++8jOS+m1BD56uv5pi+56S655SoKOenu+WKqOerr+WPr+S7peS9v+eUqOm7mOiupOWAvDIwcHgpXG4gICAgY2hhcnQuYXhpcygndGVtJywge1xuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgZm9udFNpemU6IDE0LFxuICAgICAgICAgICAgZm9udEZhbWlseTogXCJzYW5zLXNlcmlmXCJcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNoYXJ0LmF4aXMoJ3RpbWUnLCB7XG4gICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgICBmb250U2l6ZTogMTQsXG4gICAgICAgICAgICBmb250RmFtaWx5OiBcInNhbnMtc2VyaWZcIlxuICAgICAgICB9XG4gICAgfSk7XG4gICAgY2hhcnQuc291cmNlKGRhdGEsIGRlZnMpO1xuICAgIGNoYXJ0LnBvaW50KCkucG9zaXRpb24oJ3RpbWUqdGVtJyk7XG4gICAgY2hhcnQucmVuZGVyKCk7XG59O1xuXG4vL+aKmOe6v+WbvlxuZXhwb3J0cy5jYXNlMiA9IGZ1bmN0aW9uIChHTSkge1xuXG4gICAgR00uR2xvYmFsLnBpeGVsUmF0aW8gPSAxO1xuICAgIHZhciBVdGlsID0gR00uVXRpbDtcbiAgICB2YXIgZGF0YSA9IFtcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOCAwMDowMDowMCcsIFwidGVtXCI6IDEwfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOCAwMDoxMDowMCcsIFwidGVtXCI6IDIyfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOCAwMDozMDowMCcsIFwidGVtXCI6IDIwfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOSAwMDozNTowMCcsIFwidGVtXCI6IDI2fSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOSAwMTowMDowMCcsIFwidGVtXCI6IDIwfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOSAwMToyMDowMCcsIFwidGVtXCI6IDI2fSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0xMCAwMTo0MDowMCcsIFwidGVtXCI6IDI4fSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0xMCAwMjowMDowMCcsIFwidGVtXCI6IDIwfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0xMCAwMjoyMDowMCcsIFwidGVtXCI6IDI4fVxuICAgIF07XG4gICAgdmFyIGNoYXJ0ID0gbmV3IEdNLkNoYXJ0KHtcbiAgICAgICAgaWQ6ICdjMSdcbiAgICB9KTtcbiAgICB2YXIgZGVmcyA9IHtcbiAgICAgICAgdGltZToge1xuICAgICAgICAgICAgdHlwZTogJ3RpbWVDYXQnLFxuICAgICAgICAgICAgbWFzazogJ21tL2RkJyxcbiAgICAgICAgICAgIHRpY2tDb3VudDogMyxcbiAgICAgICAgICAgIHJhbmdlOiBbMCwgMV1cbiAgICAgICAgfSxcbiAgICAgICAgdGVtOiB7XG4gICAgICAgICAgICB0aWNrQ291bnQ6IDUsXG4gICAgICAgICAgICBtaW46IDBcbiAgICAgICAgfVxuICAgIH07XG4gICAgLy/phY3nva7liLvluqbmloflrZflpKflsI/vvIzkvptQQ+err+aYvuekuueUqCjnp7vliqjnq6/lj6/ku6Xkvb/nlKjpu5jorqTlgLwyMHB4KVxuICAgIGNoYXJ0LmF4aXMoJ3RlbScsIHtcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwic2Fucy1zZXJpZlwiXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBjaGFydC5heGlzKCd0aW1lJywge1xuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgZm9udFNpemU6IDE0LFxuICAgICAgICAgICAgZm9udEZhbWlseTogXCJzYW5zLXNlcmlmXCJcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNoYXJ0LnNvdXJjZShkYXRhLCBkZWZzKTtcbiAgICBjaGFydC5saW5lKCkucG9zaXRpb24oJ3RpbWUqdGVtJyk7XG4gICAgY2hhcnQucmVuZGVyKCk7XG5cbn07XG5cbi8v5bmz5ruR5oqY57q/5Zu+XG5leHBvcnRzLmNhc2UzID0gZnVuY3Rpb24gKEdNKSB7XG5cbiAgICBHTS5HbG9iYWwucGl4ZWxSYXRpbyA9IDE7XG4gICAgdmFyIFV0aWwgPSBHTS5VdGlsO1xuICAgIHZhciBkYXRhID0gW1xuICAgICAgICB7XCJ0aW1lXCI6ICflkajkuIAnLCBcInRlbVwiOiAxMCwgXCJjaXR5XCI6IFwiYmVpamluZ1wifSxcbiAgICAgICAge1widGltZVwiOiAn5ZGo5LqMJywgXCJ0ZW1cIjogMjIsIFwiY2l0eVwiOiBcImJlaWppbmdcIn0sXG4gICAgICAgIHtcInRpbWVcIjogJ+WRqOS4iScsIFwidGVtXCI6IDIwLCBcImNpdHlcIjogXCJiZWlqaW5nXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6ICflkajlm5snLCBcInRlbVwiOiAyNiwgXCJjaXR5XCI6IFwiYmVpamluZ1wifSxcbiAgICAgICAge1widGltZVwiOiAn5ZGo5LqUJywgXCJ0ZW1cIjogMjAsIFwiY2l0eVwiOiBcImJlaWppbmdcIn0sXG4gICAgICAgIHtcInRpbWVcIjogJ+WRqOWFrScsIFwidGVtXCI6IDI2LCBcImNpdHlcIjogXCJiZWlqaW5nXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6ICflkajml6UnLCBcInRlbVwiOiAyOCwgXCJjaXR5XCI6IFwiYmVpamluZ1wifSxcbiAgICAgICAge1widGltZVwiOiAn5ZGo5LiAJywgXCJ0ZW1cIjogNSwgXCJjaXR5XCI6IFwibmV3WW9ya1wifSxcbiAgICAgICAge1widGltZVwiOiAn5ZGo5LqMJywgXCJ0ZW1cIjogMTIsIFwiY2l0eVwiOiBcIm5ld1lvcmtcIn0sXG4gICAgICAgIHtcInRpbWVcIjogJ+WRqOS4iScsIFwidGVtXCI6IDI2LCBcImNpdHlcIjogXCJuZXdZb3JrXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6ICflkajlm5snLCBcInRlbVwiOiAyMCwgXCJjaXR5XCI6IFwibmV3WW9ya1wifSxcbiAgICAgICAge1widGltZVwiOiAn5ZGo5LqUJywgXCJ0ZW1cIjogMjgsIFwiY2l0eVwiOiBcIm5ld1lvcmtcIn0sXG4gICAgICAgIHtcInRpbWVcIjogJ+WRqOWFrScsIFwidGVtXCI6IDI2LCBcImNpdHlcIjogXCJuZXdZb3JrXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6ICflkajml6UnLCBcInRlbVwiOiAyMCwgXCJjaXR5XCI6IFwibmV3WW9ya1wifVxuICAgIF07XG4gICAgdmFyIGNoYXJ0ID0gbmV3IEdNLkNoYXJ0KHtcbiAgICAgICAgaWQ6ICdjMSdcbiAgICB9KTtcbiAgICB2YXIgZGVmcyA9IHtcbiAgICAgICAgdGltZToge1xuICAgICAgICAgICAgdGlja0NvdW50OiA3LFxuICAgICAgICAgICAgcmFuZ2U6IFswLCAxXVxuICAgICAgICB9LFxuICAgICAgICB0ZW06IHtcbiAgICAgICAgICAgIHRpY2tDb3VudDogNSxcbiAgICAgICAgICAgIG1pbjogMFxuICAgICAgICB9XG4gICAgfTtcbiAgICAvL+mFjee9rnRpbWXliLvluqbmloflrZfmoLflvI9cbiAgICB2YXIgbGFiZWwgPSB7XG4gICAgICAgIGZpbGw6ICcjOTc5Nzk3JyxcbiAgICAgICAgZm9udDogJzE0cHggU2ltU3VuJyxcbiAgICAgICAgb2Zmc2V0OiA2XG4gICAgfTtcblxuXG5cbiAgICBjaGFydC5heGlzKCd0aW1lJywge1xuICAgICAgICBsYWJlbDogZnVuY3Rpb24gKHRleHQsIGluZGV4LCB0b3RhbCkge1xuXG4gICAgICAgICAgICB2YXIgY2ZnID0gVXRpbC5taXgoe30sIGxhYmVsKTtcbiAgICAgICAgICAgIC8vIOesrOS4gOS4queCueW3puWvuem9kO+8jOacgOWQjuS4gOS4queCueWPs+Wvuem9kO+8jOWFtuS9meWxheS4re+8jOWPquacieS4gOS4queCueaXtuW3puWvuem9kFxuICAgICAgICAgICAgaWYgKGluZGV4ID09PSAwKSB7XG4gICAgICAgICAgICAgICAgY2ZnLnRleHRBbGlnbiA9ICdzdGFydCc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5kZXggPiAwICYmIGluZGV4ID09PSB0b3RhbCAtIDEpIHtcbiAgICAgICAgICAgICAgICBjZmcudGV4dEFsaWduID0gJ2VuZCc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY2ZnO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgLy/phY3nva7liLvluqbmloflrZflpKflsI/vvIzkvptQQ+err+aYvuekuueUqCjnp7vliqjnq6/lj6/ku6Xkvb/nlKjpu5jorqTlgLwyMHB4KVxuICAgIGNoYXJ0LmF4aXMoJ3RlbScsIHtcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6ICdzYW5zLXNlcmlmJ1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgY2hhcnQuc291cmNlKGRhdGEsIGRlZnMpO1xuICAgIGNoYXJ0LmxpbmUoKS5wb3NpdGlvbigndGltZSp0ZW0nKS5jb2xvcignY2l0eScpLnNoYXBlKCdzbW9vdGgnKTtcbiAgICBjaGFydC5yZW5kZXIoKTtcblxufTtcblxuLy/luKbngrnmipjnur/lm75cbmV4cG9ydHMuY2FzZTQgPSBmdW5jdGlvbiAoR00pIHtcblxuICAgIC8v5Y+M57K+5bqmXG4gICAgR00uR2xvYmFsLnBpeGVsUmF0aW8gPSAxO1xuICAgIHZhciBVdGlsID0gR00uVXRpbDtcbiAgICB2YXIgZGF0YSA9IFtcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOCAwMDowMDowMCcsIFwidGVtXCI6IDEwfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOCAwMDoxMDowMCcsIFwidGVtXCI6IDIyfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOCAwMDozMDowMCcsIFwidGVtXCI6IDIwfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOSAwMDozNTowMCcsIFwidGVtXCI6IDI2fSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOSAwMTowMDowMCcsIFwidGVtXCI6IDIwfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOSAwMToyMDowMCcsIFwidGVtXCI6IDI2fSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0xMCAwMTo0MDowMCcsIFwidGVtXCI6IDI4fSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0xMCAwMjowMDowMCcsIFwidGVtXCI6IDIwfSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0xMCAwMjoyMDowMCcsIFwidGVtXCI6IDI4fVxuICAgIF07XG4gICAgdmFyIGNoYXJ0ID0gbmV3IEdNLkNoYXJ0KHtcbiAgICAgICAgaWQ6ICdjMSdcbiAgICB9KTtcbiAgICB2YXIgZGVmcyA9IHtcbiAgICAgICAgdGltZToge1xuICAgICAgICAgICAgdHlwZTogJ3RpbWVDYXQnLFxuICAgICAgICAgICAgbWFzazogJ3l5eXktbW0tZGQnLFxuICAgICAgICAgICAgdGlja0NvdW50OiAyLFxuICAgICAgICAgICAgcmFuZ2U6IFswLCAxXVxuICAgICAgICB9LFxuICAgICAgICB0ZW06IHtcbiAgICAgICAgICAgIHRpY2tDb3VudDogNSxcbiAgICAgICAgICAgIG1pbjogMFxuICAgICAgICB9XG4gICAgfTtcbiAgICAvL+mFjee9rnRpbWXliLvluqbmloflrZfmoLflvI9cbiAgICB2YXIgbGFiZWwgPSB7XG4gICAgICAgIGZpbGw6ICcjOTc5Nzk3JyxcbiAgICAgICAgZm9udDogJzE0cHggc2Fucy1zZXJpZicsXG4gICAgICAgIG9mZnNldDogNlxuICAgIH07XG4gICAgY2hhcnQuYXhpcygndGltZScsIHtcbiAgICAgICAgbGFiZWw6IGZ1bmN0aW9uICh0ZXh0LCBpbmRleCwgdG90YWwpIHtcbiAgICAgICAgICAgIHZhciBjZmcgPSBVdGlsLm1peCh7fSwgbGFiZWwpO1xuICAgICAgICAgICAgLy8g56ys5LiA5Liq54K55bem5a+56b2Q77yM5pyA5ZCO5LiA5Liq54K55Y+z5a+56b2Q77yM5YW25L2Z5bGF5Lit77yM5Y+q5pyJ5LiA5Liq54K55pe25bem5a+56b2QXG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgICAgICAgICAgICBjZmcudGV4dEFsaWduID0gJ3N0YXJ0JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmRleCA+IDAgJiYgaW5kZXggPT09IHRvdGFsIC0gMSkge1xuICAgICAgICAgICAgICAgIGNmZy50ZXh0QWxpZ24gPSAnZW5kJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjZmc7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAvL+mFjee9ruWIu+W6puaWh+Wtl+Wkp+Wwj++8jOS+m1BD56uv5pi+56S655SoKOenu+WKqOerr+WPr+S7peS9v+eUqOm7mOiupOWAvDIwcHgpXG4gICAgY2hhcnQuYXhpcygndGVtJywge1xuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgZm9udFNpemU6IDE0LFxuICAgICAgICAgICAgZm9udEZhbWlseTogXCJzYW5zLXNlcmlmXCJcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNoYXJ0LnNvdXJjZShkYXRhLCBkZWZzKTtcbiAgICBjaGFydC5saW5lKCkucG9zaXRpb24oJ3RpbWUqdGVtJykuc2hhcGUoJ3Ntb290aCcpO1xuICAgIGNoYXJ0LnBvaW50KCkucG9zaXRpb24oJ3RpbWUqdGVtJyk7XG4gICAgY2hhcnQucmVuZGVyKCk7XG59O1xuXG4vL+WMuuWfn+WbvlxuZXhwb3J0cy5jYXNlNSA9IGZ1bmN0aW9uIChHTSkge1xuXG4gICAgdmFyIFV0aWwgPSBHTS5VdGlsO1xuICAgIC8vIOWPjOeyvuW6plxuICAgIEdNLkdsb2JhbC5waXhlbFJhdGlvID0gMTtcbiAgICB2YXIgZGF0YSA9IFtcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOCAwMDowMDowMCcsIFwidGVtXCI6IDEwLCBcImNpdHlcIjogXCJiZWlqaW5nXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6ICcyMDE2LTA4LTA4IDAwOjEwOjAwJywgXCJ0ZW1cIjogMjIsIFwiY2l0eVwiOiBcImJlaWppbmdcIn0sXG4gICAgICAgIHtcInRpbWVcIjogJzIwMTYtMDgtMDggMDA6MzA6MDAnLCBcInRlbVwiOiAxNiwgXCJjaXR5XCI6IFwiYmVpamluZ1wifSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOSAwMDozNTowMCcsIFwidGVtXCI6IDI2LCBcImNpdHlcIjogXCJiZWlqaW5nXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6ICcyMDE2LTA4LTA5IDAxOjAwOjAwJywgXCJ0ZW1cIjogMTIsIFwiY2l0eVwiOiBcImJlaWppbmdcIn0sXG4gICAgICAgIHtcInRpbWVcIjogJzIwMTYtMDgtMDkgMDE6MjA6MDAnLCBcInRlbVwiOiAyNiwgXCJjaXR5XCI6IFwiYmVpamluZ1wifSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0xMCAwMTo0MDowMCcsIFwidGVtXCI6IDE4LCBcImNpdHlcIjogXCJiZWlqaW5nXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6ICcyMDE2LTA4LTEwIDAyOjAwOjAwJywgXCJ0ZW1cIjogMjYsIFwiY2l0eVwiOiBcImJlaWppbmdcIn0sXG4gICAgICAgIHtcInRpbWVcIjogJzIwMTYtMDgtMTAgMDI6MjA6MDAnLCBcInRlbVwiOiAxMiwgXCJjaXR5XCI6IFwiYmVpamluZ1wifSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOCAwMDowMDowMCcsIFwidGVtXCI6IDI4LCBcImNpdHlcIjogXCJuZXdZb3JrXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6ICcyMDE2LTA4LTA4IDAwOjEwOjAwJywgXCJ0ZW1cIjogMTYsIFwiY2l0eVwiOiBcIm5ld1lvcmtcIn0sXG4gICAgICAgIHtcInRpbWVcIjogJzIwMTYtMDgtMDggMDA6MzA6MDAnLCBcInRlbVwiOiAyNiwgXCJjaXR5XCI6IFwibmV3WW9ya1wifSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0wOSAwMDozNTowMCcsIFwidGVtXCI6IDEyLCBcImNpdHlcIjogXCJuZXdZb3JrXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6ICcyMDE2LTA4LTA5IDAxOjAwOjAwJywgXCJ0ZW1cIjogMjYsIFwiY2l0eVwiOiBcIm5ld1lvcmtcIn0sXG4gICAgICAgIHtcInRpbWVcIjogJzIwMTYtMDgtMDkgMDE6MjA6MDAnLCBcInRlbVwiOiAyMCwgXCJjaXR5XCI6IFwibmV3WW9ya1wifSxcbiAgICAgICAge1widGltZVwiOiAnMjAxNi0wOC0xMCAwMTo0MDowMCcsIFwidGVtXCI6IDI5LCBcImNpdHlcIjogXCJuZXdZb3JrXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6ICcyMDE2LTA4LTEwIDAyOjAwOjAwJywgXCJ0ZW1cIjogMTYsIFwiY2l0eVwiOiBcIm5ld1lvcmtcIn0sXG4gICAgICAgIHtcInRpbWVcIjogJzIwMTYtMDgtMTAgMDI6MjA6MDAnLCBcInRlbVwiOiAyMiwgXCJjaXR5XCI6IFwibmV3WW9ya1wifVxuICAgIF07XG4gICAgdmFyIGNoYXJ0ID0gbmV3IEdNLkNoYXJ0KHtcbiAgICAgICAgaWQ6ICdjMSdcbiAgICB9KTtcbiAgICBjaGFydC5zb3VyY2UoZGF0YSwge1xuICAgICAgICB0aW1lOiB7XG4gICAgICAgICAgICB0eXBlOiAndGltZUNhdCcsXG4gICAgICAgICAgICBtYXNrOiAneXl5eS1tbS1kZCcsXG4gICAgICAgICAgICB0aWNrQ291bnQ6IDMsXG4gICAgICAgICAgICByYW5nZTogWzAsIDFdXG4gICAgICAgIH0sXG4gICAgICAgIHRlbToge1xuICAgICAgICAgICAgdGlja0NvdW50OiA1LFxuICAgICAgICAgICAgbWluOiAwXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAvL+mFjee9ruWIu+W6puaWh+Wtl+Wkp+Wwj++8jOS+m1BD56uv5pi+56S655SoKOenu+WKqOerr+WPr+S7peS9v+eUqOm7mOiupOWAvDIwcHgpXG4gICAgY2hhcnQuYXhpcygndGVtJywge1xuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgZm9udFNpemU6IDE0LFxuICAgICAgICAgICAgZm9udEZhbWlseTogXCJzYW5zLXNlcmlmXCJcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIC8v6YWN572udGltZeWIu+W6puaWh+Wtl+agt+W8j1xuICAgIHZhciBsYWJlbCA9IHtcbiAgICAgICAgZmlsbDogJyM5Nzk3OTcnLFxuICAgICAgICBmb250OiAnMTRweCBzYW5zLXNlcmlmJyxcbiAgICAgICAgb2Zmc2V0OiA2XG4gICAgfTtcbiAgICBjaGFydC5heGlzKCd0aW1lJywge1xuICAgICAgICBsYWJlbDogZnVuY3Rpb24gKHRleHQsIGluZGV4LCB0b3RhbCkge1xuICAgICAgICAgICAgdmFyIGNmZyA9IFV0aWwubWl4KHt9LCBsYWJlbCk7XG4gICAgICAgICAgICAvLyDnrKzkuIDkuKrngrnlt6blr7npvZDvvIzmnIDlkI7kuIDkuKrngrnlj7Plr7npvZDvvIzlhbbkvZnlsYXkuK3vvIzlj6rmnInkuIDkuKrngrnml7blt6blr7npvZBcbiAgICAgICAgICAgIGlmIChpbmRleCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGNmZy50ZXh0QWxpZ24gPSAnc3RhcnQnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGluZGV4ID4gMCAmJiBpbmRleCA9PT0gdG90YWwgLSAxKSB7XG4gICAgICAgICAgICAgICAgY2ZnLnRleHRBbGlnbiA9ICdlbmQnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNmZztcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNoYXJ0LmFyZWEoKS5wb3NpdGlvbigndGltZSp0ZW0nKS5jb2xvcignY2l0eScpLnNoYXBlKCdzbW9vdGgnKS5zdHlsZSh7XG4gICAgICAgIG9wYWNpdHk6IDAuNlxuICAgIH0pO1xuICAgIGNoYXJ0LnJlbmRlcigpO1xufTtcblxuXG4vL+W4puS6i+S7tueahOmHjeWPoOWMuuWfn+WbvlxuZXhwb3J0cy5jYXNlNiA9IGZ1bmN0aW9uIChHTSkge1xuXG4gICAgR00uR2xvYmFsLnBpeGVsUmF0aW8gPSAxO1xuICAgIHZhciBkYXRhID0gW1xuICAgICAgICB7XCJtb250aFwiOiAxMiwgXCJ0ZW1cIjogNywgXCJjaXR5XCI6IFwidG9reW9cIn0sXG4gICAgICAgIHtcIm1vbnRoXCI6IDEsIFwidGVtXCI6IDYuOSwgXCJjaXR5XCI6IFwidG9reW9cIn0sXG4gICAgICAgIHtcIm1vbnRoXCI6IDIsIFwidGVtXCI6IDkuNSwgXCJjaXR5XCI6IFwidG9reW9cIn0sXG4gICAgICAgIHtcIm1vbnRoXCI6IDMsIFwidGVtXCI6IDE0LjUsIFwiY2l0eVwiOiBcInRva3lvXCJ9LFxuICAgICAgICB7XCJtb250aFwiOiA0LCBcInRlbVwiOiAxOC4yLCBcImNpdHlcIjogXCJ0b2t5b1wifSxcbiAgICAgICAge1wibW9udGhcIjogNSwgXCJ0ZW1cIjogMjEuNSwgXCJjaXR5XCI6IFwidG9reW9cIn0sXG4gICAgICAgIHtcIm1vbnRoXCI6IDYsIFwidGVtXCI6IDI1LjIsIFwiY2l0eVwiOiBcInRva3lvXCJ9LFxuICAgICAgICB7XCJtb250aFwiOiA3LCBcInRlbVwiOiAyNi41LCBcImNpdHlcIjogXCJ0b2t5b1wifSxcbiAgICAgICAge1wibW9udGhcIjogOCwgXCJ0ZW1cIjogMjMuMywgXCJjaXR5XCI6IFwidG9reW9cIn0sXG4gICAgICAgIHtcIm1vbnRoXCI6IDksIFwidGVtXCI6IDE4LjMsIFwiY2l0eVwiOiBcInRva3lvXCJ9LFxuICAgICAgICB7XCJtb250aFwiOiAxMCwgXCJ0ZW1cIjogMTMuOSwgXCJjaXR5XCI6IFwidG9reW9cIn0sXG4gICAgICAgIHtcIm1vbnRoXCI6IDExLCBcInRlbVwiOiA5LjYsIFwiY2l0eVwiOiBcInRva3lvXCJ9LFxuICAgICAgICB7XCJtb250aFwiOiAxMiwgXCJ0ZW1cIjogMCwgXCJjaXR5XCI6IFwibmV3WW9ya1wifSxcbiAgICAgICAge1wibW9udGhcIjogMSwgXCJ0ZW1cIjogMC44LCBcImNpdHlcIjogXCJuZXdZb3JrXCJ9LFxuICAgICAgICB7XCJtb250aFwiOiAyLCBcInRlbVwiOiA1LjcsIFwiY2l0eVwiOiBcIm5ld1lvcmtcIn0sXG4gICAgICAgIHtcIm1vbnRoXCI6IDMsIFwidGVtXCI6IDExLjMsIFwiY2l0eVwiOiBcIm5ld1lvcmtcIn0sXG4gICAgICAgIHtcIm1vbnRoXCI6IDQsIFwidGVtXCI6IDE3LCBcImNpdHlcIjogXCJuZXdZb3JrXCJ9LFxuICAgICAgICB7XCJtb250aFwiOiA1LCBcInRlbVwiOiAyMiwgXCJjaXR5XCI6IFwibmV3WW9ya1wifSxcbiAgICAgICAge1wibW9udGhcIjogNiwgXCJ0ZW1cIjogMjQuOCwgXCJjaXR5XCI6IFwibmV3WW9ya1wifSxcbiAgICAgICAge1wibW9udGhcIjogNywgXCJ0ZW1cIjogMjQuMSwgXCJjaXR5XCI6IFwibmV3WW9ya1wifSxcbiAgICAgICAge1wibW9udGhcIjogOCwgXCJ0ZW1cIjogMjAuMSwgXCJjaXR5XCI6IFwibmV3WW9ya1wifSxcbiAgICAgICAge1wibW9udGhcIjogOSwgXCJ0ZW1cIjogMTQuMSwgXCJjaXR5XCI6IFwibmV3WW9ya1wifSxcbiAgICAgICAge1wibW9udGhcIjogMTAsIFwidGVtXCI6IDguNiwgXCJjaXR5XCI6IFwibmV3WW9ya1wifSxcbiAgICAgICAge1wibW9udGhcIjogMTEsIFwidGVtXCI6IDIuNSwgXCJjaXR5XCI6IFwibmV3WW9ya1wifSxcbiAgICAgICAge1wibW9udGhcIjogMTIsIFwidGVtXCI6IDIsIFwiY2l0eVwiOiBcImJlcmxpblwifSxcbiAgICAgICAge1wibW9udGhcIjogMSwgXCJ0ZW1cIjogMC42LCBcImNpdHlcIjogXCJiZXJsaW5cIn0sXG4gICAgICAgIHtcIm1vbnRoXCI6IDIsIFwidGVtXCI6IDMuNSwgXCJjaXR5XCI6IFwiYmVybGluXCJ9LFxuICAgICAgICB7XCJtb250aFwiOiAzLCBcInRlbVwiOiA4LjQsIFwiY2l0eVwiOiBcImJlcmxpblwifSxcbiAgICAgICAge1wibW9udGhcIjogNCwgXCJ0ZW1cIjogMTMuNSwgXCJjaXR5XCI6IFwiYmVybGluXCJ9LFxuICAgICAgICB7XCJtb250aFwiOiA1LCBcInRlbVwiOiAxNywgXCJjaXR5XCI6IFwiYmVybGluXCJ9LFxuICAgICAgICB7XCJtb250aFwiOiA2LCBcInRlbVwiOiAxOC42LCBcImNpdHlcIjogXCJiZXJsaW5cIn0sXG4gICAgICAgIHtcIm1vbnRoXCI6IDcsIFwidGVtXCI6IDE3LjksIFwiY2l0eVwiOiBcImJlcmxpblwifSxcbiAgICAgICAge1wibW9udGhcIjogOCwgXCJ0ZW1cIjogMTQuMywgXCJjaXR5XCI6IFwiYmVybGluXCJ9LFxuICAgICAgICB7XCJtb250aFwiOiA5LCBcInRlbVwiOiA5LCBcImNpdHlcIjogXCJiZXJsaW5cIn0sXG4gICAgICAgIHtcIm1vbnRoXCI6IDEwLCBcInRlbVwiOiAzLjksIFwiY2l0eVwiOiBcImJlcmxpblwifSxcbiAgICAgICAge1wibW9udGhcIjogMTEsIFwidGVtXCI6IDEsIFwiY2l0eVwiOiBcImJlcmxpblwifVxuICAgIF07XG4gICAgdmFyIGNoYXJ0ID0gbmV3IEdNLkNoYXJ0KHtcbiAgICAgICAgaWQ6ICdjMSdcbiAgICB9KTtcbiAgICBjaGFydC5zb3VyY2UoZGF0YSwge1xuICAgICAgICBtb250aDoge1xuICAgICAgICAgICAgdGlja0NvdW50OiAxMlxuICAgICAgICB9LFxuICAgICAgICB0ZW06IHtcbiAgICAgICAgICAgIHRpY2tDb3VudDogNVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgLy/phY3nva7liLvluqbmloflrZflpKflsI/vvIzkvptQQ+err+aYvuekuueUqCjnp7vliqjnq6/lj6/ku6Xkvb/nlKjpu5jorqTlgLwyMHB4KVxuICAgIGNoYXJ0LmF4aXMoJ3RlbScsIHtcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwic2Fucy1zZXJpZlwiXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBjaGFydC5heGlzKCdtb250aCcsIHtcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwic2Fucy1zZXJpZlwiXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBjaGFydC5hcmVhU3RhY2soKS5wb3NpdGlvbignbW9udGgqdGVtJykuY29sb3IoJ2NpdHknKS5zaGFwZSgnc21vb3RoJykuc3R5bGUoe1xuICAgICAgICBvcGFjaXR5OiAwLjZcbiAgICB9KTtcbiAgICBjaGFydC5yZW5kZXIoKTtcbiAgICBmdW5jdGlvbiBnZXRQb2ludChjYW52YXMsIHgsIHkpIHtcbiAgICAgICAgdmFyIGJib3ggPSBjYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB4OiB4IC0gYmJveC5sZWZ0LFxuICAgICAgICAgICAgeTogeSAtIGJib3gudG9wXG4gICAgICAgIH07XG4gICAgfVxuXG59O1xuXG4vL+afseeKtuWbvlxuZXhwb3J0cy5jYXNlNyA9IGZ1bmN0aW9uIChHTSkge1xuXG4gICAgR00uR2xvYmFsLnBpeGVsUmF0aW8gPSAxO1xuICAgIHZhciBkYXRhID0gW1xuICAgICAgICB7XCJ0ZW1cIjogMTAsIFwiY2l0eVwiOiBcInRva3lvXCJ9LFxuICAgICAgICB7XCJ0ZW1cIjogNCwgXCJjaXR5XCI6IFwibmV3WW9ya1wifSxcbiAgICAgICAge1widGVtXCI6IDMsIFwiY2l0eVwiOiBcImJlcmxpblwifVxuICAgIF07XG4gICAgdmFyIGNoYXJ0ID0gbmV3IEdNLkNoYXJ0KHtcbiAgICAgICAgaWQ6ICdjMSdcbiAgICB9KTtcbiAgICBjaGFydC5zb3VyY2UoZGF0YSwge1xuICAgICAgICB0ZW06IHtcbiAgICAgICAgICAgIHRpY2tDb3VudDogNVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgLy/phY3nva7liLvluqbmloflrZflpKflsI/vvIzkvptQQ+err+aYvuekuueUqCjnp7vliqjnq6/lj6/ku6Xkvb/nlKjpu5jorqTlgLwyMHB4KVxuICAgIGNoYXJ0LmF4aXMoJ2NpdHknLCB7XG4gICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgICBmb250U2l6ZTogMTQsXG4gICAgICAgICAgICBmb250RmFtaWx5OiBcInNhbnMtc2VyaWZcIlxuICAgICAgICB9LFxuICAgICAgICBncmlkOiBudWxsXG4gICAgfSk7XG4gICAgY2hhcnQuYXhpcygndGVtJywge1xuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgZm9udFNpemU6IDE0LFxuICAgICAgICAgICAgZm9udEZhbWlseTogXCJzYW5zLXNlcmlmXCJcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNoYXJ0LmludGVydmFsKCkucG9zaXRpb24oJ2NpdHkqdGVtJykuY29sb3IoJ2NpdHknKTtcbiAgICBjaGFydC5yZW5kZXIoKTtcblxufTtcblxuLy/ljLrpl7Tmn7Hnirblm75cbmV4cG9ydHMuY2FzZTggPSBmdW5jdGlvbiAoR00pIHtcblxuICAgIEdNLkdsb2JhbC5waXhlbFJhdGlvID0gMTtcbiAgICB2YXIgZGF0YSA9IFtcbiAgICAgICAge1wibW9udGhcIjogJ+WRqOS4gCcsIFwidGVtXCI6IFswLCA3XX0sXG4gICAgICAgIHtcIm1vbnRoXCI6ICflkajkuownLCBcInRlbVwiOiBbNywgNV19LFxuICAgICAgICB7XCJtb250aFwiOiAn5ZGo5LiJJywgXCJ0ZW1cIjogWzUsIDkuNV19LFxuICAgICAgICB7XCJtb250aFwiOiAn5ZGo5ZubJywgXCJ0ZW1cIjogWzkuNSwgMTQuNV19LFxuICAgICAgICB7XCJtb250aFwiOiAn5ZGo5LqUJywgXCJ0ZW1cIjogWzE0LjUsIDEwLjJdfSxcbiAgICAgICAge1wibW9udGhcIjogJ+WRqOWFrScsIFwidGVtXCI6IFsxMC4yLCAyMS41XX0sXG4gICAgICAgIHtcIm1vbnRoXCI6ICflkajml6UnLCBcInRlbVwiOiBbMjEuNSwgMjUuMl19XG4gICAgXTtcbiAgICB2YXIgY2hhcnQgPSBuZXcgR00uQ2hhcnQoe1xuICAgICAgICBpZDogJ2MxJ1xuICAgIH0pO1xuICAgIGNoYXJ0LnNvdXJjZShkYXRhLCB7XG4gICAgICAgIHRlbToge1xuICAgICAgICAgICAgdGlja0NvdW50OiA1XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAvL+mFjee9ruWIu+W6puaWh+Wtl+Wkp+Wwj++8jOS+m1BD56uv5pi+56S655SoKOenu+WKqOerr+WPr+S7peS9v+eUqOm7mOiupOWAvDIwcHgpXG4gICAgY2hhcnQuYXhpcygnbW9udGgnLCB7XG4gICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgICBmb250U2l6ZTogMTQsXG4gICAgICAgICAgICBmb250RmFtaWx5OiBcIlNpbVN1blwiXG5cbiAgICAgICAgfSxcbiAgICAgICAgZ3JpZDogbnVsbFxuICAgIH0pO1xuICAgIGNoYXJ0LmF4aXMoJ3RlbScsIHtcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwic2Fucy1zZXJpZlwiXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBjaGFydC5pbnRlcnZhbCgpLnBvc2l0aW9uKCdtb250aCp0ZW0nKS5jb2xvcigndGVtJywgZnVuY3Rpb24gKHRlbSkge1xuICAgICAgICBpZiAodGVtWzFdID49IHRlbVswXSkge1xuICAgICAgICAgICAgcmV0dXJuICdyZWQnXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gJ2dyZWVuJztcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNoYXJ0LnJlbmRlcigpO1xuXG59O1xuXG4vL+WxguWPoOafseeKtuWbvlxuZXhwb3J0cy5jYXNlOSA9IGZ1bmN0aW9uIChHTSkge1xuXG4gICAgR00uR2xvYmFsLnBpeGVsUmF0aW8gPSAxO1xuICAgIHZhciBkYXRhID0gW1xuICAgICAgICB7XCJ0aW1lXCI6IFwi5ZGo5LiAXCIsIFwidGVtXCI6IDYuOSwgXCJjaXR5XCI6IFwidG9reW9cIn0sXG4gICAgICAgIHtcInRpbWVcIjogXCLlkajkuoxcIiwgXCJ0ZW1cIjogOS41LCBcImNpdHlcIjogXCJ0b2t5b1wifSxcbiAgICAgICAge1widGltZVwiOiBcIuWRqOS4iVwiLCBcInRlbVwiOiAxNC41LCBcImNpdHlcIjogXCJ0b2t5b1wifSxcbiAgICAgICAge1widGltZVwiOiBcIuWRqOWbm1wiLCBcInRlbVwiOiAxOC4yLCBcImNpdHlcIjogXCJ0b2t5b1wifSxcbiAgICAgICAge1widGltZVwiOiBcIuWRqOS6lFwiLCBcInRlbVwiOiAyMS41LCBcImNpdHlcIjogXCJ0b2t5b1wifSxcbiAgICAgICAge1widGltZVwiOiBcIuWRqOWFrVwiLCBcInRlbVwiOiAyNS4yLCBcImNpdHlcIjogXCJ0b2t5b1wifSxcbiAgICAgICAge1widGltZVwiOiBcIuWRqOaXpVwiLCBcInRlbVwiOiAyNi41LCBcImNpdHlcIjogXCJ0b2t5b1wifSxcbiAgICAgICAge1widGltZVwiOiBcIuWRqOS4gFwiLCBcInRlbVwiOiAwLjgsIFwiY2l0eVwiOiBcIm5ld1lvcmtcIn0sXG4gICAgICAgIHtcInRpbWVcIjogXCLlkajkuoxcIiwgXCJ0ZW1cIjogNS43LCBcImNpdHlcIjogXCJuZXdZb3JrXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6IFwi5ZGo5LiJXCIsIFwidGVtXCI6IDExLjMsIFwiY2l0eVwiOiBcIm5ld1lvcmtcIn0sXG4gICAgICAgIHtcInRpbWVcIjogXCLlkajlm5tcIiwgXCJ0ZW1cIjogMTcsIFwiY2l0eVwiOiBcIm5ld1lvcmtcIn0sXG4gICAgICAgIHtcInRpbWVcIjogXCLlkajkupRcIiwgXCJ0ZW1cIjogMjIsIFwiY2l0eVwiOiBcIm5ld1lvcmtcIn0sXG4gICAgICAgIHtcInRpbWVcIjogXCLlkajlha1cIiwgXCJ0ZW1cIjogMjQuOCwgXCJjaXR5XCI6IFwibmV3WW9ya1wifSxcbiAgICAgICAge1widGltZVwiOiBcIuWRqOaXpVwiLCBcInRlbVwiOiAyNC4xLCBcImNpdHlcIjogXCJuZXdZb3JrXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6IFwi5ZGo5LiAXCIsIFwidGVtXCI6IDAuNiwgXCJjaXR5XCI6IFwiYmVybGluXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6IFwi5ZGo5LqMXCIsIFwidGVtXCI6IDMuNSwgXCJjaXR5XCI6IFwiYmVybGluXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6IFwi5ZGo5LiJXCIsIFwidGVtXCI6IDguNCwgXCJjaXR5XCI6IFwiYmVybGluXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6IFwi5ZGo5ZubXCIsIFwidGVtXCI6IDEzLjUsIFwiY2l0eVwiOiBcImJlcmxpblwifSxcbiAgICAgICAge1widGltZVwiOiBcIuWRqOS6lFwiLCBcInRlbVwiOiAxNywgXCJjaXR5XCI6IFwiYmVybGluXCJ9LFxuICAgICAgICB7XCJ0aW1lXCI6IFwi5ZGo5YWtXCIsIFwidGVtXCI6IDE4LjYsIFwiY2l0eVwiOiBcImJlcmxpblwifSxcbiAgICAgICAge1widGltZVwiOiBcIuWRqOaXpVwiLCBcInRlbVwiOiAxNy45LCBcImNpdHlcIjogXCJiZXJsaW5cIn1cbiAgICBdO1xuICAgIHZhciBjaGFydCA9IG5ldyBHTS5DaGFydCh7XG4gICAgICAgIGlkOiAnYzEnXG4gICAgfSk7XG4gICAgY2hhcnQuc291cmNlKGRhdGEsIHtcbiAgICAgICAgdGVtOiB7XG4gICAgICAgICAgICB0aWNrQ291bnQ6IDVcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIC8v6YWN572u5Yi75bqm5paH5a2X5aSn5bCP77yM5L6bUEPnq6/mmL7npLrnlKgo56e75Yqo56uv5Y+v5Lul5L2/55So6buY6K6k5YC8MjBweClcbiAgICBjaGFydC5heGlzKCd0aW1lJywge1xuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgZm9udFNpemU6IDE0LFxuICAgICAgICAgICAgZm9udEZhbWlseTogXCJTaW1TdW5cIlxuICAgICAgICB9LFxuICAgICAgICBncmlkOiBudWxsXG4gICAgfSk7XG4gICAgY2hhcnQuYXhpcygndGVtJywge1xuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgZm9udFNpemU6IDE0LFxuICAgICAgICAgICAgZm9udEZhbWlseTogXCJzYW5zLXNlcmlmXCJcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNoYXJ0LmludGVydmFsU3RhY2soKS5wb3NpdGlvbigndGltZSp0ZW0nKS5jb2xvcignY2l0eScpO1xuICAgIGNoYXJ0LnJlbmRlcigpO1xuXG59O1xuXG5cbi8v546J546m5Zu+XG5leHBvcnRzLmNhc2UxMCA9IGZ1bmN0aW9uIChHTSkge1xuXG4gICAgR00uR2xvYmFsLnBpeGVsUmF0aW8gPSAxO1xuICAgIHZhciBkYXRhID0gW1xuICAgICAgICB7XCJ0ZW1cIjogNywgXCJjaXR5XCI6IFwidG9reW9cIn0sXG4gICAgICAgIHtcInRlbVwiOiA0LCBcImNpdHlcIjogXCJuZXdZb3JrXCJ9LFxuICAgICAgICB7XCJ0ZW1cIjogMywgXCJjaXR5XCI6IFwiYmVybGluXCJ9XG4gICAgXTtcbiAgICB2YXIgY2hhcnQgPSBuZXcgR00uQ2hhcnQoe1xuICAgICAgICBpZDogJ2MxJ1xuICAgIH0pO1xuICAgIGNoYXJ0LnNvdXJjZShkYXRhLCB7XG4gICAgICAgIHRlbToge1xuICAgICAgICAgICAgbWluOiAwLFxuICAgICAgICAgICAgbWF4OiAxMFxuICAgICAgICB9XG4gICAgfSk7XG4gICAgY2hhcnQuYXhpcyhmYWxzZSk7XG4gICAgY2hhcnQuY29vcmQoJ3BvbGFyJywge1xuICAgICAgICB0cmFuc3Bvc2VkOiB0cnVlLFxuICAgICAgICBpbm5lcjogMC41XG4gICAgfSk7XG4gICAgY2hhcnQuaW50ZXJ2YWwoKS5wb3NpdGlvbignY2l0eSp0ZW0nKS5jb2xvcignY2l0eScpO1xuICAgIGNoYXJ0LnJlbmRlcigpO1xuXG59O1xuXG4vL+iHquWumuS5iXNoYXBl55qE5p+x54q25Zu+XG5leHBvcnRzLmNhc2UxMSA9IGZ1bmN0aW9uIChHTSkge1xuXG4gICAgR00uR2xvYmFsLnBpeGVsUmF0aW8gPSAxO1xuICAgIHZhciBkYXRhID0gW1xuICAgICAgICB7XCJ0ZW1cIjogNTAwLCBcImNpdHlcIjogXCLkuIDmnIhcIn0sXG4gICAgICAgIHtcInRlbVwiOiAtNTAsIFwiY2l0eVwiOiBcIuS6jOaciFwifSxcbiAgICAgICAge1widGVtXCI6IDQ1MCwgXCJjaXR5XCI6IFwi5LqU5pyIXCJ9LFxuICAgICAgICB7XCJ0ZW1cIjogLTQwLCBcImNpdHlcIjogXCLlha3mnIhcIn0sXG4gICAgICAgIHtcInRlbVwiOiA2OTAsIFwiY2l0eVwiOiBcIuS4g+aciFwifSxcbiAgICAgICAge1widGVtXCI6IDM0NiwgXCJjaXR5XCI6IFwi5YWr5pyIXCJ9LFxuICAgIF07XG4gICAgdmFyIGRyYXdTaGFwZSA9IGZ1bmN0aW9uIChwb2ludHMsIGNhbnZhcywgY2ZnKSB7XG4gICAgICAgIHZhciBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICBjdHgubW92ZVRvKHBvaW50c1swXS54LCBwb2ludHNbMF0ueSk7XG4gICAgICAgIGlmIChwb2ludHMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gcG9pbnRzLmxlbmd0aCAtIDE7IGkrKykge1xuICAgICAgICAgICAgICAgIGN0eC5saW5lVG8ocG9pbnRzW2ldLngsIHBvaW50c1tpXS55KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjdHguZmlsbFN0eWxlID0gY2ZnLmZpbGw7XG4gICAgICAgIGN0eC5maWxsKCk7XG4gICAgfTtcbiAgICAvL+iHquWumuS5iee7mOWItuaVsOaNrueahOeahOW9oueKtlxuICAgIHZhciBTaGFwZSA9IEdNLlNoYXBlO1xuICAgIFNoYXBlLnJlZ2lzdFNoYXBlKCdpbnRlcnZhbCcsICdwb2x5Z29uJywge1xuICAgICAgICBnZXRTaGFwZVBvaW50czogZnVuY3Rpb24gKGNmZykge1xuICAgICAgICAgICAgdmFyIHggPSBjZmcueDtcbiAgICAgICAgICAgIHZhciB5ID0gY2ZnLnk7XG4gICAgICAgICAgICB2YXIgeTAgPSBjZmcueTA7XG4gICAgICAgICAgICB2YXIgd2lkdGggPSBjZmcuc2l6ZTtcbiAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAge3g6IHggLSB3aWR0aCAvIDIsIHk6IHkwfSxcbiAgICAgICAgICAgICAgICB7eDogeCwgeTogeX0sXG4gICAgICAgICAgICAgICAge3g6IHggKyB3aWR0aCAvIDIsIHk6IHkwfVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfSxcbiAgICAgICAgZHJhd1NoYXBlOiBmdW5jdGlvbiAoY2ZnLCBjYW52YXMpIHtcbiAgICAgICAgICAgIHZhciBwb2ludHMgPSB0aGlzLnBhcnNlUG9pbnRzKGNmZy5wb2ludHMpO1xuICAgICAgICAgICAgdmFyIHN0eWxlID0gY2ZnLnN0eWxlIHx8IHt9O1xuICAgICAgICAgICAgc3R5bGUuZmlsbCA9IGNmZy5jb2xvcjtcbiAgICAgICAgICAgIGRyYXdTaGFwZShwb2ludHMsIGNhbnZhcywgc3R5bGUpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgdmFyIGNoYXJ0ID0gbmV3IEdNLkNoYXJ0KHtcbiAgICAgICAgaWQ6ICdjMSdcbiAgICB9KTtcbiAgICBjaGFydC5zb3VyY2UoZGF0YSwge1xuICAgICAgICB0ZW06IHtcbiAgICAgICAgICAgIHRpY2tDb3VudDogNSxcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNoYXJ0LmF4aXMoJ2NpdHknLCB7XG4gICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgICBmb250U2l6ZTogMTQsXG4gICAgICAgICAgICBmb250RmFtaWx5OiAnU2ltU3VuJ1xuICAgICAgICB9LFxuICAgICAgICBsaW5lOiBudWxsLFxuICAgICAgICBncmlkOiBudWxsXG4gICAgfSk7XG4gICAgY2hhcnQuYXhpcygndGVtJywge1xuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgZm9udFNpemU6IDE0LFxuICAgICAgICAgICAgZm9udEZhbWlseTogJ3NhbnMtc2VyaWYnXG4gICAgICAgIH0sXG4gICAgICAgIGdyaWQ6IHtcbiAgICAgICAgICAgIHN0cm9rZTogJyNmOGY4ZjgnLFxuICAgICAgICB9XG4gICAgfSk7XG4gICAgY2hhcnQuaW50ZXJ2YWwoKS5wb3NpdGlvbignY2l0eSp0ZW0nKS5jb2xvcigndGVtKmNpdHknLCBmdW5jdGlvbiAodGVtLCBjaXR5KSB7XG4gICAgICAgIGlmIChjaXR5ID09PSAn5YWr5pyIJykge1xuICAgICAgICAgICAgcmV0dXJuICcjZjU2MjNhJztcbiAgICAgICAgfVxuICAgICAgICBpZiAodGVtID49IDApIHtcbiAgICAgICAgICAgIHJldHVybiAnI2Y4YmRhZCc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRlbSA8IDApIHtcbiAgICAgICAgICAgIHJldHVybiAnIzk5ZDZjMCc7XG4gICAgICAgIH1cbiAgICB9KS5zaGFwZSgncG9seWdvbicpO1xuICAgIC8vIOe7mOWItuaVsOaNrlxuICAgIGNoYXJ0LnJlbmRlcigpO1xuXG59O1xuXG4vL+mlvOWbvlxuZXhwb3J0cy5jYXNlMTIgPSBmdW5jdGlvbiAoR00pIHtcblxuICAgIEdNLkdsb2JhbC5waXhlbFJhdGlvID0gMTtcbiAgICB2YXIgZGF0YSA9IFtcbiAgICAgICAge2E6ICcxJywgYjogMC4zLCBjOiAnMSd9LFxuICAgICAgICB7YTogJzEnLCBiOiAwLjMsIGM6ICcyJ30sXG4gICAgICAgIHthOiAnMScsIGI6IDAuNCwgYzogJzMnfVxuICAgIF07XG4gICAgdmFyIGNoYXJ0ID0gbmV3IEdNLkNoYXJ0KHtcbiAgICAgICAgaWQ6ICdjMSdcbiAgICB9KTtcbiAgICBjaGFydC5zb3VyY2UoZGF0YSk7XG4gICAgY2hhcnQuY29vcmQoJ3BvbGFyJywge1xuICAgICAgICB0cmFuc3Bvc2VkOiB0cnVlLFxuICAgICAgICBpbm5lcjogMFxuICAgIH0pO1xuICAgIGNoYXJ0LmF4aXMoZmFsc2UpO1xuICAgIGNoYXJ0LmludGVydmFsU3RhY2soKS5wb3NpdGlvbignYSpiJykuY29sb3IoJ2MnKTtcbiAgICBjaGFydC5yZW5kZXIoKTtcblxufTtcblxuLy/ltYzlpZfppbzlm75cbmV4cG9ydHMuY2FzZTEzID0gZnVuY3Rpb24gKEdNKSB7XG5cblxuICAgIEdNLkdsb2JhbC5waXhlbFJhdGlvID0gMTtcbiAgICB2YXIgZGF0YSA9IFtcbiAgICAgICAge2E6ICcxJywgYjogMC4yLCBjOiAnMSd9LFxuICAgICAgICB7YTogJzInLCBiOiAwLjUsIGM6ICcxJ30sXG4gICAgICAgIHthOiAnMycsIGI6IDAuNCwgYzogJzEnfSxcbiAgICAgICAge2E6ICcxJywgYjogMC44LCBjOiAnMid9LFxuICAgICAgICB7YTogJzInLCBiOiAwLjUsIGM6ICcyJ30sXG4gICAgICAgIHthOiAnMycsIGI6IDAuNiwgYzogJzInfVxuICAgIF07XG4gICAgdmFyIGNoYXJ0ID0gbmV3IEdNLkNoYXJ0KHtcbiAgICAgICAgaWQ6ICdjMSdcbiAgICB9KTtcbiAgICBjaGFydC5zb3VyY2UoZGF0YSk7XG4gICAgY2hhcnQuY29vcmQoJ3BvbGFyJywge1xuICAgICAgICB0cmFuc3Bvc2VkOiB0cnVlLFxuICAgICAgICBpbm5lcjogMC41XG4gICAgfSk7XG4gICAgY2hhcnQuYXhpcyhmYWxzZSk7XG4gICAgY2hhcnQuaW50ZXJ2YWxTdGFjaygpLnBvc2l0aW9uKCdhKmInKS5jb2xvcignYycpO1xuICAgIGNoYXJ0LnJlbmRlcigpO1xuXG5cbn07XG5cbi8v546r55Gw6aW85Zu+XG5leHBvcnRzLmNhc2UxNCA9IGZ1bmN0aW9uIChHTSkge1xuXG5cbiAgICBHTS5HbG9iYWwucGl4ZWxSYXRpbyA9IDE7XG4gICAgdmFyIGRhdGEgPSBbXG4gICAgICAgIHtcInRlbVwiOiA3LCBcImNpdHlcIjogXCJ0b2t5b1wifSxcbiAgICAgICAge1widGVtXCI6IDQsIFwiY2l0eVwiOiBcIm5ld1lvcmtcIn0sXG4gICAgICAgIHtcInRlbVwiOiAzLCBcImNpdHlcIjogXCJiZXJsaW5cIn1cbiAgICBdO1xuICAgIHZhciBjaGFydCA9IG5ldyBHTS5DaGFydCh7XG4gICAgICAgIGlkOiAnYzEnXG4gICAgfSk7XG4gICAgY2hhcnQuc291cmNlKGRhdGEsIHtcbiAgICAgICAgdGVtOiB7XG4gICAgICAgICAgICBtaW46IDAsXG4gICAgICAgICAgICBuaWNlOiBmYWxzZVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgY2hhcnQuY29vcmQoJ3BvbGFyJywge1xuICAgICAgICBpbm5lcjogMFxuICAgIH0pO1xuICAgIGNoYXJ0LmF4aXMoZmFsc2UpO1xuICAgIGNoYXJ0LmludGVydmFsKCkucG9zaXRpb24oJ2NpdHkqdGVtJykuY29sb3IoJ2NpdHknKTtcbiAgICBjaGFydC5yZW5kZXIoKTtcblxuXG59O1xuXG4vL+mbt+i+vuWbvlxuZXhwb3J0cy5jYXNlMTUgPSBmdW5jdGlvbiAoR00pIHtcblxuXG4gICAgR00uR2xvYmFsLnBpeGVsUmF0aW8gPSAxO1xuICAgIHZhciBkYXRhID0gW1xuICAgICAgICB7bmFtZTogJ+W8oOmjnicsIHByb3BzOiAn5pm65YqbJywgdmFsdWU6IDY1fSxcbiAgICAgICAge25hbWU6ICflvKDpo54nLCBwcm9wczogJ+atpuWKmycsIHZhbHVlOiA5N30sXG4gICAgICAgIHtuYW1lOiAn5byg6aOeJywgcHJvcHM6ICfmlL/msrsnLCB2YWx1ZTogNTB9LFxuICAgICAgICB7bmFtZTogJ+W8oOmjnicsIHByb3BzOiAn57uf5biFJywgdmFsdWU6IDkyfSxcbiAgICAgICAge25hbWU6ICflvKDpo54nLCBwcm9wczogJ+W/oOivmicsIHZhbHVlOiAxMDB9LFxuICAgICAgICB7bmFtZTogJ+WFs+e+vScsIHByb3BzOiAn5pm65YqbJywgdmFsdWU6IDgwfSxcbiAgICAgICAge25hbWU6ICflhbPnvr0nLCBwcm9wczogJ+atpuWKmycsIHZhbHVlOiA5NH0sXG4gICAgICAgIHtuYW1lOiAn5YWz5769JywgcHJvcHM6ICfmlL/msrsnLCB2YWx1ZTogNzB9LFxuICAgICAgICB7bmFtZTogJ+WFs+e+vScsIHByb3BzOiAn57uf5biFJywgdmFsdWU6IDk1fSxcbiAgICAgICAge25hbWU6ICflhbPnvr0nLCBwcm9wczogJ+W/oOivmicsIHZhbHVlOiA5OX1cbiAgICBdO1xuICAgIHZhciBjaGFydCA9IG5ldyBHTS5DaGFydCh7XG4gICAgICAgIGlkOiAnYzEnXG4gICAgfSk7XG4gICAgY2hhcnQuY29vcmQoJ3BvbGFyJyk7XG4gICAgY2hhcnQuc291cmNlKGRhdGEsIHtcbiAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgIG1pbjogMCxcbiAgICAgICAgICAgIHRpY2tJbnRlcnZhbDogMjBcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIC8v6YWN572u5Yi75bqm5paH5a2X5aSn5bCP77yM5L6bUEPnq6/mmL7npLrnlKgo56e75Yqo56uv5Y+v5Lul5L2/55So6buY6K6k5YC8MjBweClcbiAgICBjaGFydC5heGlzKCdwcm9wcycsIHtcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwiU2ltU3VuXCJcbiAgICAgICAgfSxcbiAgICAgICAgbGluZTogbnVsbFxuICAgIH0pO1xuICAgIGNoYXJ0LmF4aXMoJ3ZhbHVlJywge1xuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgZm9udFNpemU6IDE0LFxuICAgICAgICAgICAgZm9udEZhbWlseTogXCJzYW5zLXNlcmlmXCJcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNoYXJ0LmxpbmUoKS5wb3NpdGlvbigncHJvcHMqdmFsdWUnKS5jb2xvcignbmFtZScpO1xuICAgIGNoYXJ0LnJlbmRlcigpO1xuXG5cbn07XG5cbi8v5bim57yp5pS+5Yqo55S755qE5Yy65Z+f6Zu36L6+5Zu+XG5leHBvcnRzLmNhc2UxNiA9IGZ1bmN0aW9uIChHTSkge1xuXG4gICAgR00uR2xvYmFsLnBpeGVsUmF0aW8gPSAxO1xuICAgIHZhciBkYXRhID0gW1xuICAgICAgICB7bmFtZTogJ+W8oOmjnicsIHByb3BzOiAn5pm65YqbJywgdmFsdWU6IDY1fSxcbiAgICAgICAge25hbWU6ICflvKDpo54nLCBwcm9wczogJ+atpuWKmycsIHZhbHVlOiA5N30sXG4gICAgICAgIHtuYW1lOiAn5byg6aOeJywgcHJvcHM6ICfmlL/msrsnLCB2YWx1ZTogNTB9LFxuICAgICAgICB7bmFtZTogJ+W8oOmjnicsIHByb3BzOiAn57uf5biFJywgdmFsdWU6IDkyfSxcbiAgICAgICAge25hbWU6ICflvKDpo54nLCBwcm9wczogJ+W/oOivmicsIHZhbHVlOiAxMDB9LFxuICAgICAgICB7bmFtZTogJ+WFs+e+vScsIHByb3BzOiAn5pm65YqbJywgdmFsdWU6IDgwfSxcbiAgICAgICAge25hbWU6ICflhbPnvr0nLCBwcm9wczogJ+atpuWKmycsIHZhbHVlOiA5NH0sXG4gICAgICAgIHtuYW1lOiAn5YWz5769JywgcHJvcHM6ICfmlL/msrsnLCB2YWx1ZTogNzB9LFxuICAgICAgICB7bmFtZTogJ+WFs+e+vScsIHByb3BzOiAn57uf5biFJywgdmFsdWU6IDk1fSxcbiAgICAgICAge25hbWU6ICflhbPnvr0nLCBwcm9wczogJ+W/oOivmicsIHZhbHVlOiA5OX1cbiAgICBdO1xuICAgIHZhciBjaGFydCA9IG5ldyBHTS5DaGFydCh7XG4gICAgICAgIGlkOiAnYzEnXG4gICAgfSk7XG4gICAgY2hhcnQuY29vcmQoJ3BvbGFyJyk7XG4gICAgY2hhcnQuc291cmNlKGRhdGEsIHtcbiAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgIG1pbjogMCxcbiAgICAgICAgICAgIHRpY2tJbnRlcnZhbDogMjBcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIC8v6YWN572u5Yi75bqm5paH5a2X5aSn5bCP77yM5L6bUEPnq6/mmL7npLrnlKgo56e75Yqo56uv5Y+v5Lul5L2/55So6buY6K6k5YC8MjBweClcbiAgICBjaGFydC5heGlzKCdwcm9wcycsIHtcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwiU2ltU3VuXCJcbiAgICAgICAgfSxcbiAgICAgICAgbGluZTogbnVsbFxuICAgIH0pO1xuICAgIGNoYXJ0LmF4aXMoJ3ZhbHVlJywge1xuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgZm9udFNpemU6IDE0LFxuICAgICAgICAgICAgZm9udEZhbWlseTogXCJzYW5zLXNlcmlmXCJcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNoYXJ0LmFyZWEoKS5wb3NpdGlvbigncHJvcHMqdmFsdWUnKS5jb2xvcignbmFtZScpLnN0eWxlKHtcbiAgICAgICAgb3BhY2l0eTogMC42XG4gICAgfSk7XG4gICAgLy8geOWSjHnovbTlkIzml7bnvKnmlL7nmoTliqjnlLtcbiAgLy8gIGNoYXJ0LmFuaW1hdGUoKS5zY2FsZXh5KCk7XG4gICAgY2hhcnQucmVuZGVyKCk7XG5cbn1cblxuLy/ogqHnpajlm75cbmV4cG9ydHMuY2FzZTE3ID0gZnVuY3Rpb24gKEdNKSB7XG5cbiAgICB2YXIgVXRpbCA9IEdNLlV0aWw7XG4gICAgR00uR2xvYmFsLnBpeGVsUmF0aW8gPSAxO1xuICAgIC8v6I635Y+W5pys5Zyw5pWw5o2uXG4gICAgdmFyIGRhdGEgPSBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRpbWU6IFwiMjAxNS0xMS0xOVwiLFxuICAgICAgICAgICAgc3RhcnQ6IDguMTgsXG4gICAgICAgICAgICBtYXg6IDguMzMsXG4gICAgICAgICAgICBtaW46IDcuOTgsXG4gICAgICAgICAgICBlbmQ6IDguMzIsXG4gICAgICAgICAgICB2b2x1bW46IDE4MTAsXG4gICAgICAgICAgICBtb25leTogMTQ3MjMuNTZcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdGltZTogXCIyMDE1LTExLTE4XCIsXG4gICAgICAgICAgICBzdGFydDogOC4zNyxcbiAgICAgICAgICAgIG1heDogOC42LFxuICAgICAgICAgICAgbWluOiA4LjAzLFxuICAgICAgICAgICAgZW5kOiA4LjA5LFxuICAgICAgICAgICAgdm9sdW1uOiAyNzkwLjM3LFxuICAgICAgICAgICAgbW9uZXk6IDIzMzA5LjE5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRpbWU6IFwiMjAxNS0xMS0xN1wiLFxuICAgICAgICAgICAgc3RhcnQ6IDguNyxcbiAgICAgICAgICAgIG1heDogOC43OCxcbiAgICAgICAgICAgIG1pbjogOC4zMixcbiAgICAgICAgICAgIGVuZDogOC4zNyxcbiAgICAgICAgICAgIHZvbHVtbjogMzcyOS4wNCxcbiAgICAgICAgICAgIG1vbmV5OiAzMTcwOS43MVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0aW1lOiBcIjIwMTUtMTEtMTZcIixcbiAgICAgICAgICAgIHN0YXJ0OiA4LjE4LFxuICAgICAgICAgICAgbWF4OiA4LjY5LFxuICAgICAgICAgICAgbWluOiA4LjA1LFxuICAgICAgICAgICAgZW5kOiA4LjYyLFxuICAgICAgICAgICAgdm9sdW1uOiAzMDk1LjQ0LFxuICAgICAgICAgICAgbW9uZXk6IDI2MTAwLjY5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRpbWU6IFwiMjAxNS0xMS0xM1wiLFxuICAgICAgICAgICAgc3RhcnQ6IDguMDEsXG4gICAgICAgICAgICBtYXg6IDguNzUsXG4gICAgICAgICAgICBtaW46IDcuOTcsXG4gICAgICAgICAgICBlbmQ6IDguNDEsXG4gICAgICAgICAgICB2b2x1bW46IDU4MTUuNTgsXG4gICAgICAgICAgICBtb25leTogNDg1NjIuMzdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdGltZTogXCIyMDE1LTExLTEyXCIsXG4gICAgICAgICAgICBzdGFydDogNy43NixcbiAgICAgICAgICAgIG1heDogOC4xOCxcbiAgICAgICAgICAgIG1pbjogNy42MSxcbiAgICAgICAgICAgIGVuZDogOC4xNSxcbiAgICAgICAgICAgIHZvbHVtbjogNDc0Mi42LFxuICAgICAgICAgICAgbW9uZXk6IDM3NTY1LjM2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRpbWU6IFwiMjAxNS0xMS0xMVwiLFxuICAgICAgICAgICAgc3RhcnQ6IDcuNTUsXG4gICAgICAgICAgICBtYXg6IDcuODEsXG4gICAgICAgICAgICBtaW46IDcuNDksXG4gICAgICAgICAgICBlbmQ6IDcuOCxcbiAgICAgICAgICAgIHZvbHVtbjogMzEzMy44MixcbiAgICAgICAgICAgIG1vbmV5OiAyNDA2NS40MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0aW1lOiBcIjIwMTUtMTEtMTBcIixcbiAgICAgICAgICAgIHN0YXJ0OiA3LjUsXG4gICAgICAgICAgICBtYXg6IDcuNjgsXG4gICAgICAgICAgICBtaW46IDcuNDQsXG4gICAgICAgICAgICBlbmQ6IDcuNTcsXG4gICAgICAgICAgICB2b2x1bW46IDI2NzAuMzUsXG4gICAgICAgICAgICBtb25leTogMjAyMTAuNThcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdGltZTogXCIyMDE1LTExLTA5XCIsXG4gICAgICAgICAgICBzdGFydDogNy42NSxcbiAgICAgICAgICAgIG1heDogNy42NixcbiAgICAgICAgICAgIG1pbjogNy4zLFxuICAgICAgICAgICAgZW5kOiA3LjU4LFxuICAgICAgICAgICAgdm9sdW1uOiAyODQxLjc5LFxuICAgICAgICAgICAgbW9uZXk6IDIxMzQ0LjM2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRpbWU6IFwiMjAxNS0xMS0wNlwiLFxuICAgICAgICAgICAgc3RhcnQ6IDcuNTIsXG4gICAgICAgICAgICBtYXg6IDcuNzEsXG4gICAgICAgICAgICBtaW46IDcuNDgsXG4gICAgICAgICAgICBlbmQ6IDcuNjQsXG4gICAgICAgICAgICB2b2x1bW46IDI3MjUuNDQsXG4gICAgICAgICAgICBtb25leTogMjA3MjEuNTFcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdGltZTogXCIyMDE1LTExLTA1XCIsXG4gICAgICAgICAgICBzdGFydDogNy40OCxcbiAgICAgICAgICAgIG1heDogNy41NyxcbiAgICAgICAgICAgIG1pbjogNy4yOSxcbiAgICAgICAgICAgIGVuZDogNy40OCxcbiAgICAgICAgICAgIHZvbHVtbjogMzUyMC44NSxcbiAgICAgICAgICAgIG1vbmV5OiAyNjE0MC44M1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0aW1lOiBcIjIwMTUtMTEtMDRcIixcbiAgICAgICAgICAgIHN0YXJ0OiA3LjAxLFxuICAgICAgICAgICAgbWF4OiA3LjUsXG4gICAgICAgICAgICBtaW46IDcuMDEsXG4gICAgICAgICAgICBlbmQ6IDcuNDYsXG4gICAgICAgICAgICB2b2x1bW46IDM1OTEuNDcsXG4gICAgICAgICAgICBtb25leTogMjYyODUuNTJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdGltZTogXCIyMDE1LTExLTAzXCIsXG4gICAgICAgICAgICBzdGFydDogNy4xLFxuICAgICAgICAgICAgbWF4OiA3LjE3LFxuICAgICAgICAgICAgbWluOiA2LjgyLFxuICAgICAgICAgICAgZW5kOiA3LFxuICAgICAgICAgICAgdm9sdW1uOiAyMDI5LjIxLFxuICAgICAgICAgICAgbW9uZXk6IDE0MjAyLjMzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRpbWU6IFwiMjAxNS0xMS0wMlwiLFxuICAgICAgICAgICAgc3RhcnQ6IDcuMDksXG4gICAgICAgICAgICBtYXg6IDcuNDQsXG4gICAgICAgICAgICBtaW46IDYuOTMsXG4gICAgICAgICAgICBlbmQ6IDcuMTcsXG4gICAgICAgICAgICB2b2x1bW46IDMxOTEuMzEsXG4gICAgICAgICAgICBtb25leTogMjMyMDUuMTFcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdGltZTogXCIyMDE1LTEwLTMwXCIsXG4gICAgICAgICAgICBzdGFydDogNi45OCxcbiAgICAgICAgICAgIG1heDogNy4yNyxcbiAgICAgICAgICAgIG1pbjogNi44NCxcbiAgICAgICAgICAgIGVuZDogNy4xOCxcbiAgICAgICAgICAgIHZvbHVtbjogMzUyMi42MSxcbiAgICAgICAgICAgIG1vbmV5OiAyNTA4My40NFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0aW1lOiBcIjIwMTUtMTAtMjlcIixcbiAgICAgICAgICAgIHN0YXJ0OiA2Ljk0LFxuICAgICAgICAgICAgbWF4OiA3LjIsXG4gICAgICAgICAgICBtaW46IDYuOCxcbiAgICAgICAgICAgIGVuZDogNy4wNSxcbiAgICAgICAgICAgIHZvbHVtbjogMjc1Mi4yNyxcbiAgICAgICAgICAgIG1vbmV5OiAxOTMyOC40NFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0aW1lOiBcIjIwMTUtMTAtMjhcIixcbiAgICAgICAgICAgIHN0YXJ0OiA3LjAxLFxuICAgICAgICAgICAgbWF4OiA3LjE0LFxuICAgICAgICAgICAgbWluOiA2LjgsXG4gICAgICAgICAgICBlbmQ6IDYuODUsXG4gICAgICAgICAgICB2b2x1bW46IDIzMTEuMTEsXG4gICAgICAgICAgICBtb25leTogMTYxMzcuMzJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdGltZTogXCIyMDE1LTEwLTI3XCIsXG4gICAgICAgICAgICBzdGFydDogNi45MSxcbiAgICAgICAgICAgIG1heDogNy4zMSxcbiAgICAgICAgICAgIG1pbjogNi40OCxcbiAgICAgICAgICAgIGVuZDogNy4xOCxcbiAgICAgICAgICAgIHZvbHVtbjogMzE3Mi45LFxuICAgICAgICAgICAgbW9uZXk6IDIxODI3LjNcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdGltZTogXCIyMDE1LTEwLTI2XCIsXG4gICAgICAgICAgICBzdGFydDogNi45LFxuICAgICAgICAgICAgbWF4OiA3LjA4LFxuICAgICAgICAgICAgbWluOiA2Ljg3LFxuICAgICAgICAgICAgZW5kOiA2Ljk1LFxuICAgICAgICAgICAgdm9sdW1uOiAyNzY5LjMxLFxuICAgICAgICAgICAgbW9uZXk6IDE5MzM3LjQ0XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRpbWU6IFwiMjAxNS0xMC0yM1wiLFxuICAgICAgICAgICAgc3RhcnQ6IDYuNzEsXG4gICAgICAgICAgICBtYXg6IDYuODUsXG4gICAgICAgICAgICBtaW46IDYuNTgsXG4gICAgICAgICAgICBlbmQ6IDYuNzksXG4gICAgICAgICAgICB2b2x1bW46IDI0ODMuMTgsXG4gICAgICAgICAgICBtb25leTogMTY3MTQuMzFcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdGltZTogXCIyMDE1LTEwLTIyXCIsXG4gICAgICAgICAgICBzdGFydDogNi4zOCxcbiAgICAgICAgICAgIG1heDogNi42NyxcbiAgICAgICAgICAgIG1pbjogNi4zNCxcbiAgICAgICAgICAgIGVuZDogNi42NSxcbiAgICAgICAgICAgIHZvbHVtbjogMjIyNS44OCxcbiAgICAgICAgICAgIG1vbmV5OiAxNDQ2NS41NlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0aW1lOiBcIjIwMTUtMTAtMjFcIixcbiAgICAgICAgICAgIHN0YXJ0OiA3LjA4LFxuICAgICAgICAgICAgbWF4OiA3LjEsXG4gICAgICAgICAgICBtaW46IDYuNDEsXG4gICAgICAgICAgICBlbmQ6IDYuNDEsXG4gICAgICAgICAgICB2b2x1bW46IDI4OTEuNDcsXG4gICAgICAgICAgICBtb25leTogMTk1ODUuOThcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdGltZTogXCIyMDE1LTEwLTIwXCIsXG4gICAgICAgICAgICBzdGFydDogNi44OCxcbiAgICAgICAgICAgIG1heDogNy4xOSxcbiAgICAgICAgICAgIG1pbjogNi44NSxcbiAgICAgICAgICAgIGVuZDogNy4xMixcbiAgICAgICAgICAgIHZvbHVtbjogMjM4OS42MixcbiAgICAgICAgICAgIG1vbmV5OiAxNjgxMy41OFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0aW1lOiBcIjIwMTUtMTAtMTlcIixcbiAgICAgICAgICAgIHN0YXJ0OiA3LjEsXG4gICAgICAgICAgICBtYXg6IDcuMTQsXG4gICAgICAgICAgICBtaW46IDYuOCxcbiAgICAgICAgICAgIGVuZDogNi45NCxcbiAgICAgICAgICAgIHZvbHVtbjogMjc4Ni42MSxcbiAgICAgICAgICAgIG1vbmV5OiAxOTQ3NC43MlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0aW1lOiBcIjIwMTUtMTAtMTZcIixcbiAgICAgICAgICAgIHN0YXJ0OiA2LjkyLFxuICAgICAgICAgICAgbWF4OiA3LjM4LFxuICAgICAgICAgICAgbWluOiA2LjczLFxuICAgICAgICAgICAgZW5kOiA3LjE1LFxuICAgICAgICAgICAgdm9sdW1uOiAzMjg5LjI3LFxuICAgICAgICAgICAgbW9uZXk6IDIyOTYzLjk3XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRpbWU6IFwiMjAxNS0xMC0xNVwiLFxuICAgICAgICAgICAgc3RhcnQ6IDYuNjMsXG4gICAgICAgICAgICBtYXg6IDYuOSxcbiAgICAgICAgICAgIG1pbjogNi42LFxuICAgICAgICAgICAgZW5kOiA2Ljg5LFxuICAgICAgICAgICAgdm9sdW1uOiAyNDQwLjM3LFxuICAgICAgICAgICAgbW9uZXk6IDE2NTc1Ljg0XG4gICAgICAgIH1cbiAgICBdO1xuICAgIC8v5pWw5o2u5aSE55CGXG4gICAgZGF0YS5zb3J0KGZ1bmN0aW9uIChvYmoxLCBvYmoyKSB7XG4gICAgICAgIHJldHVybiBvYmoxLnRpbWUgPiBvYmoyLnRpbWUgPyAxIDogLTE7XG4gICAgfSk7XG4gICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgb2JqLnJhbmdlID0gW29iai5zdGFydCwgb2JqLmVuZCwgb2JqLm1heCwgb2JqLm1pbl07XG4gICAgICAgIG9iai50cmVuZCA9IChvYmouc3RhcnQgPD0gb2JqLmVuZCkgPyAwIDogMTtcbiAgICB9KTtcbiAgICB2YXIgY2hhcnQgPSBuZXcgR00uQ2hhcnQoe1xuICAgICAgICBpZDogJ2MxJ1xuICAgIH0pO1xuICAgIC8v6YWN572u5Yi75bqm5paH5a2X5aSn5bCP77yM5L6bUEPnq6/mmL7npLrnlKgo56e75Yqo56uv5Y+v5Lul5L2/55So6buY6K6k5YC8MjBweClcbiAgICBjaGFydC5heGlzKCdyYW5nZScsIHtcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwic2Fucy1zZXJpZlwiXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAvL+mFjee9rnRpbWXliLvluqbmloflrZfmoLflvI9cbiAgICB2YXIgbGFiZWwgPSB7XG4gICAgICAgIGZpbGw6ICcjOTc5Nzk3JyxcbiAgICAgICAgZm9udDogJzE0cHggc2Fucy1zZXJpZicsXG4gICAgICAgIG9mZnNldDogNlxuICAgIH07XG4gICAgY2hhcnQuYXhpcygndGltZScsIHtcbiAgICAgICAgbGFiZWw6IGZ1bmN0aW9uICh0ZXh0LCBpbmRleCwgdG90YWwpIHtcbiAgICAgICAgICAgIHZhciBjZmcgPSBVdGlsLm1peCh7fSwgbGFiZWwpO1xuICAgICAgICAgICAgLy8g56ys5LiA5Liq54K55bem5a+56b2Q77yM5pyA5ZCO5LiA5Liq54K55Y+z5a+56b2Q77yM5YW25L2Z5bGF5Lit77yM5Y+q5pyJ5LiA5Liq54K55pe25bem5a+56b2QXG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgICAgICAgICAgICBjZmcudGV4dEFsaWduID0gJ3N0YXJ0JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmRleCA+IDAgJiYgaW5kZXggPT09IHRvdGFsIC0gMSkge1xuICAgICAgICAgICAgICAgIGNmZy50ZXh0QWxpZ24gPSAnZW5kJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjZmc7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBjaGFydC5zb3VyY2UoZGF0YSwge1xuICAgICAgICByYW5nZToge1xuICAgICAgICAgICAgdGlja0NvdW50OiA1XG4gICAgICAgIH0sXG4gICAgICAgIHRpbWU6IHtcbiAgICAgICAgICAgIHRpY2tDb3VudDogM1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgY2hhcnQuc2NoZW1hKCkucG9zaXRpb24oJ3RpbWUqcmFuZ2UnKVxuICAgICAgICAuY29sb3IoJ3RyZW5kJywgZnVuY3Rpb24gKHRyZW5kKSB7XG4gICAgICAgICAgICByZXR1cm4gWycjQzAwMDAwJywgJyMxOUIyNEInXVt0cmVuZF07XG4gICAgICAgIH0pXG4gICAgICAgIC5zaGFwZSgnY2FuZGxlJyk7XG4gICAgY2hhcnQucmVuZGVyKCk7XG5cbn07XG5cbi8v5Y+MIFkg6L20XG5leHBvcnRzLmNhc2UxOCA9IGZ1bmN0aW9uIChHTSkge1xuICAgIEdNLkdsb2JhbC5waXhlbFJhdGlvID0gMTtcbiAgICB2YXIgZGF0YSA9IFtcbiAgICAgICAge1widGltZVwiOiBcIuWRqOS4gFwiLCBcInRlbVwiOiA2LjksIFwicmFpblwiOiAxMH0sXG4gICAgICAgIHtcInRpbWVcIjogXCLlkajkuoxcIiwgXCJ0ZW1cIjogOS41LCBcInJhaW5cIjogMTN9LFxuICAgICAgICB7XCJ0aW1lXCI6IFwi5ZGo5LiJXCIsIFwidGVtXCI6IDE0LjUsIFwicmFpblwiOiAxNH0sXG4gICAgICAgIHtcInRpbWVcIjogXCLlkajlm5tcIiwgXCJ0ZW1cIjogMTguMiwgXCJyYWluXCI6IDEwfSxcbiAgICAgICAge1widGltZVwiOiBcIuWRqOS6lFwiLCBcInRlbVwiOiAyMS41LCBcInJhaW5cIjogMTJ9LFxuICAgICAgICB7XCJ0aW1lXCI6IFwi5ZGo5YWtXCIsIFwidGVtXCI6IDI1LjIsIFwicmFpblwiOiAxNn0sXG4gICAgICAgIHtcInRpbWVcIjogXCLlkajml6VcIiwgXCJ0ZW1cIjogMjYuNSwgXCJyYWluXCI6IDEzfSxcbiAgICBdO1xuICAgIHZhciBjaGFydCA9IG5ldyBHTS5DaGFydCh7XG4gICAgICAgIGlkOiAnYzEnXG4gICAgfSk7XG4gICAgY2hhcnQuc291cmNlKGRhdGEsIHtcbiAgICAgICAgdGVtOiB7XG4gICAgICAgICAgICB0aWNrQ291bnQ6IDUsXG4gICAgICAgICAgICBtYXg6IDMwLFxuICAgICAgICAgICAgbWluOiAwXG4gICAgICAgIH0sXG4gICAgICAgIHJhaW46IHtcbiAgICAgICAgICAgIHRpY2tDb3VudDogNSxcbiAgICAgICAgICAgIG1pbjogMFxuICAgICAgICB9XG4gICAgfSk7XG4gICAgLy/phY3nva7liLvluqbmloflrZflpKflsI/vvIzkvptQQ+err+aYvuekuueUqCjnp7vliqjnq6/lj6/ku6Xkvb/nlKjpu5jorqTlgLwyMHB4KVxuICAgIGNoYXJ0LmF4aXMoJ3RpbWUnLCB7XG4gICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgICBmb250U2l6ZTogMTQsXG4gICAgICAgICAgICBmb250RmFtaWx5OiBcIlNpbVN1blwiXG4gICAgICAgIH0sXG4gICAgICAgIGdyaWQ6IG51bGxcbiAgICB9KTtcbiAgICBjaGFydC5heGlzKCd0ZW0nLCB7XG4gICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgICBmb250U2l6ZTogMTQsXG4gICAgICAgICAgICBmb250RmFtaWx5OiBcInNhbnMtc2VyaWZcIlxuICAgICAgICB9XG4gICAgfSk7XG4gICAgY2hhcnQuYXhpcygncmFpbicsIHtcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwic2Fucy1zZXJpZlwiXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBjaGFydC5pbnRlcnZhbCgpLnBvc2l0aW9uKCd0aW1lKnRlbScpO1xuICAgIGNoYXJ0LmxpbmUoKS5wb3NpdGlvbigndGltZSpyYWluJykuY29sb3IoJyM1ZWQ0NzAnKS5zaXplKDIpLnNoYXBlKCdzbW9vdGgnKTtcbiAgICBjaGFydC5wb2ludCgpLnBvc2l0aW9uKCd0aW1lKnJhaW4nKS5jb2xvcignIzVlZDQ3MCcpO1xuICAgIGNoYXJ0LnJlbmRlcigpO1xufTtcblxuZXhwb3J0cy5jYXNlMTkgPSBmdW5jdGlvbiAoR00pIHtcblxuXG4gICAgR00uR2xvYmFsLnBpeGVsUmF0aW8gPSAxOy8v5Y+M57K+5bqmXG4gICAgdmFyIFNoYXBlID0gR00uU2hhcGU7XG4gICAgdmFyIEcgPSBHTS5HO1xuICAgIHZhciBkYXRhID0gW3twb2ludGVyOiAn5b2T5YmN5pS255uKJywgdmFsdWU6IDUsIGxlbmd0aDogMiwgeTogMS4wNX1dO1xuICAgIC8v6Ieq5a6a5LmJ57uY5Yi25pWw5o2u55qE55qE5b2i54q2ICAgICAgXG4gICAgU2hhcGUucmVnaXN0U2hhcGUoJ3BvaW50JywgJ2Rhc2hCb2FyZCcsIHtcbiAgICAgICAgZ2V0U2hhcGVQb2ludHM6IGZ1bmN0aW9uIChjZmcpIHtcbiAgICAgICAgICAgIHZhciB4ID0gY2ZnLng7XG4gICAgICAgICAgICB2YXIgeSA9IGNmZy55O1xuICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICB7eDogeCwgeTogeX0sXG4gICAgICAgICAgICAgICAge3g6IHgsIHk6IDAuNX1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAgZHJhd1NoYXBlOiBmdW5jdGlvbiAoY2ZnLCBjYW52YXMpIHtcbiAgICAgICAgICAgIHZhciBwb2ludDEgPSBjZmcucG9pbnRzWzBdO1xuICAgICAgICAgICAgdmFyIHBvaW50MiA9IGNmZy5wb2ludHNbMV07XG4gICAgICAgICAgICBwb2ludDEgPSB0aGlzLnBhcnNlUG9pbnQocG9pbnQxKTtcbiAgICAgICAgICAgIHBvaW50MiA9IHRoaXMucGFyc2VQb2ludChwb2ludDIpO1xuICAgICAgICAgICAgRy5kcmF3TGluZXMoW3BvaW50MSwgcG9pbnQyXSwgY2FudmFzLCB7XG4gICAgICAgICAgICAgICAgc3Ryb2tlOiAnIzE4YjdkNicsXG4gICAgICAgICAgICAgICAgbGluZVdpZHRoOiAyXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHZhciB0ZXh0ID0gY2ZnLm9yaWdpbi5fb3JpZ2luLnZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICBHLmRyYXdUZXh0KHRleHQgKyAnJScsIGNmZy5jZW50ZXIsIGNhbnZhcywge1xuICAgICAgICAgICAgICAgIGZpbGxTdHlsZTogJyNmNzViNWInLFxuICAgICAgICAgICAgICAgIGZvbnQ6ICczMHB4IHNlcmlmJyxcbiAgICAgICAgICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgIHRleHRCYXNlbGluZTogJ2JvdHRvbSdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgRy5kcmF3VGV4dChjZmcub3JpZ2luLl9vcmlnaW4ucG9pbnRlciwgY2ZnLmNlbnRlciwgY2FudmFzLCB7XG4gICAgICAgICAgICAgICAgZmlsbFN0eWxlOiAnI2NjYycsXG4gICAgICAgICAgICAgICAgZm9udDogJzMwcHggU2ltU3VuJyxcbiAgICAgICAgICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgIHRleHRCYXNlbGluZTogJ3RvcCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgdmFyIGNoYXJ0ID0gbmV3IEdNLkNoYXJ0KHtcbiAgICAgICAgaWQ6ICdjMSdcbiAgICB9KTtcbiAgICBjaGFydC5zb3VyY2UoZGF0YSwge1xuICAgICAgICAndmFsdWUnOiB7dHlwZTogJ2xpbmVhcicsIG1pbjogMCwgbWF4OiAxNSwgdGlja0NvdW50OiA2fSxcbiAgICAgICAgJ2xlbmd0aCc6IHt0eXBlOiAnbGluZWFyJywgbWluOiAwLCBtYXg6IDEwfSxcbiAgICAgICAgeToge3R5cGU6ICdsaW5lYXInLCBtaW46IDAsIG1heDogMX1cbiAgICB9KTtcbiAgICBjaGFydC5jb29yZCgncG9sYXInLCB7XG4gICAgICAgIGlubmVyOiAwLFxuICAgICAgICBzdGFydEFuZ2xlOiAtMS4yNSAqIE1hdGguUEksXG4gICAgICAgIGVuZEFuZ2xlOiAwLjI1ICogTWF0aC5QSVxuICAgIH0pO1xuICAgIC8v6YWN572udmFsdWXovbTliLvluqbnur9cbiAgICBjaGFydC5heGlzKCd2YWx1ZScsIHtcbiAgICAgICAgdGlja0xpbmU6IHtcbiAgICAgICAgICAgIHN0cm9rZVN0eWxlOiAnI2I5ZTZlZicsXG4gICAgICAgICAgICBsaW5lV2lkdGg6IDIsXG4gICAgICAgICAgICB2YWx1ZTogLTVcbiAgICAgICAgfSxcbiAgICAgICAgLy9sYWJlbDogbnVsbCxcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwic2VyaWZcIlxuICAgICAgICB9LFxuICAgICAgICBncmlkOiBudWxsLFxuICAgICAgICBsaW5lOiBudWxsXG4gICAgfSk7XG4gICAgY2hhcnQuYXhpcygneScsIGZhbHNlKTtcbiAgICAvL+e7mOWItuS7quihqOebmOi+heWKqeWFg+e0oFxuICAgIGNoYXJ0Lmd1aWRlKCkuYXJjKFswLCAxLjA1XSwgWzQuOCwgMS4wNV0sIHtcbiAgICAgICAgc3Ryb2tlU3R5bGU6ICcjMThiN2Q2JyxcbiAgICAgICAgbGluZVdpZHRoOiA1LFxuICAgICAgICBsaW5lQ2FwOiAncm91bmQnXG4gICAgfSk7XG4gICAgY2hhcnQuZ3VpZGUoKS5hcmMoWzUuMiwgMS4wNV0sIFs5LjgsIDEuMDVdLCB7XG4gICAgICAgIHN0cm9rZVN0eWxlOiAnI2NjYycsXG4gICAgICAgIGxpbmVXaWR0aDogNSxcbiAgICAgICAgbGluZUNhcDogJ3JvdW5kJ1xuICAgIH0pO1xuICAgIGNoYXJ0Lmd1aWRlKCkuYXJjKFsxMC4yLCAxLjA1XSwgWzE1LCAxLjA1XSwge1xuICAgICAgICBzdHJva2VTdHlsZTogJyNjY2MnLFxuICAgICAgICBsaW5lV2lkdGg6IDUsXG4gICAgICAgIGxpbmVDYXA6ICdyb3VuZCdcbiAgICB9KTtcbiAgICBjaGFydC5ndWlkZSgpLmFyYyhbMCwgMS4yXSwgWzE1LCAxLjJdLCB7XG4gICAgICAgIHN0cm9rZVN0eWxlOiAnI2NjYycsXG4gICAgICAgIGxpbmVXaWR0aDogMVxuICAgIH0pO1xuICAgIGNoYXJ0Lmd1aWRlKCkudGV4dChbLTAuNSwgMS4zXSwgJzAuMDAlJywge1xuICAgICAgICBmaWxsU3R5bGU6ICcjY2NjJyxcbiAgICAgICAgZm9udDogJzE4cHggc2VyaWYnLFxuICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInXG4gICAgfSk7XG4gICAgY2hhcnQuZ3VpZGUoKS50ZXh0KFs3LjUsIDAuN10sICc3LjUwJScsIHtcbiAgICAgICAgZmlsbFN0eWxlOiAnI2NjYycsXG4gICAgICAgIGZvbnQ6ICcxOHB4IHNlcmlmJyxcbiAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJ1xuICAgIH0pO1xuICAgIGNoYXJ0Lmd1aWRlKCkudGV4dChbMTUuNSwgMS4zXSwgJzE1LjAwJScsIHtcbiAgICAgICAgZmlsbFN0eWxlOiAnI2NjYycsXG4gICAgICAgIGZvbnQ6ICcxOHB4IHNlcmlmJyxcbiAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJ1xuICAgIH0pO1xuICAgIGNoYXJ0LnBvaW50KCkucG9zaXRpb24oJ3ZhbHVlKnknKS5zaXplKCdsZW5ndGgnKS5jb2xvcignIzE4YjdkNicpLnNoYXBlKCdkYXNoQm9hcmQnKTtcbiAgICBjaGFydC5yZW5kZXIoKTtcblxuXG59O1xuXG5cbi8v5bim57yp5pS+5Yqo55S75ZKM6Ieq5a6a5LmJ6IOM5pmv55qE5p+x54q25Zu+XG5leHBvcnRzLmNhc2UyMSA9IGZ1bmN0aW9uICgpIHtcblxuXG59O1xuLy/luKblubPpk7rliqjnlLvnmoTlpJrnsbvlnovnur/lm75cbmV4cG9ydHMuY2FzZTIyID0gZnVuY3Rpb24gKCkge1xufTtcblxuLy/luKbnvKnmlL7liqjnlLvnmoTmqKrlkJHmn7Hnirblm75cbmV4cG9ydHMuY2FzZTIzID0gZnVuY3Rpb24gKCkge1xufTtcbi8v5bim5bmz6ZO65Yqo55S755qE546v5b2i6aW85Zu+XG5leHBvcnRzLmNhc2UyNCA9IGZ1bmN0aW9uICgpIHtcblxuXG59O1xuLy/luKZodG1s6L6F5Yqp5YWD57Sg55qE5oqY57q/5Zu+XG5leHBvcnRzLmNhc2UyNSA9IGZ1bmN0aW9uIChHTSkge1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9jYXNlLmpzXG4vLyBtb2R1bGUgaWQgPSAxNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9