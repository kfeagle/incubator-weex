<template>
  <div class="container">
    <list class="list" loadmore="loadmore" loadmoreoffset="500">
      <cell repeat="{{row in rows}}" append="tree">
        <div class="item">
          <text class="item-title" style="text-align:{{row.align}};background-color:{{row.bg}} ">{{row.message}}</text>
        </div>
      </cell>
    </list>
    <input
            type="text"
            placeholder="请输入聊天信息"
            class="input"
            autofocus="false"
            value=""
            onchange="onchange"
            oninput="oninput"
            id = "input"
    />
    <div style="flex-direction: row; justify-content: center;">
      <text class="button" onclick="{{connect}}">connect</text>
      <text class="button" onclick="{{send}}">send</text>
      <text class="button" onclick="{{close}}">close</text>
    </div>
    <text style="color: #000000;height: 80">{{info}}</text>
  </div>
</template>

<style>
  .input {
    font-size: 40;
    height: 80;
    width: 600;
    margin-bottom: 40px;
  }
  .button {
    font-size: 36;
    width: 150;
    color: #41B883;
    text-align: center;
    padding-top: 10;
    padding-bottom: 10;
    border-width: 2;
    border-style: solid;
    margin-right: 20;
    margin-bottom: 20px;
    border-color: rgb(162, 217, 192);
    background-color: rgba(162, 217, 192, 0.2);
  }
  .container{
    flex:1;
    justify-content: center;
    align-items: center;
    /*background-color: #f8f8f8;*/
    flex-direction: column;
    border-top-style:solid;
    border-top-width:2;
    border-top-color:#DFDFDF;
  }
  .list {
    flex:1;
    width:750;
    /*transform:rotate(180deg);*/
    justify-content: center;
    align-items: center;
    /*background-color: #abcdef;*/
    flex-direction: column;
    border-top-style:solid;
    border-top-width:2;
    border-top-color:#DFDFDF;
  }
  .row {

  }
  .item {
    justify-content: center;
    /*border-bottom-width: 2px;*/
    /*border-bottom-color: #c0c0c0;*/
    height: 100px;
    padding:20px;
    /*transform:rotate(180deg);*/
  }
  .item-title {
    font-size:30px;
  }
</style>

<script>
  var dom = require('@weex-module/dom');
  var websocket = require('@weex-module/webSocket');
  module.exports = {
    data: {
      rows:[],
      connectinfo: '',
      sendinfo: '',
      onopeninfo: '',
      onmessage: '',
      oncloseinfo: '',
      onerrorinfo: '',
      closeinfo: '',
      txtInput:'',
      info:'',
      message:'',
      align:'left',
      bg:'white',
      from_client_id:''
    },
    methods: {
      insert: function(e) {
        this.rows.push({id:999})
        dom.scrollToElement(this.$el('foot'), { offset: 0 })
      },
      connect:function() {
        websocket.WebSocket('ws://chat.workerman.net:7272/','');
        var self = this;
        self.info = 'connecting...'
        websocket.onopen = function(e)
        {
          self.info = 'websocket open';
          var loginData='{"type":"login","client_name":"游客","room_id":"1"}';
          self.login(loginData);
        }

        websocket.onmessage = function(e)
        {
          self.onmessage = e.data;
          var message = JSON.parse(e.data);
          self.align = 'left';
          self.bg = 'white';
          if(message.type == 'login'){
            self.from_client_id = message.client_id;
            self.info = 'type is login';
          }
          if(self.from_client_id == message.from_client_id)
          {
            self.align = 'right';
            self.bg = '#00CD00';
          }
          self.info =  message.type;
          if(message.type == 'ping'){
            self.info = 'type is ping';
          }
          self.info =  e.data;
          if(message.content){
            self.rows.push({message:message.content,align:self.align,bg:self.bg});
          }


        }
        websocket.onerror = function(e)
        {
          self.onerrorinfo = e.data;
        }
        websocket.onclose = function(e)
        {
          self.onopeninfo = '';
          self.onerrorinfo = e.code;
        }
      },
      login:function (loginInfo) {
        websocket.send(loginInfo);
      },
      send:function(e) {

        var input = this.$el('input');
        input.blur();
        var self = this;
        var sendinfo = '{"type":"say","from_client_id":"'+self.from_client_id+'","from_client_name":"'+'游客'+'","to_client_id":"all","content":"'+this.txtInput+'","time":"2017-03-15 01:04:00"}'
        websocket.send(sendinfo);
        this.info = sendinfo;
      },
      oninput: function(event) {
        this.txtInput = event.value;
      },
      close:function(e) {
        websocket.close();
      },
    },
  }
</script>